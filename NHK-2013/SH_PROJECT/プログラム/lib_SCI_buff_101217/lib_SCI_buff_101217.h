/********************************************/
/*				SCI関数						*/
/*					for SH7125 @ HEW		*/
/*					Wrote by conpe_			*/
/*							2010/12/17		*/
/********************************************/

//SCI1用の送受信関数です。

// バッファを使って順次割り込みにより送信
// intprg.cのINT_SCI1_TXI1からintSCI1_tx_buff()を呼び出してね。
// resetprg.cの#define SR_Initは0x00000000にする

// バッファがあふれそうになったら、空くまで待つので注意。


#define Pphi 25				//周辺モジュール動作周波数[MHz]
#define SCI1_TxBuffSize 64	//バッファサイズ

/*********************
SCI1初期化
引数：ボーレート 4800〜115200
**********************/
void SCI1_setup(int);

/*********************
SCI1 文字送信
引数：なし
返値：なし
TDREの割り込みによって動作
**********************/
void intSCI1_tx_buff(void);

/*********************
SCI1 bufferを読む
引数：なし
返値：文字 バッファがないときは0x15
**********************/
char SCI1_read_buff(void);

/*********************
SCI1 bufferに書く
引数：文字
返値：0x00(正常), 0x15(バッファいっぱい)
**********************/
char SCI1_write_buff(char moji);

/*********************
SCI1 printf風
引数：文字列, 変数

対応変換： %c,%s,%d,%x,%X
**********************/
void SCI1_printf(char *, ...);

/*********************
SCI1 1文字送信
引数：文字
返値：バッファがいっぱいだったら0x15
**********************/
char SCI1_tx_char(char);

/*********************
SCI1 文字列送信
引数：文字列
**********************/
void SCI1_tx_str(char *);

/*********************
SCI1 10進数字送信
引数：数字,桁数
返値：なし
longまでの数
**********************/
void SCI1_tx_d(long);

/*********************
SCI1 16進数字送信(小文字)
引数：数字,桁数
返値：なし
longまでの数
**********************/
void SCI1_tx_x(long);

/*********************
SCI1 16進数字送信(大文字)
引数：数字,桁数
返値：なし
longまでの数
**********************/
void SCI1_tx_X(long);

/*********************
SCI1 1文字受信
引数：なし
返値：文字
来るまで待つので注意
**********************/
char SCI1_rx_char(void);

/*********************
SCI1 1文字受信(待ちなし)
引数：なし
返値：文字
呼び出しもとで来てるか確認する必要あり
**********************/
char SCI1_rx_char_nowait(void);

/*********************
SCI1 複数ケタ数字受信
引数：なし
返値：数
enter押すまで読み続け。
unsigned intまでの数
**********************/
unsigned int SCI1_rx_d(void);


/*********************
SCI1 バッファポインタのインクリメント
引数：今のポインタ
返値：次のポインタ
**********************/
unsigned short inc_buff_p(unsigned short);

