C51 COMPILER V9.51   LIN_1_UART_PM                                                         03/21/2014 22:17:43 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE LIN_1_UART_PM
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\LIN_1_UART_PM.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\LIN_1_UART_PM.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\LIN_1_UART_PM.ls
                    -t) CD DB NOIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\LIN_1_UART_PM.ob
                    -j)

line level    source

   1          /*******************************************************************************
   2          * File Name: LIN_1_UART_PM.c
   3          * Version 2.30
   4          *
   5          * Description:
   6          *  This file provides Sleep/WakeUp APIs functionality.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "LIN_1_UART.h"
  18          
  19          
  20          /***************************************
  21          * Local data allocation
  22          ***************************************/
  23          
  24          static LIN_1_UART_BACKUP_STRUCT  LIN_1_UART_backup =
  25          {
  26              /* enableState - disabled */
  27              0u,
  28          };
  29          
  30          
  31          
  32          /*******************************************************************************
  33          * Function Name: LIN_1_UART_SaveConfig
  34          ********************************************************************************
  35          *
  36          * Summary:
  37          *  Saves the current user configuration.
  38          *
  39          * Parameters:
  40          *  None.
  41          *
  42          * Return:
  43          *  None.
  44          *
  45          * Global Variables:
  46          *  LIN_1_UART_backup - modified when non-retention registers are saved.
  47          *
  48          * Reentrant:
  49          *  No.
  50          *
  51          *******************************************************************************/
  52          void LIN_1_UART_SaveConfig(void)
C51 COMPILER V9.51   LIN_1_UART_PM                                                         03/21/2014 22:17:43 PAGE 2   

  53          {
  54   1          #if (CY_UDB_V0)
              
                      #if(LIN_1_UART_CONTROL_REG_REMOVED == 0u)
                          LIN_1_UART_backup.cr = LIN_1_UART_CONTROL_REG;
                      #endif /* End LIN_1_UART_CONTROL_REG_REMOVED */
              
                      #if( (LIN_1_UART_RX_ENABLED) || (LIN_1_UART_HD_ENABLED) )
                          LIN_1_UART_backup.rx_period = LIN_1_UART_RXBITCTR_PERIOD_REG;
                          LIN_1_UART_backup.rx_mask = LIN_1_UART_RXSTATUS_MASK_REG;
                          #if (LIN_1_UART_RXHW_ADDRESS_ENABLED)
                              LIN_1_UART_backup.rx_addr1 = LIN_1_UART_RXADDRESS1_REG;
                              LIN_1_UART_backup.rx_addr2 = LIN_1_UART_RXADDRESS2_REG;
                          #endif /* End LIN_1_UART_RXHW_ADDRESS_ENABLED */
                      #endif /* End LIN_1_UART_RX_ENABLED | LIN_1_UART_HD_ENABLED*/
              
                      #if(LIN_1_UART_TX_ENABLED)
                          #if(LIN_1_UART_TXCLKGEN_DP)
                              LIN_1_UART_backup.tx_clk_ctr = LIN_1_UART_TXBITCLKGEN_CTR_REG;
                              LIN_1_UART_backup.tx_clk_compl = LIN_1_UART_TXBITCLKTX_COMPLETE_REG;
                          #else
                              LIN_1_UART_backup.tx_period = LIN_1_UART_TXBITCTR_PERIOD_REG;
                          #endif /*End LIN_1_UART_TXCLKGEN_DP */
                          LIN_1_UART_backup.tx_mask = LIN_1_UART_TXSTATUS_MASK_REG;
                      #endif /*End LIN_1_UART_TX_ENABLED */
              
              
                  #else /* CY_UDB_V1 */
  81   1      
  82   1              #if(LIN_1_UART_CONTROL_REG_REMOVED == 0u)
                          LIN_1_UART_backup.cr = LIN_1_UART_CONTROL_REG;
                      #endif /* End LIN_1_UART_CONTROL_REG_REMOVED */
  85   1      
  86   1          #endif  /* End CY_UDB_V0 */
  87   1      }
  88          
  89          
  90          /*******************************************************************************
  91          * Function Name: LIN_1_UART_RestoreConfig
  92          ********************************************************************************
  93          *
  94          * Summary:
  95          *  Restores the current user configuration.
  96          *
  97          * Parameters:
  98          *  None.
  99          *
 100          * Return:
 101          *  None.
 102          *
 103          * Global Variables:
 104          *  LIN_1_UART_backup - used when non-retention registers are restored.
 105          *
 106          * Reentrant:
 107          *  No.
 108          *
 109          *******************************************************************************/
 110          void LIN_1_UART_RestoreConfig(void)
 111          {
 112   1      
 113   1          #if (CY_UDB_V0)
              
C51 COMPILER V9.51   LIN_1_UART_PM                                                         03/21/2014 22:17:43 PAGE 3   

                      #if(LIN_1_UART_CONTROL_REG_REMOVED == 0u)
                          LIN_1_UART_CONTROL_REG = LIN_1_UART_backup.cr;
                      #endif /* End LIN_1_UART_CONTROL_REG_REMOVED */
              
                      #if( (LIN_1_UART_RX_ENABLED) || (LIN_1_UART_HD_ENABLED) )
                          LIN_1_UART_RXBITCTR_PERIOD_REG = LIN_1_UART_backup.rx_period;
                          LIN_1_UART_RXSTATUS_MASK_REG = LIN_1_UART_backup.rx_mask;
                          #if (LIN_1_UART_RXHW_ADDRESS_ENABLED)
                              LIN_1_UART_RXADDRESS1_REG = LIN_1_UART_backup.rx_addr1;
                              LIN_1_UART_RXADDRESS2_REG = LIN_1_UART_backup.rx_addr2;
                          #endif /* End LIN_1_UART_RXHW_ADDRESS_ENABLED */
                      #endif  /* End (LIN_1_UART_RX_ENABLED) || (LIN_1_UART_HD_ENABLED) */
              
                      #if(LIN_1_UART_TX_ENABLED)
                          #if(LIN_1_UART_TXCLKGEN_DP)
                              LIN_1_UART_TXBITCLKGEN_CTR_REG = LIN_1_UART_backup.tx_clk_ctr;
                              LIN_1_UART_TXBITCLKTX_COMPLETE_REG = LIN_1_UART_backup.tx_clk_compl;
                          #else
                              LIN_1_UART_TXBITCTR_PERIOD_REG = LIN_1_UART_backup.tx_period;
                          #endif /*End LIN_1_UART_TXCLKGEN_DP */
                          LIN_1_UART_TXSTATUS_MASK_REG = LIN_1_UART_backup.tx_mask;
                      #endif /*End LIN_1_UART_TX_ENABLED */
              
                  #else /* CY_UDB_V1 */
 139   1      
 140   1              #if(LIN_1_UART_CONTROL_REG_REMOVED == 0u)
                          LIN_1_UART_CONTROL_REG = LIN_1_UART_backup.cr;
                      #endif /* End LIN_1_UART_CONTROL_REG_REMOVED */
 143   1      
 144   1          #endif  /* End CY_UDB_V0 */
 145   1      }
 146          
 147          
 148          /*******************************************************************************
 149          * Function Name: LIN_1_UART_Sleep
 150          ********************************************************************************
 151          *
 152          * Summary:
 153          *  Stops and saves the user configuration. Should be called
 154          *  just prior to entering sleep.
 155          *
 156          *
 157          * Parameters:
 158          *  None.
 159          *
 160          * Return:
 161          *  None.
 162          *
 163          * Global Variables:
 164          *  LIN_1_UART_backup - modified when non-retention registers are saved.
 165          *
 166          * Reentrant:
 167          *  No.
 168          *
 169          *******************************************************************************/
 170          void LIN_1_UART_Sleep(void)
 171          {
 172   1      
 173   1          #if(LIN_1_UART_RX_ENABLED || LIN_1_UART_HD_ENABLED)
 174   1              if((LIN_1_UART_RXSTATUS_ACTL_REG  & LIN_1_UART_INT_ENABLE) != 0u)
 175   1              {
 176   2                  LIN_1_UART_backup.enableState = 1u;
C51 COMPILER V9.51   LIN_1_UART_PM                                                         03/21/2014 22:17:43 PAGE 4   

 177   2              }
 178   1              else
 179   1              {
 180   2                  LIN_1_UART_backup.enableState = 0u;
 181   2              }
 182   1          #else
                      if((LIN_1_UART_TXSTATUS_ACTL_REG  & LIN_1_UART_INT_ENABLE) !=0u)
                      {
                          LIN_1_UART_backup.enableState = 1u;
                      }
                      else
                      {
                          LIN_1_UART_backup.enableState = 0u;
                      }
                  #endif /* End LIN_1_UART_RX_ENABLED || LIN_1_UART_HD_ENABLED*/
 192   1      
 193   1          LIN_1_UART_Stop();
 194   1          LIN_1_UART_SaveConfig();
 195   1      }
 196          
 197          
 198          /*******************************************************************************
 199          * Function Name: LIN_1_UART_Wakeup
 200          ********************************************************************************
 201          *
 202          * Summary:
 203          *  Restores and enables the user configuration. Should be called
 204          *  just after awaking from sleep.
 205          *
 206          * Parameters:
 207          *  None.
 208          *
 209          * Return:
 210          *  None.
 211          *
 212          * Global Variables:
 213          *  LIN_1_UART_backup - used when non-retention registers are restored.
 214          *
 215          * Reentrant:
 216          *  No.
 217          *
 218          *******************************************************************************/
 219          void LIN_1_UART_Wakeup(void)
 220          {
 221   1          LIN_1_UART_RestoreConfig();
 222   1          #if( (LIN_1_UART_RX_ENABLED) || (LIN_1_UART_HD_ENABLED) )
 223   1              LIN_1_UART_ClearRxBuffer();
 224   1          #endif /* End (LIN_1_UART_RX_ENABLED) || (LIN_1_UART_HD_ENABLED) */
 225   1          #if(LIN_1_UART_TX_ENABLED || LIN_1_UART_HD_ENABLED)
 226   1              LIN_1_UART_ClearTxBuffer();
 227   1          #endif /* End LIN_1_UART_TX_ENABLED || LIN_1_UART_HD_ENABLED */
 228   1      
 229   1          if(LIN_1_UART_backup.enableState != 0u)
 230   1          {
 231   2              LIN_1_UART_Enable();
 232   2          }
 233   1      }
 234          
 235          
 236          /* [] END OF FILE */
C51 COMPILER V9.51   LIN_1_UART_PM                                                         03/21/2014 22:17:43 PAGE 5   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION LIN_1_UART_SaveConfig (BEGIN)
                                           ; SOURCE LINE # 52
                                           ; SOURCE LINE # 53
                                           ; SOURCE LINE # 87
0000 22                RET     
             ; FUNCTION LIN_1_UART_SaveConfig (END)

             ; FUNCTION LIN_1_UART_RestoreConfig (BEGIN)
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 145
0000 22                RET     
             ; FUNCTION LIN_1_UART_RestoreConfig (END)

             ; FUNCTION LIN_1_UART_Sleep (BEGIN)
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
                                           ; SOURCE LINE # 174
0000 90649A            MOV     DPTR,#0649AH
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 5410              ANL     A,#010H
0008 FF                MOV     R7,A
0009 7E00              MOV     R6,#00H
000B EF                MOV     A,R7
000C 4E                ORL     A,R6
000D 6008              JZ      ?C0003
                                           ; SOURCE LINE # 175
                                           ; SOURCE LINE # 176
000F 900000      R     MOV     DPTR,#LIN_1_UART_backup
0012 7401              MOV     A,#01H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
0015 8005              SJMP    ?C0004
0017         ?C0003:
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 180
0017 900000      R     MOV     DPTR,#LIN_1_UART_backup
001A E4                CLR     A
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 181
001C         ?C0004:
                                           ; SOURCE LINE # 193
001C 120000      E     LCALL   LIN_1_UART_Stop
                                           ; SOURCE LINE # 194
001F 120000      R     LCALL   LIN_1_UART_SaveConfig
                                           ; SOURCE LINE # 195
0022 22                RET     
             ; FUNCTION LIN_1_UART_Sleep (END)

             ; FUNCTION LIN_1_UART_Wakeup (BEGIN)
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
0000 120000      R     LCALL   LIN_1_UART_RestoreConfig
                                           ; SOURCE LINE # 223
0003 120000      E     LCALL   LIN_1_UART_ClearRxBuffer
                                           ; SOURCE LINE # 226
C51 COMPILER V9.51   LIN_1_UART_PM                                                         03/21/2014 22:17:43 PAGE 6   

0006 120000      E     LCALL   LIN_1_UART_ClearTxBuffer
                                           ; SOURCE LINE # 229
0009 900000      R     MOV     DPTR,#LIN_1_UART_backup
000C E0                MOVX    A,@DPTR
000D FF                MOV     R7,A
000E EF                MOV     A,R7
000F 6003              JZ      ?C0007
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
0011 120000      E     LCALL   LIN_1_UART_Enable
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
0014         ?C0007:
0014 22                RET     
             ; FUNCTION LIN_1_UART_Wakeup (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     58    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
