C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.lst) CD DB
                    - NOIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 3.0 Component Pack 7
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  25          
  26          
  27          #if defined(__C51__) || defined(__CX51__)
  28                  #define CYPACKED
  29                  #define CYPACKED_ATTR
  30                  #define CYALIGNED
  31                  
  32              #define CY_CFG_UNUSED
  33                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  34          
  35          
  36          
  37                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  38                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  39                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  40          #else
                      #error Unsupported toolchain
              #endif
  43          
  44          
  45          
  46          /* Clock startup error codes                                                   */
  47          #define CYCLOCKSTART_NO_ERROR    0u
  48          #define CYCLOCKSTART_XTAL_ERROR  1u
  49          #define CYCLOCKSTART_32KHZ_ERROR 2u
  50          #define CYCLOCKSTART_PLL_ERROR   3u
  51          
  52          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  53          /*******************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 2   

  54          * Function Name: CyClockStartupError
  55          ********************************************************************************
  56          * Summary:
  57          *  If an error is encountered during clock configuration (crystal startup error,
  58          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  59          *  the customer, this function will stop in an infinite loop.
  60          *
  61          * Parameters:
  62          *   void
  63          *
  64          * Return:
  65          *   void
  66          *
  67          *******************************************************************************/
  68          CY_CFG_UNUSED
  69          static void CyClockStartupError(uint8 errorCode);
  70          CY_CFG_UNUSED
  71          static void CyClockStartupError(uint8 errorCode)
  72          {
  73   1          /* To remove the compiler warning if errorCode not used.                */
  74   1          errorCode = errorCode;
  75   1      
  76   1          /* `#START CyClockStartupError` */
  77   1      
  78   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  79   1          /* we will end up here to allow the customer to implement something to  */
  80   1          /* deal with the clock condition.                                       */
  81   1      
  82   1          /* `#END` */
  83   1      
  84   1          /* If nothing else, stop here since the clocks have not started         */
  85   1          /* correctly.                                                           */
  86   1          while(1) {}
  87   1      }
  88          #endif
  89          
  90          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  91          /* IOPINS0_0 Address: CYREG_PRT0_DR Size (bytes): 10 */
  92          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x00080758u)
  93          
  94          /* IOPINS0_4 Address: CYREG_PRT4_DM0 Size (bytes): 8 */
  95          #define BS_IOPINS0_4_VAL ((const uint8 CYFAR *)0x00080764u)
  96          
  97          /* IOPINS0_6 Address: CYREG_PRT6_DR Size (bytes): 10 */
  98          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x0008076Cu)
  99          
 100          
 101          /*******************************************************************************
 102          * Function Name: ClockSetup
 103          ********************************************************************************
 104          *
 105          * Summary:
 106          *  Performs the initialization of all of the clocks in the device based on the
 107          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 108          *  clocks and setting the necessary dividers to produce the desired frequency. 
 109          *
 110          * Parameters:
 111          *  void
 112          *
 113          * Return:
 114          *  void
 115          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 3   

 116          *******************************************************************************/
 117          static void ClockSetup(void);
 118          static void ClockSetup(void)
 119          {
 120   1              uint32 timeout;
 121   1              uint8 pllLock;
 122   1      
 123   1      
 124   1              /* Configure Digital Clocks based on settings from Clock DWR */
 125   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x009Bu);
 126   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 127   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x009Bu);
 128   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x18u);
 129   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x0138u);
 130   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x18u);
 131   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x0EA5u);
 132   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x18u);
 133   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0xEA5Fu);
 134   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG4_CFG0 + 0x2u), 0x19u);
 135   1      
 136   1              /* Configure ILO based on settings from Clock DWR */
 137   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 138   1      
 139   1              /* Configure IMO based on settings from Clock DWR */
 140   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 141   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 142   1      
 143   1              /* Configure PLL based on settings from Clock DWR */
 144   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0010u);
 145   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 146   1              /* Wait up to 250us for the PLL to lock */
 147   1              pllLock = 0u;
 148   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 149   1              { 
 150   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 151   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 152   2              }
 153   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 154   1              if (timeout == 0u)
 155   1              {
 156   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 157   2              }
 158   1      
 159   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 160   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 161   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 162   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 163   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 164   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 165   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 166   1      
 167   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x1Fu
             -)));
 168   1      }
 169          
 170          
 171          /* Analog API Functions */
 172          
 173          
 174          /*******************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 4   

 175          * Function Name: AnalogSetDefault
 176          ********************************************************************************
 177          *
 178          * Summary:
 179          *  Sets up the analog portions of the chip to default values based on chip
 180          *  configuration options from the project.
 181          *
 182          * Parameters:
 183          *  void
 184          *
 185          * Return:
 186          *  void
 187          *
 188          *******************************************************************************/
 189          static void AnalogSetDefault(void);
 190          static void AnalogSetDefault(void)
 191          {
 192   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 193   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 194   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 195   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 196   1      }
 197          
 198          
 199          /*******************************************************************************
 200          * Function Name: SetAnalogRoutingPumps
 201          ********************************************************************************
 202          *
 203          * Summary:
 204          * Enables or disables the analog pumps feeding analog routing switches.
 205          * Intended to be called at startup, based on the Vdda system configuration;
 206          * may be called during operation when the user informs us that the Vdda voltage
 207          * crossed the pump threshold.
 208          *
 209          * Parameters:
 210          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 211          *
 212          * Return:
 213          *  void
 214          *
 215          *******************************************************************************/
 216          void SetAnalogRoutingPumps(uint8 enabled)
 217          {
 218   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 219   1              if (enabled != 0u)
 220   1              {
 221   2                      regValue |= 0x00u;
 222   2              }
 223   1              else
 224   1              {
 225   2                      regValue &= (uint8)~0x00u;
 226   2              }
 227   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 228   1      }
 229          
 230          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 231          
 232          
 233          /*******************************************************************************
 234          * Function Name: cyfitter_cfg
 235          ********************************************************************************
 236          * Summary:
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 5   

 237          *  This function is called by the start-up code for the selected device. It
 238          *  performs all of the necessary device configuration based on the design
 239          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 240          *  as Clocks and Pins as well as any component configuration that is necessary.
 241          *
 242          * Parameters:  
 243          *   void
 244          *
 245          * Return:
 246          *   void
 247          *
 248          *******************************************************************************/
 249          
 250          void cyfitter_cfg(void)
 251          {
 252   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 253   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 254   1      
 255   1              {
 256   2      
 257   2                      CYPACKED typedef struct {
 258   2                              void CYFAR *address;
 259   2                              uint16 size;
 260   2                      } CYPACKED_ATTR cfg_memset_t;
 261   2      
 262   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 263   2                              /* address, size */
 264   2                              {(void CYFAR *)(CYREG_PRT1_DR), 48u},
 265   2                              {(void CYFAR *)(CYREG_PRT5_DR), 16u},
 266   2                              {(void CYFAR *)(CYREG_PRT12_DR), 16u},
 267   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 268   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 269   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 270   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 271   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 272   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 273   2                      };
 274   2      
 275   2                      uint8 CYDATA i;
 276   2      
 277   2                      /* Zero out critical memory blocks before beginning configuration */
 278   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 279   2                      {
 280   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 281   3                              CYMEMZERO(ms->address, ms->size);
 282   3                      }
 283   2      
 284   2                      cfg_write_bytes(cfg_byte_table);
 285   2      
 286   2                      /* Enable digital routing */
 287   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 288   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 289   2      
 290   2                      /* Enable UDB array */
 291   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 292   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 293   2              }
 294   1      
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 6   

 295   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 296   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DR), (const void CYFAR *)(BS_IOPINS0_0_VAL), 10u);
 297   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT4_DM0), (const void CYFAR *)(BS_IOPINS0_4_VAL), 8u);
 298   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DR), (const void CYFAR *)(BS_IOPINS0_6_VAL), 10u);
 299   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 300   1      
 301   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 302   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 303   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 304   1              {
 305   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 306   2              }
 307   1      
 308   1      
 309   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 310   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 311   1              /* Setup clocks based on selections from Clock DWR */
 312   1              ClockSetup();
 313   1      
 314   1              /* Perform basic analog initialization to defaults */
 315   1              AnalogSetDefault();
 316   1      
 317   1              /* Configure alternate active mode */
 318   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 319   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 320   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 71
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 86
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
                                           ; SOURCE LINE # 125
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D9B              MOV     R5,#09BH
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 126
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 127
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D9B              MOV     R5,#09BH
001B 7C00              MOV     R4,#00H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 128
0020 904086            MOV     DPTR,#04086H
0023 7418              MOV     A,#018H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 129
0026 7B00              MOV     R3,#00H
0028 7A40              MOV     R2,#040H
002A 7988              MOV     R1,#088H
002C 7D38              MOV     R5,#038H
002E 7C01              MOV     R4,#01H
0030 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 130
0033 90408A            MOV     DPTR,#0408AH
0036 7418              MOV     A,#018H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 131
0039 7B00              MOV     R3,#00H
003B 7A40              MOV     R2,#040H
003D 798C              MOV     R1,#08CH
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 8   

003F 7DA5              MOV     R5,#0A5H
0041 7C0E              MOV     R4,#0EH
0043 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 132
0046 90408E            MOV     DPTR,#0408EH
0049 7418              MOV     A,#018H
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 133
004C 7B00              MOV     R3,#00H
004E 7A40              MOV     R2,#040H
0050 7990              MOV     R1,#090H
0052 7D5F              MOV     R5,#05FH
0054 7CEA              MOV     R4,#0EAH
0056 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 134
0059 904092            MOV     DPTR,#04092H
005C 7419              MOV     A,#019H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
005F 904300            MOV     DPTR,#04300H
0062 7406              MOV     A,#06H
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
0065 904200            MOV     DPTR,#04200H
0068 7403              MOV     A,#03H
006A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
006B 7B0C              MOV     R3,#0CH
006D 7A01              MOV     R2,#01H
006F 7908              MOV     R1,#08H
0071 120000      E     LCALL   _cyread8
0074 9046A1            MOV     DPTR,#046A1H
0077 EF                MOV     A,R7
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 144
0079 7B00              MOV     R3,#00H
007B 7A42              MOV     R2,#042H
007D 7922              MOV     R1,#022H
007F 7D10              MOV     R5,#010H
0081 7C00              MOV     R4,#00H
0083 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 145
0086 7B00              MOV     R3,#00H
0088 7A42              MOV     R2,#042H
008A 7920              MOV     R1,#020H
008C 7D51              MOV     R5,#051H
008E 7C12              MOV     R4,#012H
0090 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 147
0093 900000      R     MOV     DPTR,#pllLock
0096 E4                CLR     A
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
0098 7F19              MOV     R7,#019H
009A 7E00              MOV     R6,#00H
009C 7D00              MOV     R5,#00H
009E 7C00              MOV     R4,#00H
00A0 900000      R     MOV     DPTR,#timeout
00A3 120000      E     LCALL   ?C?LSTXDATA
00A6         ?C0004:
00A6 900000      R     MOV     DPTR,#timeout
00A9 120000      E     LCALL   ?C?LLDXDATA
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 9   

00AC D3                SETB    C
00AD EF                MOV     A,R7
00AE 9400              SUBB    A,#00H
00B0 EE                MOV     A,R6
00B1 9400              SUBB    A,#00H
00B3 404E              JC      ?C0005
00B5 900000      R     MOV     DPTR,#pllLock
00B8 E0                MOVX    A,@DPTR
00B9 FF                MOV     R7,A
00BA EF                MOV     A,R7
00BB 6403              XRL     A,#03H
00BD 6044              JZ      ?C0005
                                           ; SOURCE LINE # 149
                                           ; SOURCE LINE # 150
00BF 904225            MOV     DPTR,#04225H
00C2 E0                MOVX    A,@DPTR
00C3 FF                MOV     R7,A
00C4 EF                MOV     A,R7
00C5 5401              ANL     A,#01H
00C7 FF                MOV     R7,A
00C8 7E00              MOV     R6,#00H
00CA 900000      R     MOV     DPTR,#pllLock
00CD E0                MOVX    A,@DPTR
00CE FE                MOV     R6,A
00CF EE                MOV     A,R6
00D0 25E0              ADD     A,ACC
00D2 FE                MOV     R6,A
00D3 EE                MOV     A,R6
00D4 4F                ORL     A,R7
00D5 FF                MOV     R7,A
00D6 EF                MOV     A,R7
00D7 5403              ANL     A,#03H
00D9 FF                MOV     R7,A
00DA 900000      R     MOV     DPTR,#pllLock
00DD EF                MOV     A,R7
00DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
00DF 7FE0              MOV     R7,#0E0H
00E1 7E01              MOV     R6,#01H
00E3 7D00              MOV     R5,#00H
00E5 7C00              MOV     R4,#00H
00E7 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 152
00EA 900000      R     MOV     DPTR,#timeout
00ED 120000      E     LCALL   ?C?LLDXDATA
00F0 7BFF              MOV     R3,#0FFH
00F2 7AFF              MOV     R2,#0FFH
00F4 79FF              MOV     R1,#0FFH
00F6 78FF              MOV     R0,#0FFH
00F8 120000      E     LCALL   ?C?LADD
00FB 900000      R     MOV     DPTR,#timeout
00FE 120000      E     LCALL   ?C?LSTXDATA
0101 80A3              SJMP    ?C0004
0103         ?C0005:
                                           ; SOURCE LINE # 154
0103 900000      R     MOV     DPTR,#timeout
0106 120000      E     LCALL   ?C?LLDXDATA
0109 EF                MOV     A,R7
010A 4E                ORL     A,R6
010B 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 155
                                           ; SOURCE LINE # 156
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 10  

010D 7F03              MOV     R7,#03H
010F 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 157
0112         ?C0007:
                                           ; SOURCE LINE # 160
0112 7B00              MOV     R3,#00H
0114 7A40              MOV     R2,#040H
0116 7904              MOV     R1,#04H
0118 7D00              MOV     R5,#00H
011A 7C01              MOV     R4,#01H
011C 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 161
011F 904004            MOV     DPTR,#04004H
0122 7407              MOV     A,#07H
0124 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 162
0125 904006            MOV     DPTR,#04006H
0128 E4                CLR     A
0129 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 163
012A 904008            MOV     DPTR,#04008H
012D 7448              MOV     A,#048H
012F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 164
0130 904004            MOV     DPTR,#04004H
0133 E4                CLR     A
0134 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 165
0135 904001            MOV     DPTR,#04001H
0138 7402              MOV     A,#02H
013A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 167
013B 9043A2            MOV     DPTR,#043A2H
013E E0                MOVX    A,@DPTR
013F FF                MOV     R7,A
0140 EF                MOV     A,R7
0141 441F              ORL     A,#01FH
0143 FF                MOV     R7,A
0144 9043A2            MOV     DPTR,#043A2H
0147 EF                MOV     A,R7
0148 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 168
0149 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 192
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 193
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 11  

0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 194
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 216
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 217
                                           ; SOURCE LINE # 218
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 219
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 220
                                           ; SOURCE LINE # 221
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4400              ORL     A,#00H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 224
                                           ; SOURCE LINE # 225
0027 900000      R     MOV     DPTR,#regValue
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 12  

002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 226
0035         ?C0011:
                                           ; SOURCE LINE # 227
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 228
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 251
                                           ; SOURCE LINE # 253
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 255
                                           ; SOURCE LINE # 278
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9409              SUBB    A,#09H
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 279
                                           ; SOURCE LINE # 280
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 281
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 13  

003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 282
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 284
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 287
0063 7B01              MOV     R3,#01H
0065 7A50              MOV     R2,#050H
0067 7903              MOV     R1,#03H
0069 120000      E     LCALL   _cyread8
006C EF                MOV     A,R7
006D 4402              ORL     A,#02H
006F FD                MOV     R5,A
0070 7B01              MOV     R3,#01H
0072 7A50              MOV     R2,#050H
0074 7903              MOV     R1,#03H
0076 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 288
0079 7B01              MOV     R3,#01H
007B 7A50              MOV     R2,#050H
007D 7913              MOV     R1,#013H
007F 120000      E     LCALL   _cyread8
0082 EF                MOV     A,R7
0083 4402              ORL     A,#02H
0085 FD                MOV     R5,A
0086 7B01              MOV     R3,#01H
0088 7A50              MOV     R2,#050H
008A 7913              MOV     R1,#013H
008C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 291
008F 9043A0            MOV     DPTR,#043A0H
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 EF                MOV     A,R7
0095 4440              ORL     A,#040H
0097 FF                MOV     R7,A
0098 9043A0            MOV     DPTR,#043A0H
009B EF                MOV     A,R7
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 292
009D 9043C2            MOV     DPTR,#043C2H
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
00A2 EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 14  

00A3 4410              ORL     A,#010H
00A5 FF                MOV     R7,A
00A6 9043C2            MOV     DPTR,#043C2H
00A9 EF                MOV     A,R7
00AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 293
                                           ; SOURCE LINE # 296
00AB 7B08              MOV     R3,#08H
00AD 7A07              MOV     R2,#07H
00AF 7958              MOV     R1,#058H
00B1 C003              PUSH    AR3
00B3 C002              PUSH    AR2
00B5 C001              PUSH    AR1
00B7 7B00              MOV     R3,#00H
00B9 7A51              MOV     R2,#051H
00BB 7900              MOV     R1,#00H
00BD 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C0 120000      E     LCALL   ?C?PSTXDATA
00C3 D001              POP     AR1
00C5 D002              POP     AR2
00C7 D003              POP     AR3
00C9 7F0A              MOV     R7,#0AH
00CB 7E00              MOV     R6,#00H
00CD 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 297
00D0 7B08              MOV     R3,#08H
00D2 7A07              MOV     R2,#07H
00D4 7964              MOV     R1,#064H
00D6 C003              PUSH    AR3
00D8 C002              PUSH    AR2
00DA C001              PUSH    AR1
00DC 7B00              MOV     R3,#00H
00DE 7A51              MOV     R2,#051H
00E0 7942              MOV     R1,#042H
00E2 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00E5 120000      E     LCALL   ?C?PSTXDATA
00E8 D001              POP     AR1
00EA D002              POP     AR2
00EC D003              POP     AR3
00EE 7F08              MOV     R7,#08H
00F0 7E00              MOV     R6,#00H
00F2 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 298
00F5 7B08              MOV     R3,#08H
00F7 7A07              MOV     R2,#07H
00F9 796C              MOV     R1,#06CH
00FB C003              PUSH    AR3
00FD C002              PUSH    AR2
00FF C001              PUSH    AR1
0101 7B00              MOV     R3,#00H
0103 7A51              MOV     R2,#051H
0105 7960              MOV     R1,#060H
0107 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
010A 120000      E     LCALL   ?C?PSTXDATA
010D D001              POP     AR1
010F D002              POP     AR2
0111 D003              POP     AR3
0113 7F0A              MOV     R7,#0AH
0115 7E00              MOV     R6,#00H
0117 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 299
011A 9044F4            MOV     DPTR,#044F4H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 15  

011D 7401              MOV     A,#01H
011F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 302
0120 904322            MOV     DPTR,#04322H
0123 E0                MOVX    A,@DPTR
0124 FF                MOV     R7,A
0125 EF                MOV     A,R7
0126 4408              ORL     A,#08H
0128 FF                MOV     R7,A
0129 904322            MOV     DPTR,#04322H
012C EF                MOV     A,R7
012D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 303
012E 9046EC            MOV     DPTR,#046ECH
0131 E0                MOVX    A,@DPTR
0132 FF                MOV     R7,A
0133 EF                MOV     A,R7
0134 C3                CLR     C
0135 9405              SUBB    A,#05H
0137 5006              JNC     ?C0016
                                           ; SOURCE LINE # 304
                                           ; SOURCE LINE # 305
0139 904689            MOV     DPTR,#04689H
013C 743A              MOV     A,#03AH
013E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 306
013F         ?C0016:
                                           ; SOURCE LINE # 310
013F 904800            MOV     DPTR,#04800H
0142 74F1              MOV     A,#0F1H
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 312
0145 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 315
0148 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 318
014B 7B00              MOV     R3,#00H
014D 7A43              MOV     R2,#043H
014F 79A0              MOV     R1,#0A0H
0151 C003              PUSH    AR3
0153 C002              PUSH    AR2
0155 C001              PUSH    AR1
0157 7B00              MOV     R3,#00H
0159 7A43              MOV     R2,#043H
015B 79B0              MOV     R1,#0B0H
015D 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0160 120000      E     LCALL   ?C?PSTXDATA
0163 D001              POP     AR1
0165 D002              POP     AR2
0167 D003              POP     AR3
0169 7F0E              MOV     R7,#0EH
016B 7E00              MOV     R6,#00H
016D 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 319
0170 9043B0            MOV     DPTR,#043B0H
0173 E0                MOVX    A,@DPTR
0174 FF                MOV     R7,A
0175 EF                MOV     A,R7
0176 54FD              ANL     A,#0FDH
0178 FF                MOV     R7,A
0179 EF                MOV     A,R7
017A F0                MOVX    @DPTR,A
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/05/2014 19:16:02 PAGE 16  

                                           ; SOURCE LINE # 320
017B 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    846    ----
   CONSTANT SIZE    =     45    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
