C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.lst) CD DB
                    - NOIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 3.0 Component Pack 7
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  25          
  26          
  27          #if defined(__C51__) || defined(__CX51__)
  28                  #define CYPACKED
  29                  #define CYPACKED_ATTR
  30                  #define CYALIGNED
  31                  
  32              #define CY_CFG_UNUSED
  33                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  34          
  35          
  36          
  37                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  38                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  39                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  40          #else
                      #error Unsupported toolchain
              #endif
  43          
  44          
  45          
  46          /* Clock startup error codes                                                   */
  47          #define CYCLOCKSTART_NO_ERROR    0u
  48          #define CYCLOCKSTART_XTAL_ERROR  1u
  49          #define CYCLOCKSTART_32KHZ_ERROR 2u
  50          #define CYCLOCKSTART_PLL_ERROR   3u
  51          
  52          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  53          /*******************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 2   

  54          * Function Name: CyClockStartupError
  55          ********************************************************************************
  56          * Summary:
  57          *  If an error is encountered during clock configuration (crystal startup error,
  58          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  59          *  the customer, this function will stop in an infinite loop.
  60          *
  61          * Parameters:
  62          *   void
  63          *
  64          * Return:
  65          *   void
  66          *
  67          *******************************************************************************/
  68          CY_CFG_UNUSED
  69          static void CyClockStartupError(uint8 errorCode);
  70          CY_CFG_UNUSED
  71          static void CyClockStartupError(uint8 errorCode)
  72          {
  73   1          /* To remove the compiler warning if errorCode not used.                */
  74   1          errorCode = errorCode;
  75   1      
  76   1          /* `#START CyClockStartupError` */
  77   1      
  78   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  79   1          /* we will end up here to allow the customer to implement something to  */
  80   1          /* deal with the clock condition.                                       */
  81   1      
  82   1          /* `#END` */
  83   1      
  84   1          /* If nothing else, stop here since the clocks have not started         */
  85   1          /* correctly.                                                           */
  86   1          while(1) {}
  87   1      }
  88          #endif
  89          
  90          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  91          /* UDB_1_2_1_CONFIG Address: CYDEV_UCFG_B0_P3_U0_BASE Size (bytes): 128 */
  92          #define BS_UDB_1_2_1_CONFIG_VAL ((const uint8 CYFAR *)0x00080B40u)
  93          
  94          /* IOPINS0_7 Address: CYREG_PRT12_DR Size (bytes): 10 */
  95          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)0x00080BC0u)
  96          
  97          /* IOPINS0_1 Address: CYREG_PRT1_DR Size (bytes): 10 */
  98          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x00080BCCu)
  99          
 100          /* IOPINS0_4 Address: CYREG_PRT4_DR Size (bytes): 10 */
 101          #define BS_IOPINS0_4_VAL ((const uint8 CYFAR *)0x00080BD8u)
 102          
 103          /* IOPINS0_6 Address: CYREG_PRT6_DR Size (bytes): 10 */
 104          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x00080BE4u)
 105          
 106          
 107          /*******************************************************************************
 108          * Function Name: ClockSetup
 109          ********************************************************************************
 110          *
 111          * Summary:
 112          *  Performs the initialization of all of the clocks in the device based on the
 113          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 114          *  clocks and setting the necessary dividers to produce the desired frequency. 
 115          *
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 3   

 116          * Parameters:
 117          *  void
 118          *
 119          * Return:
 120          *  void
 121          *
 122          *******************************************************************************/
 123          static void ClockSetup(void);
 124          static void ClockSetup(void)
 125          {
 126   1              uint32 timeout;
 127   1              uint8 pllLock;
 128   1      
 129   1      
 130   1              /* Configure Digital Clocks based on settings from Clock DWR */
 131   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x009Bu);
 132   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 133   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x009Bu);
 134   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x18u);
 135   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG2_CFG0), 0x009Bu);
 136   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG2_CFG0 + 0x2u), 0x18u);
 137   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG3_CFG0), 0x0138u);
 138   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG3_CFG0 + 0x2u), 0x18u);
 139   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG4_CFG0), 0x0EA5u);
 140   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG4_CFG0 + 0x2u), 0x18u);
 141   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG5_CFG0), 0xEA5Fu);
 142   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG5_CFG0 + 0x2u), 0x19u);
 143   1      
 144   1              /* Configure ILO based on settings from Clock DWR */
 145   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x06u);
 146   1      
 147   1              /* Configure IMO based on settings from Clock DWR */
 148   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 149   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 150   1      
 151   1              /* Configure PLL based on settings from Clock DWR */
 152   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0010u);
 153   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 154   1              /* Wait up to 250us for the PLL to lock */
 155   1              pllLock = 0u;
 156   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 157   1              { 
 158   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 159   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 160   2              }
 161   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 162   1              if (timeout == 0u)
 163   1              {
 164   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 165   2              }
 166   1      
 167   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 168   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 169   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 170   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 171   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 172   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 173   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
 174   1      
 175   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x3Fu
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 4   

             -)));
 176   1      }
 177          
 178          
 179          /* Analog API Functions */
 180          
 181          
 182          /*******************************************************************************
 183          * Function Name: AnalogSetDefault
 184          ********************************************************************************
 185          *
 186          * Summary:
 187          *  Sets up the analog portions of the chip to default values based on chip
 188          *  configuration options from the project.
 189          *
 190          * Parameters:
 191          *  void
 192          *
 193          * Return:
 194          *  void
 195          *
 196          *******************************************************************************/
 197          static void AnalogSetDefault(void);
 198          static void AnalogSetDefault(void)
 199          {
 200   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 201   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 202   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 203   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 204   1      }
 205          
 206          
 207          /*******************************************************************************
 208          * Function Name: SetAnalogRoutingPumps
 209          ********************************************************************************
 210          *
 211          * Summary:
 212          * Enables or disables the analog pumps feeding analog routing switches.
 213          * Intended to be called at startup, based on the Vdda system configuration;
 214          * may be called during operation when the user informs us that the Vdda voltage
 215          * crossed the pump threshold.
 216          *
 217          * Parameters:
 218          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 219          *
 220          * Return:
 221          *  void
 222          *
 223          *******************************************************************************/
 224          void SetAnalogRoutingPumps(uint8 enabled)
 225          {
 226   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 227   1              if (enabled != 0u)
 228   1              {
 229   2                      regValue |= 0x00u;
 230   2              }
 231   1              else
 232   1              {
 233   2                      regValue &= (uint8)~0x00u;
 234   2              }
 235   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 236   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 5   

 237          
 238          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 239          
 240          
 241          /*******************************************************************************
 242          * Function Name: cyfitter_cfg
 243          ********************************************************************************
 244          * Summary:
 245          *  This function is called by the start-up code for the selected device. It
 246          *  performs all of the necessary device configuration based on the design
 247          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 248          *  as Clocks and Pins as well as any component configuration that is necessary.
 249          *
 250          * Parameters:  
 251          *   void
 252          *
 253          * Return:
 254          *   void
 255          *
 256          *******************************************************************************/
 257          
 258          void cyfitter_cfg(void)
 259          {
 260   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 261   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 262   1      
 263   1              {
 264   2      
 265   2                      CYPACKED typedef struct {
 266   2                              void CYFAR *address;
 267   2                              uint16 size;
 268   2                      } CYPACKED_ATTR cfg_memset_t;
 269   2      
 270   2      
 271   2                      CYPACKED typedef struct {
 272   2                              void CYFAR *dest;
 273   2                              const void CYFAR *src;
 274   2                              uint16 size;
 275   2                      } CYPACKED_ATTR cfg_memcpy_t;
 276   2      
 277   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 278   2                              /* address, size */
 279   2                              {(void CYFAR *)(CYREG_PRT0_DR), 16u},
 280   2                              {(void CYFAR *)(CYREG_PRT2_DR), 32u},
 281   2                              {(void CYFAR *)(CYREG_PRT5_DR), 16u},
 282   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 283   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 1536u},
 284   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P3_U1_BASE), 2432u},
 285   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 286   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 287   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 288   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 289   2                      };
 290   2      
 291   2                      static const cfg_memcpy_t CYCODE cfg_memcpy_list [] = {
 292   2                              /* dest, src, size */
 293   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P3_U0_BASE), BS_UDB_1_2_1_CONFIG_VAL, 128u},
 294   2                      };
 295   2      
 296   2                      uint8 CYDATA i;
 297   2      
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 6   

 298   2                      /* Zero out critical memory blocks before beginning configuration */
 299   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 300   2                      {
 301   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 302   3                              CYMEMZERO(ms->address, ms->size);
 303   3                      }
 304   2      
 305   2                      /* Copy device configuration data into registers */
 306   2                      for (i = 0u; i < (sizeof(cfg_memcpy_list)/sizeof(cfg_memcpy_list[0])); i++)
 307   2                      {
 308   3                              const cfg_memcpy_t CYCODE * CYDATA mc = &cfg_memcpy_list[i];
 309   3                              void * CYDATA destPtr = mc->dest;
 310   3                              const void * CYDATA srcPtr = mc->src;
 311   3                              uint16 CYDATA numBytes = mc->size;
 312   3                              CYCONFIGCPY(destPtr, srcPtr, numBytes);
 313   3                      }
 314   2      
 315   2                      cfg_write_bytes(cfg_byte_table);
 316   2      
 317   2                      /* Enable digital routing */
 318   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 319   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
 320   2      
 321   2                      /* Enable UDB array */
 322   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 323   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 324   2              }
 325   1      
 326   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 327   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DR), (const void CYFAR *)(BS_IOPINS0_7_VAL), 10u);
 328   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DR), (const void CYFAR *)(BS_IOPINS0_1_VAL), 10u);
 329   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT4_DR), (const void CYFAR *)(BS_IOPINS0_4_VAL), 10u);
 330   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DR), (const void CYFAR *)(BS_IOPINS0_6_VAL), 10u);
 331   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 332   1      
 333   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 334   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 335   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 336   1              {
 337   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 338   2              }
 339   1      
 340   1      
 341   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 342   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 343   1              /* Setup clocks based on selections from Clock DWR */
 344   1              ClockSetup();
 345   1      
 346   1              /* Perform basic analog initialization to defaults */
 347   1              AnalogSetDefault();
 348   1      
 349   1              /* Configure alternate active mode */
 350   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 351   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 352   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 71
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 86
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
                                           ; SOURCE LINE # 131
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D9B              MOV     R5,#09BH
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 132
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 133
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D9B              MOV     R5,#09BH
001B 7C00              MOV     R4,#00H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 134
0020 904086            MOV     DPTR,#04086H
0023 7418              MOV     A,#018H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 135
0026 7B00              MOV     R3,#00H
0028 7A40              MOV     R2,#040H
002A 7988              MOV     R1,#088H
002C 7D9B              MOV     R5,#09BH
002E 7C00              MOV     R4,#00H
0030 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 136
0033 90408A            MOV     DPTR,#0408AH
0036 7418              MOV     A,#018H
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 137
0039 7B00              MOV     R3,#00H
003B 7A40              MOV     R2,#040H
003D 798C              MOV     R1,#08CH
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 8   

003F 7D38              MOV     R5,#038H
0041 7C01              MOV     R4,#01H
0043 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 138
0046 90408E            MOV     DPTR,#0408EH
0049 7418              MOV     A,#018H
004B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 139
004C 7B00              MOV     R3,#00H
004E 7A40              MOV     R2,#040H
0050 7990              MOV     R1,#090H
0052 7DA5              MOV     R5,#0A5H
0054 7C0E              MOV     R4,#0EH
0056 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 140
0059 904092            MOV     DPTR,#04092H
005C 7418              MOV     A,#018H
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 141
005F 7B00              MOV     R3,#00H
0061 7A40              MOV     R2,#040H
0063 7994              MOV     R1,#094H
0065 7D5F              MOV     R5,#05FH
0067 7CEA              MOV     R4,#0EAH
0069 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 142
006C 904096            MOV     DPTR,#04096H
006F 7419              MOV     A,#019H
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 145
0072 904300            MOV     DPTR,#04300H
0075 7406              MOV     A,#06H
0077 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 148
0078 904200            MOV     DPTR,#04200H
007B 7403              MOV     A,#03H
007D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 149
007E 7B0C              MOV     R3,#0CH
0080 7A01              MOV     R2,#01H
0082 7908              MOV     R1,#08H
0084 120000      E     LCALL   _cyread8
0087 9046A1            MOV     DPTR,#046A1H
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 152
008C 7B00              MOV     R3,#00H
008E 7A42              MOV     R2,#042H
0090 7922              MOV     R1,#022H
0092 7D10              MOV     R5,#010H
0094 7C00              MOV     R4,#00H
0096 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 153
0099 7B00              MOV     R3,#00H
009B 7A42              MOV     R2,#042H
009D 7920              MOV     R1,#020H
009F 7D51              MOV     R5,#051H
00A1 7C12              MOV     R4,#012H
00A3 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 155
00A6 900000      R     MOV     DPTR,#pllLock
00A9 E4                CLR     A
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 9   

00AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 156
00AB 7F19              MOV     R7,#019H
00AD 7E00              MOV     R6,#00H
00AF 7D00              MOV     R5,#00H
00B1 7C00              MOV     R4,#00H
00B3 900000      R     MOV     DPTR,#timeout
00B6 120000      E     LCALL   ?C?LSTXDATA
00B9         ?C0004:
00B9 900000      R     MOV     DPTR,#timeout
00BC 120000      E     LCALL   ?C?LLDXDATA
00BF D3                SETB    C
00C0 EF                MOV     A,R7
00C1 9400              SUBB    A,#00H
00C3 EE                MOV     A,R6
00C4 9400              SUBB    A,#00H
00C6 404E              JC      ?C0005
00C8 900000      R     MOV     DPTR,#pllLock
00CB E0                MOVX    A,@DPTR
00CC FF                MOV     R7,A
00CD EF                MOV     A,R7
00CE 6403              XRL     A,#03H
00D0 6044              JZ      ?C0005
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 158
00D2 904225            MOV     DPTR,#04225H
00D5 E0                MOVX    A,@DPTR
00D6 FF                MOV     R7,A
00D7 EF                MOV     A,R7
00D8 5401              ANL     A,#01H
00DA FF                MOV     R7,A
00DB 7E00              MOV     R6,#00H
00DD 900000      R     MOV     DPTR,#pllLock
00E0 E0                MOVX    A,@DPTR
00E1 FE                MOV     R6,A
00E2 EE                MOV     A,R6
00E3 25E0              ADD     A,ACC
00E5 FE                MOV     R6,A
00E6 EE                MOV     A,R6
00E7 4F                ORL     A,R7
00E8 FF                MOV     R7,A
00E9 EF                MOV     A,R7
00EA 5403              ANL     A,#03H
00EC FF                MOV     R7,A
00ED 900000      R     MOV     DPTR,#pllLock
00F0 EF                MOV     A,R7
00F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 159
00F2 7FE0              MOV     R7,#0E0H
00F4 7E01              MOV     R6,#01H
00F6 7D00              MOV     R5,#00H
00F8 7C00              MOV     R4,#00H
00FA 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 160
00FD 900000      R     MOV     DPTR,#timeout
0100 120000      E     LCALL   ?C?LLDXDATA
0103 7BFF              MOV     R3,#0FFH
0105 7AFF              MOV     R2,#0FFH
0107 79FF              MOV     R1,#0FFH
0109 78FF              MOV     R0,#0FFH
010B 120000      E     LCALL   ?C?LADD
010E 900000      R     MOV     DPTR,#timeout
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 10  

0111 120000      E     LCALL   ?C?LSTXDATA
0114 80A3              SJMP    ?C0004
0116         ?C0005:
                                           ; SOURCE LINE # 162
0116 900000      R     MOV     DPTR,#timeout
0119 120000      E     LCALL   ?C?LLDXDATA
011C EF                MOV     A,R7
011D 4E                ORL     A,R6
011E 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 163
                                           ; SOURCE LINE # 164
0120 7F03              MOV     R7,#03H
0122 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 165
0125         ?C0007:
                                           ; SOURCE LINE # 168
0125 7B00              MOV     R3,#00H
0127 7A40              MOV     R2,#040H
0129 7904              MOV     R1,#04H
012B 7D00              MOV     R5,#00H
012D 7C01              MOV     R4,#01H
012F 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 169
0132 904004            MOV     DPTR,#04004H
0135 7407              MOV     A,#07H
0137 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 170
0138 904006            MOV     DPTR,#04006H
013B E4                CLR     A
013C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 171
013D 904008            MOV     DPTR,#04008H
0140 7448              MOV     A,#048H
0142 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
0143 904004            MOV     DPTR,#04004H
0146 E4                CLR     A
0147 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
0148 904001            MOV     DPTR,#04001H
014B 7402              MOV     A,#02H
014D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 175
014E 9043A2            MOV     DPTR,#043A2H
0151 E0                MOVX    A,@DPTR
0152 FF                MOV     R7,A
0153 EF                MOV     A,R7
0154 443F              ORL     A,#03FH
0156 FF                MOV     R7,A
0157 9043A2            MOV     DPTR,#043A2H
015A EF                MOV     A,R7
015B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 176
015C 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 198
                                           ; SOURCE LINE # 199
                                           ; SOURCE LINE # 200
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 11  

0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 201
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 202
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 204
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 224
0000 900000      R     MOV     DPTR,#enabled
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 225
                                           ; SOURCE LINE # 226
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 227
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 229
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 12  

001D 4400              ORL     A,#00H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 230
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 232
                                           ; SOURCE LINE # 233
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 234
0035         ?C0011:
                                           ; SOURCE LINE # 235
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 236
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 259
                                           ; SOURCE LINE # 261
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 299
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 940A              SUBB    A,#0AH
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 300
                                           ; SOURCE LINE # 301
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 13  

0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 302
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 303
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 306
005A 750000      R     MOV     i,#00H
005D         ?C0016:
005D E500        R     MOV     A,i
005F C3                CLR     C
0060 9401              SUBB    A,#01H
0062 5078              JNC     ?C0017
                                           ; SOURCE LINE # 307
                                           ; SOURCE LINE # 308
0064 AF00        R     MOV     R7,i
0066 EF                MOV     A,R7
0067 75F008            MOV     B,#08H
006A A4                MUL     AB
006B 2400        R     ADD     A,#LOW cfg_memcpy_list
006D F582              MOV     DPL,A
006F E4                CLR     A
0070 3400        R     ADDC    A,#HIGH cfg_memcpy_list
0072 F583              MOV     DPH,A
0074 AF82              MOV     R7,DPL
0076 AE83              MOV     R6,DPH
0078 8E00        R     MOV     mc,R6
007A 8F00        R     MOV     mc+01H,R7
                                           ; SOURCE LINE # 309
007C AE00        R     MOV     R6,mc
007E AF00        R     MOV     R7,mc+01H
0080 8F82              MOV     DPL,R7
0082 8E83              MOV     DPH,R6
0084 120000      E     LCALL   ?C?PLDCODE
0087 8B00        R     MOV     destPtr,R3
0089 8A00        R     MOV     destPtr+01H,R2
008B 8900        R     MOV     destPtr+02H,R1
                                           ; SOURCE LINE # 310
008D AE00        R     MOV     R6,mc
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 14  

008F AF00        R     MOV     R7,mc+01H
0091 8F82              MOV     DPL,R7
0093 8E83              MOV     DPH,R6
0095 A3                INC     DPTR
0096 A3                INC     DPTR
0097 A3                INC     DPTR
0098 120000      E     LCALL   ?C?PLDCODE
009B 8B00        R     MOV     srcPtr,R3
009D 8A00        R     MOV     srcPtr+01H,R2
009F 8900        R     MOV     srcPtr+02H,R1
                                           ; SOURCE LINE # 311
00A1 AE00        R     MOV     R6,mc
00A3 AF00        R     MOV     R7,mc+01H
00A5 8F82              MOV     DPL,R7
00A7 8E83              MOV     DPH,R6
00A9 7406              MOV     A,#06H
00AB 93                MOVC    A,@A+DPTR
00AC F500        R     MOV     numBytes,A
00AE 7407              MOV     A,#07H
00B0 93                MOVC    A,@A+DPTR
00B1 F500        R     MOV     numBytes+01H,A
                                           ; SOURCE LINE # 312
00B3 AB00        R     MOV     R3,srcPtr
00B5 AA00        R     MOV     R2,srcPtr+01H
00B7 A900        R     MOV     R1,srcPtr+02H
00B9 C003              PUSH    AR3
00BB C002              PUSH    AR2
00BD C001              PUSH    AR1
00BF AB00        R     MOV     R3,destPtr
00C1 AA00        R     MOV     R2,destPtr+01H
00C3 A900        R     MOV     R1,destPtr+02H
00C5 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C8 120000      E     LCALL   ?C?PSTXDATA
00CB D001              POP     AR1
00CD D002              POP     AR2
00CF D003              POP     AR3
00D1 AF00        R     MOV     R7,numBytes+01H
00D3 AE00        R     MOV     R6,numBytes
00D5 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 313
00D8 0500        R     INC     i
00DA 8081              SJMP    ?C0016
00DC         ?C0017:
                                           ; SOURCE LINE # 315
00DC 7B08              MOV     R3,#08H
00DE 7A00              MOV     R2,#00H
00E0 7900              MOV     R1,#00H
00E2 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 318
00E5 7B01              MOV     R3,#01H
00E7 7A50              MOV     R2,#050H
00E9 7903              MOV     R1,#03H
00EB 120000      E     LCALL   _cyread8
00EE EF                MOV     A,R7
00EF 4402              ORL     A,#02H
00F1 FD                MOV     R5,A
00F2 7B01              MOV     R3,#01H
00F4 7A50              MOV     R2,#050H
00F6 7903              MOV     R1,#03H
00F8 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 319
00FB 7B01              MOV     R3,#01H
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 15  

00FD 7A50              MOV     R2,#050H
00FF 7913              MOV     R1,#013H
0101 120000      E     LCALL   _cyread8
0104 EF                MOV     A,R7
0105 4402              ORL     A,#02H
0107 FD                MOV     R5,A
0108 7B01              MOV     R3,#01H
010A 7A50              MOV     R2,#050H
010C 7913              MOV     R1,#013H
010E 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 322
0111 9043A0            MOV     DPTR,#043A0H
0114 E0                MOVX    A,@DPTR
0115 FF                MOV     R7,A
0116 EF                MOV     A,R7
0117 4440              ORL     A,#040H
0119 FF                MOV     R7,A
011A 9043A0            MOV     DPTR,#043A0H
011D EF                MOV     A,R7
011E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 323
011F 9043C2            MOV     DPTR,#043C2H
0122 E0                MOVX    A,@DPTR
0123 FF                MOV     R7,A
0124 EF                MOV     A,R7
0125 4410              ORL     A,#010H
0127 FF                MOV     R7,A
0128 9043C2            MOV     DPTR,#043C2H
012B EF                MOV     A,R7
012C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 324
                                           ; SOURCE LINE # 327
012D 7B08              MOV     R3,#08H
012F 7A0B              MOV     R2,#0BH
0131 79C0              MOV     R1,#0C0H
0133 C003              PUSH    AR3
0135 C002              PUSH    AR2
0137 C001              PUSH    AR1
0139 7B00              MOV     R3,#00H
013B 7A51              MOV     R2,#051H
013D 79C0              MOV     R1,#0C0H
013F 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0142 120000      E     LCALL   ?C?PSTXDATA
0145 D001              POP     AR1
0147 D002              POP     AR2
0149 D003              POP     AR3
014B 7F0A              MOV     R7,#0AH
014D 7E00              MOV     R6,#00H
014F 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 328
0152 7B08              MOV     R3,#08H
0154 7A0B              MOV     R2,#0BH
0156 79CC              MOV     R1,#0CCH
0158 C003              PUSH    AR3
015A C002              PUSH    AR2
015C C001              PUSH    AR1
015E 7B00              MOV     R3,#00H
0160 7A51              MOV     R2,#051H
0162 7910              MOV     R1,#010H
0164 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0167 120000      E     LCALL   ?C?PSTXDATA
016A D001              POP     AR1
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 16  

016C D002              POP     AR2
016E D003              POP     AR3
0170 7F0A              MOV     R7,#0AH
0172 7E00              MOV     R6,#00H
0174 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 329
0177 7B08              MOV     R3,#08H
0179 7A0B              MOV     R2,#0BH
017B 79D8              MOV     R1,#0D8H
017D C003              PUSH    AR3
017F C002              PUSH    AR2
0181 C001              PUSH    AR1
0183 7B00              MOV     R3,#00H
0185 7A51              MOV     R2,#051H
0187 7940              MOV     R1,#040H
0189 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
018C 120000      E     LCALL   ?C?PSTXDATA
018F D001              POP     AR1
0191 D002              POP     AR2
0193 D003              POP     AR3
0195 7F0A              MOV     R7,#0AH
0197 7E00              MOV     R6,#00H
0199 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 330
019C 7B08              MOV     R3,#08H
019E 7A0B              MOV     R2,#0BH
01A0 79E4              MOV     R1,#0E4H
01A2 C003              PUSH    AR3
01A4 C002              PUSH    AR2
01A6 C001              PUSH    AR1
01A8 7B00              MOV     R3,#00H
01AA 7A51              MOV     R2,#051H
01AC 7960              MOV     R1,#060H
01AE 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01B1 120000      E     LCALL   ?C?PSTXDATA
01B4 D001              POP     AR1
01B6 D002              POP     AR2
01B8 D003              POP     AR3
01BA 7F0A              MOV     R7,#0AH
01BC 7E00              MOV     R6,#00H
01BE 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 331
01C1 9044F4            MOV     DPTR,#044F4H
01C4 7401              MOV     A,#01H
01C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 334
01C7 904322            MOV     DPTR,#04322H
01CA E0                MOVX    A,@DPTR
01CB FF                MOV     R7,A
01CC EF                MOV     A,R7
01CD 4408              ORL     A,#08H
01CF FF                MOV     R7,A
01D0 904322            MOV     DPTR,#04322H
01D3 EF                MOV     A,R7
01D4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 335
01D5 9046EC            MOV     DPTR,#046ECH
01D8 E0                MOVX    A,@DPTR
01D9 FF                MOV     R7,A
01DA EF                MOV     A,R7
01DB C3                CLR     C
01DC 9405              SUBB    A,#05H
C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 17  

01DE 5006              JNC     ?C0019
                                           ; SOURCE LINE # 336
                                           ; SOURCE LINE # 337
01E0 904689            MOV     DPTR,#04689H
01E3 743A              MOV     A,#03AH
01E5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 338
01E6         ?C0019:
                                           ; SOURCE LINE # 342
01E6 904800            MOV     DPTR,#04800H
01E9 74F1              MOV     A,#0F1H
01EB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 344
01EC 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 347
01EF 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 350
01F2 7B00              MOV     R3,#00H
01F4 7A43              MOV     R2,#043H
01F6 79A0              MOV     R1,#0A0H
01F8 C003              PUSH    AR3
01FA C002              PUSH    AR2
01FC C001              PUSH    AR1
01FE 7B00              MOV     R3,#00H
0200 7A43              MOV     R2,#043H
0202 79B0              MOV     R1,#0B0H
0204 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0207 120000      E     LCALL   ?C?PSTXDATA
020A D001              POP     AR1
020C D002              POP     AR2
020E D003              POP     AR3
0210 7F0E              MOV     R7,#0EH
0212 7E00              MOV     R6,#00H
0214 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 351
0217 9043B0            MOV     DPTR,#043B0H
021A E0                MOVX    A,@DPTR
021B FF                MOV     R7,A
021C EF                MOV     A,R7
021D 54FD              ANL     A,#0FDH
021F FF                MOV     R7,A
0220 EF                MOV     A,R7
0221 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 352
0222 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1032    ----
   CONSTANT SIZE    =     58    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.51   CYFITTER_CFG                                                          03/16/2014 19:05:06 PAGE 18  


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
