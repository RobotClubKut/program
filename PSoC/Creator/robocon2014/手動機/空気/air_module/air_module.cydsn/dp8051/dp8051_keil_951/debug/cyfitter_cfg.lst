C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE CYFITTER_CFG
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\cyfitter_cfg.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.lst)
                    - CD DB NOIP OT(2,SIZE) DF(DEBUG) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_951\Debug\cyfitter_cfg.obj)

line level    source

   1          /*******************************************************************************
   2          * FILENAME: cyfitter_cfg.c
   3          * PSoC Creator 3.0
   4          *
   5          * Description:
   6          * This file is automatically generated by PSoC Creator with device 
   7          * initialization code.  Except for the user defined sections in
   8          * CyClockStartupError(), this file should not be modified.
   9          *
  10          ********************************************************************************
  11          * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          ********************************************************************************/
  16          
  17          #include <string.h>
  18          #include <cytypes.h>
  19          #include <cydevice_trm.h>
  20          #include <cyfitter.h>
  21          #include <CyLib.h>
  22          #include <cyfitter_cfg.h>
  23          
  24          #define CY_NEED_CYCLOCKSTARTUPERROR 1
  25          
  26          
  27          #if defined(__C51__) || defined(__CX51__)
  28                  #define CYPACKED
  29                  #define CYPACKED_ATTR
  30                  #define CYALIGNED
  31                  
  32              #define CY_CFG_UNUSED
  33                  #define CY_CFG_MEMORY_BARRIER() do { } while (0)
  34          
  35          
  36          
  37                  #define CYMEMZERO(a,c) cymemzero((a),(c))
  38                  #define CYCONFIGCPY(d,s,c) cyconfigcpy((c),(s),(d))
  39                  #define CYCONFIGCPYCODE(d,s,c) cyconfigcpycode((c),(s),(d))
  40          #else
                      #error Unsupported toolchain
              #endif
  43          
  44          
  45          
  46          /* Clock startup error codes                                                   */
  47          #define CYCLOCKSTART_NO_ERROR    0u
  48          #define CYCLOCKSTART_XTAL_ERROR  1u
  49          #define CYCLOCKSTART_32KHZ_ERROR 2u
  50          #define CYCLOCKSTART_PLL_ERROR   3u
  51          
  52          #ifdef CY_NEED_CYCLOCKSTARTUPERROR
  53          /*******************************************************************************
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 2   

  54          * Function Name: CyClockStartupError
  55          ********************************************************************************
  56          * Summary:
  57          *  If an error is encountered during clock configuration (crystal startup error,
  58          *  PLL lock error, etc.), the system will end up here.  Unless reimplemented by
  59          *  the customer, this function will stop in an infinite loop.
  60          *
  61          * Parameters:
  62          *   void
  63          *
  64          * Return:
  65          *   void
  66          *
  67          *******************************************************************************/
  68          CY_CFG_UNUSED
  69          static void CyClockStartupError(uint8 errorCode);
  70          CY_CFG_UNUSED
  71          static void CyClockStartupError(uint8 errorCode)
  72          {
  73   1          /* To remove the compiler warning if errorCode not used.                */
  74   1          errorCode = errorCode;
  75   1      
  76   1          /* `#START CyClockStartupError` */
  77   1      
  78   1          /* If we have a clock startup error (bad MHz crystal, PLL lock, etc.),  */
  79   1          /* we will end up here to allow the customer to implement something to  */
  80   1          /* deal with the clock condition.                                       */
  81   1      
  82   1          /* `#END` */
  83   1      
  84   1          /* If nothing else, stop here since the clocks have not started         */
  85   1          /* correctly.                                                           */
  86   1          while(1) {}
  87   1      }
  88          #endif
  89          
  90          #define cfg_byte_table ((const void CYFAR *)0x080000u)
  91          /* IOPINS0_0 Address: CYREG_PRT0_DM0 Size (bytes): 8 */
  92          #define BS_IOPINS0_0_VAL ((const uint8 CYFAR *)0x000806C4u)
  93          
  94          /* IOPINS0_7 Address: CYREG_PRT12_DM0 Size (bytes): 8 */
  95          #define BS_IOPINS0_7_VAL ((const uint8 CYFAR *)0x000806CCu)
  96          
  97          /* IOPINS0_1 Address: CYREG_PRT1_DM0 Size (bytes): 8 */
  98          #define BS_IOPINS0_1_VAL ((const uint8 CYFAR *)0x000806D4u)
  99          
 100          /* IOPINS0_2 Address: CYREG_PRT2_DM0 Size (bytes): 8 */
 101          #define BS_IOPINS0_2_VAL ((const uint8 CYFAR *)0x000806DCu)
 102          
 103          /* IOPINS0_3 Address: CYREG_PRT3_DM0 Size (bytes): 8 */
 104          #define BS_IOPINS0_3_VAL ((const uint8 CYFAR *)0x000806E4u)
 105          
 106          /* IOPINS0_4 Address: CYREG_PRT4_DR Size (bytes): 10 */
 107          #define BS_IOPINS0_4_VAL ((const uint8 CYFAR *)0x000806ECu)
 108          
 109          /* IOPINS0_5 Address: CYREG_PRT5_DM0 Size (bytes): 8 */
 110          #define BS_IOPINS0_5_VAL ((const uint8 CYFAR *)0x000806F8u)
 111          
 112          /* IOPINS0_6 Address: CYREG_PRT6_DM0 Size (bytes): 8 */
 113          #define BS_IOPINS0_6_VAL ((const uint8 CYFAR *)0x00080700u)
 114          
 115          
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 3   

 116          /*******************************************************************************
 117          * Function Name: ClockSetup
 118          ********************************************************************************
 119          *
 120          * Summary:
 121          *  Performs the initialization of all of the clocks in the device based on the
 122          *  settings in the Clock tab of the DWR.  This includes enabling the requested
 123          *  clocks and setting the necessary dividers to produce the desired frequency. 
 124          *
 125          * Parameters:
 126          *  void
 127          *
 128          * Return:
 129          *  void
 130          *
 131          *******************************************************************************/
 132          static void ClockSetup(void);
 133          static void ClockSetup(void)
 134          {
 135   1              uint32 timeout;
 136   1              uint8 pllLock;
 137   1      
 138   1      
 139   1              /* Configure Digital Clocks based on settings from Clock DWR */
 140   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG0_CFG0), 0x009Bu);
 141   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG0_CFG0 + 0x2u), 0x18u);
 142   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_DCFG1_CFG0), 0x009Bu);
 143   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_DCFG1_CFG0 + 0x2u), 0x18u);
 144   1      
 145   1              /* Configure ILO based on settings from Clock DWR */
 146   1              CY_SET_REG8((void CYXDATA *)(CYREG_SLOWCLK_ILO_CR0), 0x02u);
 147   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_CR), 0x08u);
 148   1      
 149   1              /* Configure IMO based on settings from Clock DWR */
 150   1              CY_SET_REG8((void CYXDATA *)(CYREG_FASTCLK_IMO_CR), 0x03u);
 151   1              CY_SET_REG8((void CYXDATA *)(CYREG_IMO_TR1), (CY_GET_XTND_REG8((void CYFAR *)CYREG_FLSHID_CUST_TABLES_IMO
             -_3MHZ)));
 152   1      
 153   1              /* Configure PLL based on settings from Clock DWR */
 154   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_P), 0x0010u);
 155   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_FASTCLK_PLL_CFG0), 0x1251u);
 156   1              /* Wait up to 250us for the PLL to lock */
 157   1              pllLock = 0u;
 158   1              for (timeout = 250u / 10u; (timeout > 0u) && (pllLock != 0x03u); timeout--)
 159   1              { 
 160   2                      pllLock = 0x03u & ((uint8)((uint8)pllLock << 1) | ((CY_GET_REG8((void CYXDATA *)CYREG_FASTCLK_PLL_SR) & 
             -0x01u) >> 0));
 161   2                      CyDelayCycles(10u * 48u); /* Delay 10us based on 48MHz clock */
 162   2              }
 163   1              /* If we ran out of time the PLL didn't lock so go to the error function */
 164   1              if (timeout == 0u)
 165   1              {
 166   2                      CyClockStartupError(CYCLOCKSTART_PLL_ERROR);
 167   2              }
 168   1      
 169   1              /* Configure Bus/Master Clock based on settings from Clock DWR */
 170   1              CY_SET_XTND_REG16((void CYFAR *)(CYREG_CLKDIST_MSTR0), 0x0100u);
 171   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x07u);
 172   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG0), 0x00u);
 173   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_BCFG2), 0x48u);
 174   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_MSTR0), 0x00u);
 175   1              CY_SET_REG8((void CYXDATA *)(CYREG_CLKDIST_LD), 0x02u);
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 4   

 176   1      
 177   1              CY_SET_REG8((void CYXDATA *)(CYREG_PM_ACT_CFG2), ((CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG2) | 0x03u
             -)));
 178   1      }
 179          
 180          
 181          /* Analog API Functions */
 182          
 183          
 184          /*******************************************************************************
 185          * Function Name: AnalogSetDefault
 186          ********************************************************************************
 187          *
 188          * Summary:
 189          *  Sets up the analog portions of the chip to default values based on chip
 190          *  configuration options from the project.
 191          *
 192          * Parameters:
 193          *  void
 194          *
 195          * Return:
 196          *  void
 197          *
 198          *******************************************************************************/
 199          static void AnalogSetDefault(void);
 200          static void AnalogSetDefault(void)
 201          {
 202   1              uint8 bg_xover_inl_trim = CY_GET_XTND_REG8((void CYFAR *)(CYREG_FLSHID_MFG_CFG_BG_XOVER_INL_TRIM + 1u));
 203   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT0), (bg_xover_inl_trim & 0x07u));
 204   1              CY_SET_REG8((void CYXDATA *)(CYREG_BG_DFT1), ((bg_xover_inl_trim >> 4) & 0x0Fu));
 205   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, 0x44u);
 206   1      }
 207          
 208          
 209          /*******************************************************************************
 210          * Function Name: SetAnalogRoutingPumps
 211          ********************************************************************************
 212          *
 213          * Summary:
 214          * Enables or disables the analog pumps feeding analog routing switches.
 215          * Intended to be called at startup, based on the Vdda system configuration;
 216          * may be called during operation when the user informs us that the Vdda voltage
 217          * crossed the pump threshold.
 218          *
 219          * Parameters:
 220          *  enabled - 1 to enable the pumps, 0 to disable the pumps
 221          *
 222          * Return:
 223          *  void
 224          *
 225          *******************************************************************************/
 226          void SetAnalogRoutingPumps(uint8 enabled)
 227          {
 228   1              uint8 regValue = CY_GET_REG8((void CYXDATA *)CYREG_PUMP_CR0);
 229   1              if (enabled != 0u)
 230   1              {
 231   2                      regValue |= 0x00u;
 232   2              }
 233   1              else
 234   1              {
 235   2                      regValue &= (uint8)~0x00u;
 236   2              }
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 5   

 237   1              CY_SET_REG8((void CYXDATA *)CYREG_PUMP_CR0, regValue);
 238   1      }
 239          
 240          #define CY_AMUX_UNUSED CYREG_BOOST_SR
 241          
 242          
 243          /*******************************************************************************
 244          * Function Name: cyfitter_cfg
 245          ********************************************************************************
 246          * Summary:
 247          *  This function is called by the start-up code for the selected device. It
 248          *  performs all of the necessary device configuration based on the design
 249          *  settings.  This includes settings from the Design Wide Resources (DWR) such
 250          *  as Clocks and Pins as well as any component configuration that is necessary.
 251          *
 252          * Parameters:  
 253          *   void
 254          *
 255          * Return:
 256          *   void
 257          *
 258          *******************************************************************************/
 259          
 260          void cyfitter_cfg(void)
 261          {
 262   1              /* Enable/Disable Debug functionality based on settings from System DWR */
 263   1              CY_SET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG, (CY_GET_XTND_REG8((void CYFAR *)CYREG_MLOGIC_DEBUG) | 
             -0x05u));
 264   1      
 265   1              {
 266   2      
 267   2                      CYPACKED typedef struct {
 268   2                              void CYFAR *address;
 269   2                              uint16 size;
 270   2                      } CYPACKED_ATTR cfg_memset_t;
 271   2      
 272   2                      static const cfg_memset_t CYCODE cfg_memset_list [] = {
 273   2                              /* address, size */
 274   2                              {(void CYFAR *)(CYREG_PRT15_DR), 16u},
 275   2                              {(void CYFAR *)(CYDEV_UCFG_B0_P0_U0_BASE), 4096u},
 276   2                              {(void CYFAR *)(CYDEV_UCFG_B1_P2_U0_BASE), 2048u},
 277   2                              {(void CYFAR *)(CYDEV_UCFG_DSI0_BASE), 2560u},
 278   2                              {(void CYFAR *)(CYDEV_UCFG_DSI12_BASE), 512u},
 279   2                              {(void CYFAR *)(CYREG_BCTL0_MDCLK_EN), 32u},
 280   2                      };
 281   2      
 282   2                      uint8 CYDATA i;
 283   2      
 284   2                      /* Zero out critical memory blocks before beginning configuration */
 285   2                      for (i = 0u; i < (sizeof(cfg_memset_list)/sizeof(cfg_memset_list[0])); i++)
 286   2                      {
 287   3                              const cfg_memset_t CYCODE * CYDATA ms = &cfg_memset_list[i];
 288   3                              CYMEMZERO(ms->address, ms->size);
 289   3                      }
 290   2      
 291   2                      cfg_write_bytes(cfg_byte_table);
 292   2      
 293   2                      /* Enable digital routing */
 294   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL0_BANK_CTL
             -) | 0x02u);
 295   2                      CY_SET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL, CY_GET_XTND_REG8((void CYFAR *)CYREG_BCTL1_BANK_CTL
             -) | 0x02u);
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 6   

 296   2      
 297   2                      /* Enable UDB array */
 298   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_ACT_CFG0) | 0x40u);
 299   2                      CY_SET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2, CY_GET_REG8((void CYXDATA *)CYREG_PM_AVAIL_CR2) | 0x10u)
             -;
 300   2              }
 301   1      
 302   1              /* Perform second pass device configuration. These items must be configured in specific order after the r
             -egular configuration is done. */
 303   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT0_DM0), (const void CYFAR *)(BS_IOPINS0_0_VAL), 8u);
 304   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT12_DM0), (const void CYFAR *)(BS_IOPINS0_7_VAL), 8u);
 305   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT1_DM0), (const void CYFAR *)(BS_IOPINS0_1_VAL), 8u);
 306   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT2_DM0), (const void CYFAR *)(BS_IOPINS0_2_VAL), 8u);
 307   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT3_DM0), (const void CYFAR *)(BS_IOPINS0_3_VAL), 8u);
 308   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT4_DR), (const void CYFAR *)(BS_IOPINS0_4_VAL), 10u);
 309   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT5_DM0), (const void CYFAR *)(BS_IOPINS0_5_VAL), 8u);
 310   1              CYCONFIGCPY((void CYFAR *)(CYREG_PRT6_DM0), (const void CYFAR *)(BS_IOPINS0_6_VAL), 8u);
 311   1              CY_SET_REG8((void CYXDATA *)(CYREG_INTC_CSR_EN), 0x01u);
 312   1      
 313   1              /* Switch Boost to the precision bandgap reference from its internal reference */
 314   1              CY_SET_REG8((void CYXDATA *)CYREG_BOOST_CR2, (CY_GET_REG8((void CYXDATA *)CYREG_BOOST_CR2) | 0x08u));
 315   1              if (CYDEV_CHIP_REV_ACTUAL < 5u)
 316   1              {
 317   2                      CY_SET_REG8((void CYXDATA *)CYREG_PWRSYS_WAKE_TR2, 0x3Au);
 318   2              }
 319   1      
 320   1      
 321   1              /* Set Flash Cycles based on max possible frequency in case a glitch occurs during ClockSetup(). */
 322   1              CY_SET_REG8((void CYXDATA *)(CYREG_CACHE_CR), (((CYDEV_INSTRUCT_CACHE_ENABLED) != 0) ? 0xF1u : 0xC0u));
 323   1              /* Setup clocks based on selections from Clock DWR */
 324   1              ClockSetup();
 325   1      
 326   1              /* Perform basic analog initialization to defaults */
 327   1              AnalogSetDefault();
 328   1      
 329   1              /* Configure alternate active mode */
 330   1              CYCONFIGCPY((void CYFAR *)CYDEV_PM_STBY_BASE, (const void CYFAR *)CYDEV_PM_ACT_BASE, 14u);
 331   1              CY_SET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0, CY_GET_REG8((void CYXDATA *)CYREG_PM_STBY_CFG0) & (uint8)
             -~0x02u);        /* Disable CPU */
 332   1      }
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 7   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _CyClockStartupError (BEGIN)
                                           ; SOURCE LINE # 71
0000 900000      R     MOV     DPTR,#errorCode
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 72
                                           ; SOURCE LINE # 74
0005 900000      R     MOV     DPTR,#errorCode
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#errorCode
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
000F         ?C0001:
                                           ; SOURCE LINE # 86
000F 80FE              SJMP    ?C0001
0011 22                RET     
             ; FUNCTION _CyClockStartupError (END)

             ; FUNCTION ClockSetup (BEGIN)
                                           ; SOURCE LINE # 133
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 140
0000 7B00              MOV     R3,#00H
0002 7A40              MOV     R2,#040H
0004 7980              MOV     R1,#080H
0006 7D9B              MOV     R5,#09BH
0008 7C00              MOV     R4,#00H
000A 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 141
000D 904082            MOV     DPTR,#04082H
0010 7418              MOV     A,#018H
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 142
0013 7B00              MOV     R3,#00H
0015 7A40              MOV     R2,#040H
0017 7984              MOV     R1,#084H
0019 7D9B              MOV     R5,#09BH
001B 7C00              MOV     R4,#00H
001D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 143
0020 904086            MOV     DPTR,#04086H
0023 7418              MOV     A,#018H
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 146
0026 904300            MOV     DPTR,#04300H
0029 7402              MOV     A,#02H
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 147
002C 904000            MOV     DPTR,#04000H
002F 7408              MOV     A,#08H
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 150
0032 904200            MOV     DPTR,#04200H
0035 7403              MOV     A,#03H
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 151
0038 7B0C              MOV     R3,#0CH
003A 7A01              MOV     R2,#01H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 8   

003C 7908              MOV     R1,#08H
003E 120000      E     LCALL   _cyread8
0041 9046A1            MOV     DPTR,#046A1H
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 154
0046 7B00              MOV     R3,#00H
0048 7A42              MOV     R2,#042H
004A 7922              MOV     R1,#022H
004C 7D10              MOV     R5,#010H
004E 7C00              MOV     R4,#00H
0050 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 155
0053 7B00              MOV     R3,#00H
0055 7A42              MOV     R2,#042H
0057 7920              MOV     R1,#020H
0059 7D51              MOV     R5,#051H
005B 7C12              MOV     R4,#012H
005D 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 157
0060 900000      R     MOV     DPTR,#pllLock
0063 E4                CLR     A
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 158
0065 7F19              MOV     R7,#019H
0067 7E00              MOV     R6,#00H
0069 7D00              MOV     R5,#00H
006B 7C00              MOV     R4,#00H
006D 900000      R     MOV     DPTR,#timeout
0070 120000      E     LCALL   ?C?LSTXDATA
0073         ?C0004:
0073 900000      R     MOV     DPTR,#timeout
0076 120000      E     LCALL   ?C?LLDXDATA
0079 D3                SETB    C
007A EF                MOV     A,R7
007B 9400              SUBB    A,#00H
007D EE                MOV     A,R6
007E 9400              SUBB    A,#00H
0080 404E              JC      ?C0005
0082 900000      R     MOV     DPTR,#pllLock
0085 E0                MOVX    A,@DPTR
0086 FF                MOV     R7,A
0087 EF                MOV     A,R7
0088 6403              XRL     A,#03H
008A 6044              JZ      ?C0005
                                           ; SOURCE LINE # 159
                                           ; SOURCE LINE # 160
008C 904225            MOV     DPTR,#04225H
008F E0                MOVX    A,@DPTR
0090 FF                MOV     R7,A
0091 EF                MOV     A,R7
0092 5401              ANL     A,#01H
0094 FF                MOV     R7,A
0095 7E00              MOV     R6,#00H
0097 900000      R     MOV     DPTR,#pllLock
009A E0                MOVX    A,@DPTR
009B FE                MOV     R6,A
009C EE                MOV     A,R6
009D 25E0              ADD     A,ACC
009F FE                MOV     R6,A
00A0 EE                MOV     A,R6
00A1 4F                ORL     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 9   

00A2 FF                MOV     R7,A
00A3 EF                MOV     A,R7
00A4 5403              ANL     A,#03H
00A6 FF                MOV     R7,A
00A7 900000      R     MOV     DPTR,#pllLock
00AA EF                MOV     A,R7
00AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 161
00AC 7FE0              MOV     R7,#0E0H
00AE 7E01              MOV     R6,#01H
00B0 7D00              MOV     R5,#00H
00B2 7C00              MOV     R4,#00H
00B4 120000      E     LCALL   _CyDelayCycles
                                           ; SOURCE LINE # 162
00B7 900000      R     MOV     DPTR,#timeout
00BA 120000      E     LCALL   ?C?LLDXDATA
00BD 7BFF              MOV     R3,#0FFH
00BF 7AFF              MOV     R2,#0FFH
00C1 79FF              MOV     R1,#0FFH
00C3 78FF              MOV     R0,#0FFH
00C5 120000      E     LCALL   ?C?LADD
00C8 900000      R     MOV     DPTR,#timeout
00CB 120000      E     LCALL   ?C?LSTXDATA
00CE 80A3              SJMP    ?C0004
00D0         ?C0005:
                                           ; SOURCE LINE # 164
00D0 900000      R     MOV     DPTR,#timeout
00D3 120000      E     LCALL   ?C?LLDXDATA
00D6 EF                MOV     A,R7
00D7 4E                ORL     A,R6
00D8 7005              JNZ     ?C0007
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
00DA 7F03              MOV     R7,#03H
00DC 120000      R     LCALL   _CyClockStartupError
                                           ; SOURCE LINE # 167
00DF         ?C0007:
                                           ; SOURCE LINE # 170
00DF 7B00              MOV     R3,#00H
00E1 7A40              MOV     R2,#040H
00E3 7904              MOV     R1,#04H
00E5 7D00              MOV     R5,#00H
00E7 7C01              MOV     R4,#01H
00E9 120000      E     LCALL   _cywrite16
                                           ; SOURCE LINE # 171
00EC 904004            MOV     DPTR,#04004H
00EF 7407              MOV     A,#07H
00F1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
00F2 904006            MOV     DPTR,#04006H
00F5 E4                CLR     A
00F6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 173
00F7 904008            MOV     DPTR,#04008H
00FA 7448              MOV     A,#048H
00FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 174
00FD 904004            MOV     DPTR,#04004H
0100 E4                CLR     A
0101 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 175
0102 904001            MOV     DPTR,#04001H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 10  

0105 7402              MOV     A,#02H
0107 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 177
0108 9043A2            MOV     DPTR,#043A2H
010B E0                MOVX    A,@DPTR
010C FF                MOV     R7,A
010D EF                MOV     A,R7
010E 4403              ORL     A,#03H
0110 FF                MOV     R7,A
0111 9043A2            MOV     DPTR,#043A2H
0114 EF                MOV     A,R7
0115 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 178
0116 22                RET     
             ; FUNCTION ClockSetup (END)

             ; FUNCTION AnalogSetDefault (BEGIN)
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 201
                                           ; SOURCE LINE # 202
0000 7B0C              MOV     R3,#0CH
0002 7A01              MOV     R2,#01H
0004 79CF              MOV     R1,#0CFH
0006 120000      E     LCALL   _cyread8
0009 900000      R     MOV     DPTR,#bg_xover_inl_trim
000C EF                MOV     A,R7
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 203
000E 900000      R     MOV     DPTR,#bg_xover_inl_trim
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 5407              ANL     A,#07H
0016 FF                MOV     R7,A
0017 90586E            MOV     DPTR,#0586EH
001A EF                MOV     A,R7
001B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 204
001C 900000      R     MOV     DPTR,#bg_xover_inl_trim
001F E0                MOVX    A,@DPTR
0020 FF                MOV     R7,A
0021 EF                MOV     A,R7
0022 C4                SWAP    A
0023 540F              ANL     A,#0FH
0025 FF                MOV     R7,A
0026 EF                MOV     A,R7
0027 540F              ANL     A,#0FH
0029 FF                MOV     R7,A
002A 90586F            MOV     DPTR,#0586FH
002D EF                MOV     A,R7
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
002F 905876            MOV     DPTR,#05876H
0032 7444              MOV     A,#044H
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
0035 22                RET     
             ; FUNCTION AnalogSetDefault (END)

             ; FUNCTION _SetAnalogRoutingPumps (BEGIN)
                                           ; SOURCE LINE # 226
0000 900000      R     MOV     DPTR,#enabled
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 11  

0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 227
                                           ; SOURCE LINE # 228
0005 905876            MOV     DPTR,#05876H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A 900000      R     MOV     DPTR,#regValue
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 229
000F 900000      R     MOV     DPTR,#enabled
0012 E0                MOVX    A,@DPTR
0013 FF                MOV     R7,A
0014 EF                MOV     A,R7
0015 6010              JZ      ?C0010
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 231
0017 900000      R     MOV     DPTR,#regValue
001A E0                MOVX    A,@DPTR
001B FF                MOV     R7,A
001C EF                MOV     A,R7
001D 4400              ORL     A,#00H
001F FF                MOV     R7,A
0020 900000      R     MOV     DPTR,#regValue
0023 EF                MOV     A,R7
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 232
0025 800E              SJMP    ?C0011
0027         ?C0010:
                                           ; SOURCE LINE # 234
                                           ; SOURCE LINE # 235
0027 900000      R     MOV     DPTR,#regValue
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C EF                MOV     A,R7
002D 54FF              ANL     A,#0FFH
002F FF                MOV     R7,A
0030 900000      R     MOV     DPTR,#regValue
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 236
0035         ?C0011:
                                           ; SOURCE LINE # 237
0035 900000      R     MOV     DPTR,#regValue
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 905876            MOV     DPTR,#05876H
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 238
003F 22                RET     
             ; FUNCTION _SetAnalogRoutingPumps (END)

             ; FUNCTION cyfitter_cfg (BEGIN)
                                           ; SOURCE LINE # 260
                                           ; SOURCE LINE # 261
                                           ; SOURCE LINE # 263
0000 7B00              MOV     R3,#00H
0002 7A46              MOV     R2,#046H
0004 79E8              MOV     R1,#0E8H
0006 120000      E     LCALL   _cyread8
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 12  

0009 EF                MOV     A,R7
000A 4405              ORL     A,#05H
000C FD                MOV     R5,A
000D 7B00              MOV     R3,#00H
000F 7A46              MOV     R2,#046H
0011 79E8              MOV     R1,#0E8H
0013 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 265
                                           ; SOURCE LINE # 285
0016 750000      R     MOV     i,#00H
0019         ?C0013:
0019 E500        R     MOV     A,i
001B C3                CLR     C
001C 9406              SUBB    A,#06H
001E 503A              JNC     ?C0014
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 287
0020 AF00        R     MOV     R7,i
0022 EF                MOV     A,R7
0023 75F005            MOV     B,#05H
0026 A4                MUL     AB
0027 2400        R     ADD     A,#LOW cfg_memset_list
0029 F582              MOV     DPL,A
002B E4                CLR     A
002C 3400        R     ADDC    A,#HIGH cfg_memset_list
002E F583              MOV     DPH,A
0030 AF82              MOV     R7,DPL
0032 AE83              MOV     R6,DPH
0034 8E00        R     MOV     ms,R6
0036 8F00        R     MOV     ms+01H,R7
                                           ; SOURCE LINE # 288
0038 AE00        R     MOV     R6,ms
003A AF00        R     MOV     R7,ms+01H
003C 8F82              MOV     DPL,R7
003E 8E83              MOV     DPH,R6
0040 120000      E     LCALL   ?C?PLDCODE
0043 AE00        R     MOV     R6,ms
0045 AF00        R     MOV     R7,ms+01H
0047 8F82              MOV     DPL,R7
0049 8E83              MOV     DPH,R6
004B 7403              MOV     A,#03H
004D 93                MOVC    A,@A+DPTR
004E FC                MOV     R4,A
004F 7404              MOV     A,#04H
0051 93                MOVC    A,@A+DPTR
0052 FD                MOV     R5,A
0053 120000      E     LCALL   _cymemzero
                                           ; SOURCE LINE # 289
0056 0500        R     INC     i
0058 80BF              SJMP    ?C0013
005A         ?C0014:
                                           ; SOURCE LINE # 291
005A 7B08              MOV     R3,#08H
005C 7A00              MOV     R2,#00H
005E 7900              MOV     R1,#00H
0060 120000      E     LCALL   _cfg_write_bytes
                                           ; SOURCE LINE # 294
0063 7B01              MOV     R3,#01H
0065 7A50              MOV     R2,#050H
0067 7903              MOV     R1,#03H
0069 120000      E     LCALL   _cyread8
006C EF                MOV     A,R7
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 13  

006D 4402              ORL     A,#02H
006F FD                MOV     R5,A
0070 7B01              MOV     R3,#01H
0072 7A50              MOV     R2,#050H
0074 7903              MOV     R1,#03H
0076 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 295
0079 7B01              MOV     R3,#01H
007B 7A50              MOV     R2,#050H
007D 7913              MOV     R1,#013H
007F 120000      E     LCALL   _cyread8
0082 EF                MOV     A,R7
0083 4402              ORL     A,#02H
0085 FD                MOV     R5,A
0086 7B01              MOV     R3,#01H
0088 7A50              MOV     R2,#050H
008A 7913              MOV     R1,#013H
008C 120000      E     LCALL   _cywrite8
                                           ; SOURCE LINE # 298
008F 9043A0            MOV     DPTR,#043A0H
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 EF                MOV     A,R7
0095 4440              ORL     A,#040H
0097 FF                MOV     R7,A
0098 9043A0            MOV     DPTR,#043A0H
009B EF                MOV     A,R7
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 299
009D 9043C2            MOV     DPTR,#043C2H
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
00A2 EF                MOV     A,R7
00A3 4410              ORL     A,#010H
00A5 FF                MOV     R7,A
00A6 9043C2            MOV     DPTR,#043C2H
00A9 EF                MOV     A,R7
00AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 300
                                           ; SOURCE LINE # 303
00AB 7B08              MOV     R3,#08H
00AD 7A06              MOV     R2,#06H
00AF 79C4              MOV     R1,#0C4H
00B1 C003              PUSH    AR3
00B3 C002              PUSH    AR2
00B5 C001              PUSH    AR1
00B7 7B00              MOV     R3,#00H
00B9 7A51              MOV     R2,#051H
00BB 7902              MOV     R1,#02H
00BD 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00C0 120000      E     LCALL   ?C?PSTXDATA
00C3 D001              POP     AR1
00C5 D002              POP     AR2
00C7 D003              POP     AR3
00C9 7F08              MOV     R7,#08H
00CB 7E00              MOV     R6,#00H
00CD 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 304
00D0 7B08              MOV     R3,#08H
00D2 7A06              MOV     R2,#06H
00D4 79CC              MOV     R1,#0CCH
00D6 C003              PUSH    AR3
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 14  

00D8 C002              PUSH    AR2
00DA C001              PUSH    AR1
00DC 7B00              MOV     R3,#00H
00DE 7A51              MOV     R2,#051H
00E0 79C2              MOV     R1,#0C2H
00E2 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
00E5 120000      E     LCALL   ?C?PSTXDATA
00E8 D001              POP     AR1
00EA D002              POP     AR2
00EC D003              POP     AR3
00EE 7F08              MOV     R7,#08H
00F0 7E00              MOV     R6,#00H
00F2 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 305
00F5 7B08              MOV     R3,#08H
00F7 7A06              MOV     R2,#06H
00F9 79D4              MOV     R1,#0D4H
00FB C003              PUSH    AR3
00FD C002              PUSH    AR2
00FF C001              PUSH    AR1
0101 7B00              MOV     R3,#00H
0103 7A51              MOV     R2,#051H
0105 7912              MOV     R1,#012H
0107 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
010A 120000      E     LCALL   ?C?PSTXDATA
010D D001              POP     AR1
010F D002              POP     AR2
0111 D003              POP     AR3
0113 7F08              MOV     R7,#08H
0115 7E00              MOV     R6,#00H
0117 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 306
011A 7B08              MOV     R3,#08H
011C 7A06              MOV     R2,#06H
011E 79DC              MOV     R1,#0DCH
0120 C003              PUSH    AR3
0122 C002              PUSH    AR2
0124 C001              PUSH    AR1
0126 7B00              MOV     R3,#00H
0128 7A51              MOV     R2,#051H
012A 7922              MOV     R1,#022H
012C 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
012F 120000      E     LCALL   ?C?PSTXDATA
0132 D001              POP     AR1
0134 D002              POP     AR2
0136 D003              POP     AR3
0138 7F08              MOV     R7,#08H
013A 7E00              MOV     R6,#00H
013C 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 307
013F 7B08              MOV     R3,#08H
0141 7A06              MOV     R2,#06H
0143 79E4              MOV     R1,#0E4H
0145 C003              PUSH    AR3
0147 C002              PUSH    AR2
0149 C001              PUSH    AR1
014B 7B00              MOV     R3,#00H
014D 7A51              MOV     R2,#051H
014F 7932              MOV     R1,#032H
0151 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0154 120000      E     LCALL   ?C?PSTXDATA
0157 D001              POP     AR1
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 15  

0159 D002              POP     AR2
015B D003              POP     AR3
015D 7F08              MOV     R7,#08H
015F 7E00              MOV     R6,#00H
0161 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 308
0164 7B08              MOV     R3,#08H
0166 7A06              MOV     R2,#06H
0168 79EC              MOV     R1,#0ECH
016A C003              PUSH    AR3
016C C002              PUSH    AR2
016E C001              PUSH    AR1
0170 7B00              MOV     R3,#00H
0172 7A51              MOV     R2,#051H
0174 7940              MOV     R1,#040H
0176 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0179 120000      E     LCALL   ?C?PSTXDATA
017C D001              POP     AR1
017E D002              POP     AR2
0180 D003              POP     AR3
0182 7F0A              MOV     R7,#0AH
0184 7E00              MOV     R6,#00H
0186 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 309
0189 7B08              MOV     R3,#08H
018B 7A06              MOV     R2,#06H
018D 79F8              MOV     R1,#0F8H
018F C003              PUSH    AR3
0191 C002              PUSH    AR2
0193 C001              PUSH    AR1
0195 7B00              MOV     R3,#00H
0197 7A51              MOV     R2,#051H
0199 7952              MOV     R1,#052H
019B 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
019E 120000      E     LCALL   ?C?PSTXDATA
01A1 D001              POP     AR1
01A3 D002              POP     AR2
01A5 D003              POP     AR3
01A7 7F08              MOV     R7,#08H
01A9 7E00              MOV     R6,#00H
01AB 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 310
01AE 7B08              MOV     R3,#08H
01B0 7A07              MOV     R2,#07H
01B2 7900              MOV     R1,#00H
01B4 C003              PUSH    AR3
01B6 C002              PUSH    AR2
01B8 C001              PUSH    AR1
01BA 7B00              MOV     R3,#00H
01BC 7A51              MOV     R2,#051H
01BE 7962              MOV     R1,#062H
01C0 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
01C3 120000      E     LCALL   ?C?PSTXDATA
01C6 D001              POP     AR1
01C8 D002              POP     AR2
01CA D003              POP     AR3
01CC 7F08              MOV     R7,#08H
01CE 7E00              MOV     R6,#00H
01D0 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 311
01D3 9044F4            MOV     DPTR,#044F4H
01D6 7401              MOV     A,#01H
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 16  

01D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 314
01D9 904322            MOV     DPTR,#04322H
01DC E0                MOVX    A,@DPTR
01DD FF                MOV     R7,A
01DE EF                MOV     A,R7
01DF 4408              ORL     A,#08H
01E1 FF                MOV     R7,A
01E2 904322            MOV     DPTR,#04322H
01E5 EF                MOV     A,R7
01E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 315
01E7 9046EC            MOV     DPTR,#046ECH
01EA E0                MOVX    A,@DPTR
01EB FF                MOV     R7,A
01EC EF                MOV     A,R7
01ED C3                CLR     C
01EE 9405              SUBB    A,#05H
01F0 5006              JNC     ?C0016
                                           ; SOURCE LINE # 316
                                           ; SOURCE LINE # 317
01F2 904689            MOV     DPTR,#04689H
01F5 743A              MOV     A,#03AH
01F7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 318
01F8         ?C0016:
                                           ; SOURCE LINE # 322
01F8 904800            MOV     DPTR,#04800H
01FB 74F1              MOV     A,#0F1H
01FD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 324
01FE 120000      R     LCALL   ClockSetup
                                           ; SOURCE LINE # 327
0201 120000      R     LCALL   AnalogSetDefault
                                           ; SOURCE LINE # 330
0204 7B00              MOV     R3,#00H
0206 7A43              MOV     R2,#043H
0208 79A0              MOV     R1,#0A0H
020A C003              PUSH    AR3
020C C002              PUSH    AR2
020E C001              PUSH    AR1
0210 7B00              MOV     R3,#00H
0212 7A43              MOV     R2,#043H
0214 79B0              MOV     R1,#0B0H
0216 900000      E     MOV     DPTR,#?_cyconfigcpy?BYTE+05H
0219 120000      E     LCALL   ?C?PSTXDATA
021C D001              POP     AR1
021E D002              POP     AR2
0220 D003              POP     AR3
0222 7F0E              MOV     R7,#0EH
0224 7E00              MOV     R6,#00H
0226 120000      E     LCALL   _cyconfigcpy
                                           ; SOURCE LINE # 331
0229 9043B0            MOV     DPTR,#043B0H
022C E0                MOVX    A,@DPTR
022D FF                MOV     R7,A
022E EF                MOV     A,R7
022F 54FD              ANL     A,#0FDH
0231 FF                MOV     R7,A
0232 EF                MOV     A,R7
0233 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 332
C51 COMPILER V9.51   CYFITTER_CFG                                                          01/10/2014 20:22:32 PAGE 17  

0234 22                RET     
             ; FUNCTION cyfitter_cfg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    980    ----
   CONSTANT SIZE    =     30    ----
   XDATA SIZE       =   ----       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
