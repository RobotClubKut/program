ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	PWM_1_initVar
  19              		.bss
  20              		.type	PWM_1_initVar, %object
  21              		.size	PWM_1_initVar, 1
  22              	PWM_1_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.PWM_1_Start,"ax",%progbits
  25              		.align	2
  26              		.global	PWM_1_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	PWM_1_Start, %function
  30              	PWM_1_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_1.c"
   1:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_1.c **** * File Name: PWM_1.c  
   3:.\Generated_Source\PSoC5/PWM_1.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/PWM_1.c **** *
   5:.\Generated_Source\PSoC5/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks. 
  10:.\Generated_Source\PSoC5/PWM_1.c **** *  The compare value output may be configured to be active when the present 
  11:.\Generated_Source\PSoC5/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_1.c **** *
  15:.\Generated_Source\PSoC5/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_1.c **** *
  17:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_1.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions, 
  20:.\Generated_Source\PSoC5/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  21:.\Generated_Source\PSoC5/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_1.c **** 
  24:.\Generated_Source\PSoC5/PWM_1.c **** #include "cytypes.h"
  25:.\Generated_Source\PSoC5/PWM_1.c **** #include "PWM_1.h"
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 2


  26:.\Generated_Source\PSoC5/PWM_1.c **** 
  27:.\Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  28:.\Generated_Source\PSoC5/PWM_1.c **** 
  29:.\Generated_Source\PSoC5/PWM_1.c **** 
  30:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Start
  32:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/PWM_1.c **** *
  34:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  35:.\Generated_Source\PSoC5/PWM_1.c **** *  The start function initializes the pwm with the default values, the 
  36:.\Generated_Source\PSoC5/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  37:.\Generated_Source\PSoC5/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  38:.\Generated_Source\PSoC5/PWM_1.c **** *
  39:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
  40:.\Generated_Source\PSoC5/PWM_1.c **** *  None  
  41:.\Generated_Source\PSoC5/PWM_1.c **** *
  42:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
  43:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  44:.\Generated_Source\PSoC5/PWM_1.c **** *
  45:.\Generated_Source\PSoC5/PWM_1.c **** * Global variables:
  46:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the 
  47:.\Generated_Source\PSoC5/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  48:.\Generated_Source\PSoC5/PWM_1.c **** *
  49:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  50:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Start(void) 
  51:.\Generated_Source\PSoC5/PWM_1.c **** {
  33              		.loc 1 51 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              	.LCFI1:
  44              		.cfi_def_cfa_register 7
  52:.\Generated_Source\PSoC5/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  53:.\Generated_Source\PSoC5/PWM_1.c ****     if(PWM_1_initVar == 0u)
  45              		.loc 1 53 0
  46 0004 40F20003 		movw	r3, #:lower16:PWM_1_initVar
  47 0008 C0F20003 		movt	r3, #:upper16:PWM_1_initVar
  48 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  49 000e 002B     		cmp	r3, #0
  50 0010 08D1     		bne	.L2
  54:.\Generated_Source\PSoC5/PWM_1.c ****     {
  55:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_Init();
  51              		.loc 1 55 0
  52 0012 FFF7FEFF 		bl	PWM_1_Init
  56:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_initVar = 1u;
  53              		.loc 1 56 0
  54 0016 40F20003 		movw	r3, #:lower16:PWM_1_initVar
  55 001a C0F20003 		movt	r3, #:upper16:PWM_1_initVar
  56 001e 4FF00102 		mov	r2, #1
  57 0022 1A70     		strb	r2, [r3, #0]
  58              	.L2:
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 3


  57:.\Generated_Source\PSoC5/PWM_1.c ****     }
  58:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_Enable();
  59              		.loc 1 58 0
  60 0024 FFF7FEFF 		bl	PWM_1_Enable
  59:.\Generated_Source\PSoC5/PWM_1.c **** 
  60:.\Generated_Source\PSoC5/PWM_1.c **** }
  61              		.loc 1 60 0
  62 0028 80BD     		pop	{r7, pc}
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	PWM_1_Start, .-PWM_1_Start
  66 002a 00BF     		.section	.text.PWM_1_Init,"ax",%progbits
  67              		.align	2
  68              		.global	PWM_1_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	PWM_1_Init, %function
  72              	PWM_1_Init:
  73              	.LFB1:
  61:.\Generated_Source\PSoC5/PWM_1.c **** 
  62:.\Generated_Source\PSoC5/PWM_1.c **** 
  63:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
  64:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Init
  65:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
  66:.\Generated_Source\PSoC5/PWM_1.c **** *
  67:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
  68:.\Generated_Source\PSoC5/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the 
  69:.\Generated_Source\PSoC5/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in 
  70:.\Generated_Source\PSoC5/PWM_1.c **** *  PWM_1_Start().
  71:.\Generated_Source\PSoC5/PWM_1.c **** *
  72:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
  73:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  74:.\Generated_Source\PSoC5/PWM_1.c **** *
  75:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
  76:.\Generated_Source\PSoC5/PWM_1.c **** *  None
  77:.\Generated_Source\PSoC5/PWM_1.c **** *
  78:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
  79:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Init(void) 
  80:.\Generated_Source\PSoC5/PWM_1.c **** {
  74              		.loc 1 80 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI2:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 7, -8
  82              		.cfi_offset 14, -4
  83 0002 82B0     		sub	sp, sp, #8
  84              	.LCFI3:
  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
  87              	.LCFI4:
  88              		.cfi_def_cfa_register 7
  81:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  82:.\Generated_Source\PSoC5/PWM_1.c ****         uint8 ctrl;
  83:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 4


  84:.\Generated_Source\PSoC5/PWM_1.c ****     
  85:.\Generated_Source\PSoC5/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction) 
  86:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
  87:.\Generated_Source\PSoC5/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  88:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 PWM_1_interruptState;
  89:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  90:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  91:.\Generated_Source\PSoC5/PWM_1.c ****     
  92:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  93:.\Generated_Source\PSoC5/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  94:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
  95:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
  96:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
  97:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
  98:.\Generated_Source\PSoC5/PWM_1.c ****                 
  99:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 100:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 101:.\Generated_Source\PSoC5/PWM_1.c ****         
 102:.\Generated_Source\PSoC5/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 103:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 104:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;     
 105:.\Generated_Source\PSoC5/PWM_1.c ****                 
 106:.\Generated_Source\PSoC5/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 107:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 108:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 109:.\Generated_Source\PSoC5/PWM_1.c ****        
 110:.\Generated_Source\PSoC5/PWM_1.c ****     #elif (PWM_1_UseControl)
 111:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 112:.\Generated_Source\PSoC5/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) & ((uint8)(~PWM_1_CTRL_CMPMODE1
  89              		.loc 1 112 0
  90 0006 46F27B53 		movw	r3, #25979
  91 000a C4F20003 		movt	r3, 16384
  92 000e 1B78     		ldrb	r3, [r3, #0]
  93 0010 DBB2     		uxtb	r3, r3
  94 0012 23F03F03 		bic	r3, r3, #63
  95 0016 FB71     		strb	r3, [r7, #7]
 113:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE | 
  96              		.loc 1 113 0
  97 0018 46F27B53 		movw	r3, #25979
  98 001c C4F20003 		movt	r3, 16384
  99 0020 FA79     		ldrb	r2, [r7, #7]
 100 0022 42F00902 		orr	r2, r2, #9
 101 0026 D2B2     		uxtb	r2, r2
 102 0028 1A70     		strb	r2, [r3, #0]
 114:.\Generated_Source\PSoC5/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 115:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 116:.\Generated_Source\PSoC5/PWM_1.c ****         
 117:.\Generated_Source\PSoC5/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 118:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 119:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 120:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 103              		.loc 1 120 0
 104 002a 46F29B53 		movw	r3, #26011
 105 002e C4F20003 		movt	r3, 16384
 106 0032 46F29B52 		movw	r2, #26011
 107 0036 C4F20002 		movt	r2, 16384
 108 003a 1278     		ldrb	r2, [r2, #0]
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 5


 109 003c D2B2     		uxtb	r2, r2
 110 003e 42F00102 		orr	r2, r2, #1
 111 0042 D2B2     		uxtb	r2, r2
 112 0044 1A70     		strb	r2, [r3, #0]
 121:.\Generated_Source\PSoC5/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 122:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 123:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 124:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 125:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 126:.\Generated_Source\PSoC5/PWM_1.c **** 
 127:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 113              		.loc 1 127 0
 114 0046 4FF0FF00 		mov	r0, #255
 115 004a FFF7FEFF 		bl	PWM_1_WriteCounter
 128:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 129:.\Generated_Source\PSoC5/PWM_1.c ****         
 130:.\Generated_Source\PSoC5/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 116              		.loc 1 130 0
 117 004e 4FF0FF00 		mov	r0, #255
 118 0052 FFF7FEFF 		bl	PWM_1_WritePeriod
 131:.\Generated_Source\PSoC5/PWM_1.c **** 
 132:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 133:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 134:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 135:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 119              		.loc 1 135 0
 120 0056 4FF00000 		mov	r0, #0
 121 005a FFF7FEFF 		bl	PWM_1_WriteCompare1
 136:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 122              		.loc 1 136 0
 123 005e 4FF00000 		mov	r0, #0
 124 0062 FFF7FEFF 		bl	PWM_1_WriteCompare2
 137:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 138:.\Generated_Source\PSoC5/PWM_1.c ****         
 139:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 140:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 141:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 142:.\Generated_Source\PSoC5/PWM_1.c ****         
 143:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 144:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 145:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 146:.\Generated_Source\PSoC5/PWM_1.c **** 
 147:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 148:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 125              		.loc 1 148 0
 126 0066 4FF00000 		mov	r0, #0
 127 006a FFF7FEFF 		bl	PWM_1_SetInterruptMode
 149:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 150:.\Generated_Source\PSoC5/PWM_1.c ****         
 151:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 152:.\Generated_Source\PSoC5/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 153:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 154:.\Generated_Source\PSoC5/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 155:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 156:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 157:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UseStatus)
 158:.\Generated_Source\PSoC5/PWM_1.c ****             
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 6


 159:.\Generated_Source\PSoC5/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 160:.\Generated_Source\PSoC5/PWM_1.c ****             /* Enter Critical Region*/
 161:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 128              		.loc 1 161 0
 129 006e FFF7FEFF 		bl	CyEnterCriticalSection
 130 0072 0346     		mov	r3, r0
 131 0074 BB71     		strb	r3, [r7, #6]
 162:.\Generated_Source\PSoC5/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 163:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 132              		.loc 1 163 0
 133 0076 46F29B53 		movw	r3, #26011
 134 007a C4F20003 		movt	r3, 16384
 135 007e 46F29B52 		movw	r2, #26011
 136 0082 C4F20002 		movt	r2, 16384
 137 0086 1278     		ldrb	r2, [r2, #0]
 138 0088 D2B2     		uxtb	r2, r2
 139 008a 42F01002 		orr	r2, r2, #16
 140 008e D2B2     		uxtb	r2, r2
 141 0090 1A70     		strb	r2, [r3, #0]
 164:.\Generated_Source\PSoC5/PWM_1.c ****             
 165:.\Generated_Source\PSoC5/PWM_1.c ****              /* Exit Critical Region*/
 166:.\Generated_Source\PSoC5/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 142              		.loc 1 166 0
 143 0092 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 144 0094 1846     		mov	r0, r3
 145 0096 FFF7FEFF 		bl	CyExitCriticalSection
 167:.\Generated_Source\PSoC5/PWM_1.c ****             
 168:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 169:.\Generated_Source\PSoC5/PWM_1.c ****                    bit to be set on FIFO full. */
 170:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_ClearFIFO();
 146              		.loc 1 170 0
 147 009a FFF7FEFF 		bl	PWM_1_ClearFIFO
 171:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 172:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 173:.\Generated_Source\PSoC5/PWM_1.c **** }
 148              		.loc 1 173 0
 149 009e 07F10807 		add	r7, r7, #8
 150 00a2 BD46     		mov	sp, r7
 151 00a4 80BD     		pop	{r7, pc}
 152              		.cfi_endproc
 153              	.LFE1:
 154              		.size	PWM_1_Init, .-PWM_1_Init
 155 00a6 00BF     		.section	.text.PWM_1_Enable,"ax",%progbits
 156              		.align	2
 157              		.global	PWM_1_Enable
 158              		.thumb
 159              		.thumb_func
 160              		.type	PWM_1_Enable, %function
 161              	PWM_1_Enable:
 162              	.LFB2:
 174:.\Generated_Source\PSoC5/PWM_1.c **** 
 175:.\Generated_Source\PSoC5/PWM_1.c **** 
 176:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 177:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Enable
 178:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 179:.\Generated_Source\PSoC5/PWM_1.c **** *
 180:.\Generated_Source\PSoC5/PWM_1.c **** * Summary: 
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 7


 181:.\Generated_Source\PSoC5/PWM_1.c **** *  Enables the PWM block operation
 182:.\Generated_Source\PSoC5/PWM_1.c **** *
 183:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
 184:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 185:.\Generated_Source\PSoC5/PWM_1.c **** *
 186:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
 187:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 188:.\Generated_Source\PSoC5/PWM_1.c **** *
 189:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects: 
 190:.\Generated_Source\PSoC5/PWM_1.c **** *  This works only if software enable mode is chosen
 191:.\Generated_Source\PSoC5/PWM_1.c **** *
 192:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Enable(void) 
 194:.\Generated_Source\PSoC5/PWM_1.c **** {
 163              		.loc 1 194 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167              		@ link register save eliminated.
 168 0000 80B4     		push	{r7}
 169              	.LCFI5:
 170              		.cfi_def_cfa_offset 4
 171              		.cfi_offset 7, -4
 172 0002 00AF     		add	r7, sp, #0
 173              	.LCFI6:
 174              		.cfi_def_cfa_register 7
 195:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 196:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 197:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 198:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 199:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 200:.\Generated_Source\PSoC5/PWM_1.c ****     
 201:.\Generated_Source\PSoC5/PWM_1.c ****     /* Enable the PWM from the control register  */
 202:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
 175              		.loc 1 203 0
 176 0004 46F27B53 		movw	r3, #25979
 177 0008 C4F20003 		movt	r3, 16384
 178 000c 46F27B52 		movw	r2, #25979
 179 0010 C4F20002 		movt	r2, 16384
 180 0014 1278     		ldrb	r2, [r2, #0]
 181 0016 D2B2     		uxtb	r2, r2
 182 0018 62F07F02 		orn	r2, r2, #127
 183 001c D2B2     		uxtb	r2, r2
 184 001e 1A70     		strb	r2, [r3, #0]
 204:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 205:.\Generated_Source\PSoC5/PWM_1.c **** }
 185              		.loc 1 205 0
 186 0020 BD46     		mov	sp, r7
 187 0022 80BC     		pop	{r7}
 188 0024 7047     		bx	lr
 189              		.cfi_endproc
 190              	.LFE2:
 191              		.size	PWM_1_Enable, .-PWM_1_Enable
 192 0026 00BF     		.section	.text.PWM_1_Stop,"ax",%progbits
 193              		.align	2
 194              		.global	PWM_1_Stop
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 8


 195              		.thumb
 196              		.thumb_func
 197              		.type	PWM_1_Stop, %function
 198              	PWM_1_Stop:
 199              	.LFB3:
 206:.\Generated_Source\PSoC5/PWM_1.c **** 
 207:.\Generated_Source\PSoC5/PWM_1.c **** 
 208:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 209:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_Stop
 210:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 211:.\Generated_Source\PSoC5/PWM_1.c **** *
 212:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 213:.\Generated_Source\PSoC5/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 214:.\Generated_Source\PSoC5/PWM_1.c **** *  interrupts.
 215:.\Generated_Source\PSoC5/PWM_1.c **** *
 216:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
 217:.\Generated_Source\PSoC5/PWM_1.c **** *  None  
 218:.\Generated_Source\PSoC5/PWM_1.c **** *
 219:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
 220:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 221:.\Generated_Source\PSoC5/PWM_1.c **** *
 222:.\Generated_Source\PSoC5/PWM_1.c **** * Side Effects:
 223:.\Generated_Source\PSoC5/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 224:.\Generated_Source\PSoC5/PWM_1.c **** *  has no effect on the operation of the PWM
 225:.\Generated_Source\PSoC5/PWM_1.c **** *
 226:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_Stop(void) 
 228:.\Generated_Source\PSoC5/PWM_1.c **** {
 200              		.loc 1 228 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205 0000 80B4     		push	{r7}
 206              	.LCFI7:
 207              		.cfi_def_cfa_offset 4
 208              		.cfi_offset 7, -4
 209 0002 00AF     		add	r7, sp, #0
 210              	.LCFI8:
 211              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 230:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
 212              		.loc 1 230 0
 213 0004 46F27B53 		movw	r3, #25979
 214 0008 C4F20003 		movt	r3, 16384
 215 000c 46F27B52 		movw	r2, #25979
 216 0010 C4F20002 		movt	r2, 16384
 217 0014 1278     		ldrb	r2, [r2, #0]
 218 0016 D2B2     		uxtb	r2, r2
 219 0018 02F07F02 		and	r2, r2, #127
 220 001c D2B2     		uxtb	r2, r2
 221 001e 1A70     		strb	r2, [r3, #0]
 231:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 232:.\Generated_Source\PSoC5/PWM_1.c ****     
 233:.\Generated_Source\PSoC5/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 234:.\Generated_Source\PSoC5/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 235:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 9


 236:.\Generated_Source\PSoC5/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 237:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_1.c **** }
 222              		.loc 1 238 0
 223 0020 BD46     		mov	sp, r7
 224 0022 80BC     		pop	{r7}
 225 0024 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE3:
 228              		.size	PWM_1_Stop, .-PWM_1_Stop
 229 0026 00BF     		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 230              		.align	2
 231              		.global	PWM_1_WriteCounter
 232              		.thumb
 233              		.thumb_func
 234              		.type	PWM_1_WriteCounter, %function
 235              	PWM_1_WriteCounter:
 236              	.LFB4:
 239:.\Generated_Source\PSoC5/PWM_1.c **** 
 240:.\Generated_Source\PSoC5/PWM_1.c **** 
 241:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 242:.\Generated_Source\PSoC5/PWM_1.c **** 	#if (PWM_1_CompareMode1SW)
 243:.\Generated_Source\PSoC5/PWM_1.c **** 
 244:.\Generated_Source\PSoC5/PWM_1.c **** 
 245:.\Generated_Source\PSoC5/PWM_1.c **** 		/*******************************************************************************
 246:.\Generated_Source\PSoC5/PWM_1.c **** 		* Function Name: PWM_1_SetCompareMode
 247:.\Generated_Source\PSoC5/PWM_1.c **** 		********************************************************************************
 248:.\Generated_Source\PSoC5/PWM_1.c **** 		* 
 249:.\Generated_Source\PSoC5/PWM_1.c **** 		* Summary:
 250:.\Generated_Source\PSoC5/PWM_1.c **** 		*  This function writes the Compare Mode for the pwm output when in Dither mode,
 251:.\Generated_Source\PSoC5/PWM_1.c **** 		*  Center Align Mode or One Output Mode.
 252:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 253:.\Generated_Source\PSoC5/PWM_1.c **** 		* Parameters:
 254:.\Generated_Source\PSoC5/PWM_1.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 255:.\Generated_Source\PSoC5/PWM_1.c **** 		*                defined in the H file as input arguments.
 256:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 257:.\Generated_Source\PSoC5/PWM_1.c **** 		* Return:
 258:.\Generated_Source\PSoC5/PWM_1.c **** 		*  None
 259:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 260:.\Generated_Source\PSoC5/PWM_1.c **** 		*******************************************************************************/
 261:.\Generated_Source\PSoC5/PWM_1.c **** 		void PWM_1_SetCompareMode(uint8 comparemode) 
 262:.\Generated_Source\PSoC5/PWM_1.c **** 		{
 263:.\Generated_Source\PSoC5/PWM_1.c **** 		    #if(PWM_1_UsingFixedFunction)
 264:.\Generated_Source\PSoC5/PWM_1.c ****             
 265:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 266:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 267:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 268:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 269:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 270:.\Generated_Source\PSoC5/PWM_1.c ****             
 271:.\Generated_Source\PSoC5/PWM_1.c **** 	            PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 272:.\Generated_Source\PSoC5/PWM_1.c **** 	            PWM_1_CONTROL3 |= comparemodemasked;     
 273:.\Generated_Source\PSoC5/PWM_1.c **** 		                
 274:.\Generated_Source\PSoC5/PWM_1.c **** 		    #elif (PWM_1_UseControl)
 275:.\Generated_Source\PSoC5/PWM_1.c **** 		        
 276:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 277:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 10


 278:.\Generated_Source\PSoC5/PWM_1.c ****     		                                    PWM_1_CTRL_CMPMODE1_MASK;
 279:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 280:.\Generated_Source\PSoC5/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;             
 281:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 282:.\Generated_Source\PSoC5/PWM_1.c ****                 
 283:.\Generated_Source\PSoC5/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)                            
 284:.\Generated_Source\PSoC5/PWM_1.c ****     		        uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT))
 285:.\Generated_Source\PSoC5/PWM_1.c ****     		                                   PWM_1_CTRL_CMPMODE2_MASK;
 286:.\Generated_Source\PSoC5/PWM_1.c ****                 #else
 287:.\Generated_Source\PSoC5/PWM_1.c ****     		        uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;                
 288:.\Generated_Source\PSoC5/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 289:.\Generated_Source\PSoC5/PWM_1.c ****                 
 290:.\Generated_Source\PSoC5/PWM_1.c **** 		        /*Clear existing mode */
 291:.\Generated_Source\PSoC5/PWM_1.c **** 		        PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK | PWM_1_CTRL_CMPMODE2_MASK))); 
 292:.\Generated_Source\PSoC5/PWM_1.c **** 		        PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 293:.\Generated_Source\PSoC5/PWM_1.c **** 		        
 294:.\Generated_Source\PSoC5/PWM_1.c **** 		    #else
 295:.\Generated_Source\PSoC5/PWM_1.c **** 		        uint8 temp = comparemode;
 296:.\Generated_Source\PSoC5/PWM_1.c **** 		    #endif /* (PWM_1_UsingFixedFunction) */
 297:.\Generated_Source\PSoC5/PWM_1.c **** 		}
 298:.\Generated_Source\PSoC5/PWM_1.c **** 	#endif /* PWM_1_CompareMode1SW */
 299:.\Generated_Source\PSoC5/PWM_1.c **** 
 300:.\Generated_Source\PSoC5/PWM_1.c **** #else /* UseOneCompareMode */
 301:.\Generated_Source\PSoC5/PWM_1.c **** 
 302:.\Generated_Source\PSoC5/PWM_1.c **** 	#if (PWM_1_CompareMode1SW)
 303:.\Generated_Source\PSoC5/PWM_1.c **** 
 304:.\Generated_Source\PSoC5/PWM_1.c **** 
 305:.\Generated_Source\PSoC5/PWM_1.c **** 		/*******************************************************************************
 306:.\Generated_Source\PSoC5/PWM_1.c **** 		* Function Name: PWM_1_SetCompareMode1
 307:.\Generated_Source\PSoC5/PWM_1.c **** 		********************************************************************************
 308:.\Generated_Source\PSoC5/PWM_1.c **** 		* 
 309:.\Generated_Source\PSoC5/PWM_1.c **** 		* Summary:
 310:.\Generated_Source\PSoC5/PWM_1.c **** 		*  This function writes the Compare Mode for the pwm or pwm1 output
 311:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 312:.\Generated_Source\PSoC5/PWM_1.c **** 		* Parameters:  
 313:.\Generated_Source\PSoC5/PWM_1.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 314:.\Generated_Source\PSoC5/PWM_1.c **** 		*                defined in the H file as input arguments.
 315:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 316:.\Generated_Source\PSoC5/PWM_1.c **** 		* Return: 
 317:.\Generated_Source\PSoC5/PWM_1.c **** 		*  None
 318:.\Generated_Source\PSoC5/PWM_1.c **** 		*
 319:.\Generated_Source\PSoC5/PWM_1.c **** 		*******************************************************************************/
 320:.\Generated_Source\PSoC5/PWM_1.c **** 		void PWM_1_SetCompareMode1(uint8 comparemode) 
 321:.\Generated_Source\PSoC5/PWM_1.c **** 		{
 322:.\Generated_Source\PSoC5/PWM_1.c **** 		    #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 323:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 324:.\Generated_Source\PSoC5/PWM_1.c ****     		                               PWM_1_CTRL_CMPMODE1_MASK;
 325:.\Generated_Source\PSoC5/PWM_1.c **** 		    #else
 326:.\Generated_Source\PSoC5/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;                
 327:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 328:.\Generated_Source\PSoC5/PWM_1.c ****                    
 329:.\Generated_Source\PSoC5/PWM_1.c **** 		    #if (PWM_1_UseControl)
 330:.\Generated_Source\PSoC5/PWM_1.c **** 		        PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 331:.\Generated_Source\PSoC5/PWM_1.c **** 		        PWM_1_CONTROL |= comparemodemasked;
 332:.\Generated_Source\PSoC5/PWM_1.c **** 		    #endif /* (PWM_1_UseControl) */
 333:.\Generated_Source\PSoC5/PWM_1.c **** 		}
 334:.\Generated_Source\PSoC5/PWM_1.c **** 	#endif /* PWM_1_CompareMode1SW */
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 11


 335:.\Generated_Source\PSoC5/PWM_1.c **** 
 336:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 337:.\Generated_Source\PSoC5/PWM_1.c **** 
 338:.\Generated_Source\PSoC5/PWM_1.c **** 
 339:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 340:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 341:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 342:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 343:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 344:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 345:.\Generated_Source\PSoC5/PWM_1.c ****     *
 346:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 347:.\Generated_Source\PSoC5/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 348:.\Generated_Source\PSoC5/PWM_1.c ****     *                defined in the H file as input arguments.
 349:.\Generated_Source\PSoC5/PWM_1.c ****     *
 350:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 351:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 352:.\Generated_Source\PSoC5/PWM_1.c ****     *
 353:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 354:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 355:.\Generated_Source\PSoC5/PWM_1.c ****     {
 356:.\Generated_Source\PSoC5/PWM_1.c **** 
 357:.\Generated_Source\PSoC5/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 358:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) & 
 359:.\Generated_Source\PSoC5/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 360:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 361:.\Generated_Source\PSoC5/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;            
 362:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 363:.\Generated_Source\PSoC5/PWM_1.c ****         
 364:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseControl)
 365:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 366:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 367:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 368:.\Generated_Source\PSoC5/PWM_1.c ****     }
 369:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 370:.\Generated_Source\PSoC5/PWM_1.c **** 
 371:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 372:.\Generated_Source\PSoC5/PWM_1.c **** 
 373:.\Generated_Source\PSoC5/PWM_1.c **** 
 374:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 375:.\Generated_Source\PSoC5/PWM_1.c **** 
 376:.\Generated_Source\PSoC5/PWM_1.c **** 
 377:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 378:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 379:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 380:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 381:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 382:.\Generated_Source\PSoC5/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be 
 383:.\Generated_Source\PSoC5/PWM_1.c ****     *  implemented for that currently running period and only that period. This API 
 384:.\Generated_Source\PSoC5/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function 
 385:.\Generated_Source\PSoC5/PWM_1.c ****     *  PWM implementation.    
 386:.\Generated_Source\PSoC5/PWM_1.c ****     *
 387:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 388:.\Generated_Source\PSoC5/PWM_1.c ****     *  counter:  The period new period counter value.
 389:.\Generated_Source\PSoC5/PWM_1.c ****     *
 390:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 391:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 12


 392:.\Generated_Source\PSoC5/PWM_1.c ****     *
 393:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects: 
 394:.\Generated_Source\PSoC5/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 395:.\Generated_Source\PSoC5/PWM_1.c ****     *
 396:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 397:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCounter(uint8 counter) \
 398:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 399:.\Generated_Source\PSoC5/PWM_1.c ****     {
 237              		.loc 1 399 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242 0000 80B4     		push	{r7}
 243              	.LCFI9:
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 7, -4
 246 0002 83B0     		sub	sp, sp, #12
 247              	.LCFI10:
 248              		.cfi_def_cfa_offset 16
 249 0004 00AF     		add	r7, sp, #0
 250              	.LCFI11:
 251              		.cfi_def_cfa_register 7
 252 0006 0346     		mov	r3, r0
 253 0008 FB71     		strb	r3, [r7, #7]
 400:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_COUNTER_LSB_PTR, counter);
 254              		.loc 1 400 0
 255 000a 46F20B53 		movw	r3, #25867
 256 000e C4F20003 		movt	r3, 16384
 257 0012 FA79     		ldrb	r2, [r7, #7]
 258 0014 1A70     		strb	r2, [r3, #0]
 401:.\Generated_Source\PSoC5/PWM_1.c ****     }
 259              		.loc 1 401 0
 260 0016 07F10C07 		add	r7, r7, #12
 261 001a BD46     		mov	sp, r7
 262 001c 80BC     		pop	{r7}
 263 001e 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE4:
 266              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 267              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_1_ReadCounter
 270              		.thumb
 271              		.thumb_func
 272              		.type	PWM_1_ReadCounter, %function
 273              	PWM_1_ReadCounter:
 274              	.LFB5:
 402:.\Generated_Source\PSoC5/PWM_1.c **** 
 403:.\Generated_Source\PSoC5/PWM_1.c **** 
 404:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 405:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 406:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 407:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 408:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 409:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 410:.\Generated_Source\PSoC5/PWM_1.c ****     *  if the counter is enabled or running.
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 13


 411:.\Generated_Source\PSoC5/PWM_1.c ****     *
 412:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 413:.\Generated_Source\PSoC5/PWM_1.c ****     *  None  
 414:.\Generated_Source\PSoC5/PWM_1.c ****     *
 415:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 416:.\Generated_Source\PSoC5/PWM_1.c ****     *  The current value of the counter.
 417:.\Generated_Source\PSoC5/PWM_1.c ****     *
 418:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 419:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCounter(void) 
 420:.\Generated_Source\PSoC5/PWM_1.c ****     {
 275              		.loc 1 420 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 280 0000 80B4     		push	{r7}
 281              	.LCFI12:
 282              		.cfi_def_cfa_offset 4
 283              		.cfi_offset 7, -4
 284 0002 00AF     		add	r7, sp, #0
 285              	.LCFI13:
 286              		.cfi_def_cfa_register 7
 421:.\Generated_Source\PSoC5/PWM_1.c ****         /* Force capture by reading Accumulator */
 422:.\Generated_Source\PSoC5/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 423:.\Generated_Source\PSoC5/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 424:.\Generated_Source\PSoC5/PWM_1.c ****         (void)PWM_1_COUNTERCAP_LSB;
 287              		.loc 1 424 0
 288 0004 46F21B53 		movw	r3, #25883
 289 0008 C4F20003 		movt	r3, 16384
 290 000c 1B78     		ldrb	r3, [r3, #0]
 425:.\Generated_Source\PSoC5/PWM_1.c ****         
 426:.\Generated_Source\PSoC5/PWM_1.c ****         /* Read the data from the FIFO (or capture register for Fixed Function)*/
 427:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 291              		.loc 1 427 0
 292 000e 46F25B53 		movw	r3, #25947
 293 0012 C4F20003 		movt	r3, 16384
 294 0016 1B78     		ldrb	r3, [r3, #0]
 295 0018 DBB2     		uxtb	r3, r3
 428:.\Generated_Source\PSoC5/PWM_1.c ****     }
 296              		.loc 1 428 0
 297 001a 1846     		mov	r0, r3
 298 001c BD46     		mov	sp, r7
 299 001e 80BC     		pop	{r7}
 300 0020 7047     		bx	lr
 301              		.cfi_endproc
 302              	.LFE5:
 303              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 304 0022 00BF     		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 305              		.align	2
 306              		.global	PWM_1_ClearFIFO
 307              		.thumb
 308              		.thumb_func
 309              		.type	PWM_1_ClearFIFO, %function
 310              	PWM_1_ClearFIFO:
 311              	.LFB6:
 429:.\Generated_Source\PSoC5/PWM_1.c **** 
 430:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_UseStatus)
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 14


 431:.\Generated_Source\PSoC5/PWM_1.c **** 
 432:.\Generated_Source\PSoC5/PWM_1.c **** 
 433:.\Generated_Source\PSoC5/PWM_1.c ****             /*******************************************************************************
 434:.\Generated_Source\PSoC5/PWM_1.c ****             * Function Name: PWM_1_ClearFIFO
 435:.\Generated_Source\PSoC5/PWM_1.c ****             ********************************************************************************
 436:.\Generated_Source\PSoC5/PWM_1.c ****             * 
 437:.\Generated_Source\PSoC5/PWM_1.c ****             * Summary:
 438:.\Generated_Source\PSoC5/PWM_1.c ****             *  This function clears all capture data from the capture FIFO
 439:.\Generated_Source\PSoC5/PWM_1.c ****             *
 440:.\Generated_Source\PSoC5/PWM_1.c ****             * Parameters:  
 441:.\Generated_Source\PSoC5/PWM_1.c ****             *  None
 442:.\Generated_Source\PSoC5/PWM_1.c ****             *
 443:.\Generated_Source\PSoC5/PWM_1.c ****             * Return: 
 444:.\Generated_Source\PSoC5/PWM_1.c ****             *  None
 445:.\Generated_Source\PSoC5/PWM_1.c ****             *
 446:.\Generated_Source\PSoC5/PWM_1.c ****             *******************************************************************************/
 447:.\Generated_Source\PSoC5/PWM_1.c ****             void PWM_1_ClearFIFO(void) 
 448:.\Generated_Source\PSoC5/PWM_1.c ****             {
 312              		.loc 1 448 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316 0000 80B5     		push	{r7, lr}
 317              	.LCFI14:
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 00AF     		add	r7, sp, #0
 322              	.LCFI15:
 323              		.cfi_def_cfa_register 7
 449:.\Generated_Source\PSoC5/PWM_1.c ****                 while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 324              		.loc 1 449 0
 325 0004 01E0     		b	.L10
 326              	.L11:
 450:.\Generated_Source\PSoC5/PWM_1.c ****                 {
 451:.\Generated_Source\PSoC5/PWM_1.c ****                     (void)PWM_1_ReadCapture();
 327              		.loc 1 451 0
 328 0006 FFF7FEFF 		bl	PWM_1_ReadCapture
 329              	.L10:
 449:.\Generated_Source\PSoC5/PWM_1.c ****                 while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 330              		.loc 1 449 0 discriminator 1
 331 000a FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 332 000e 0346     		mov	r3, r0
 333 0010 03F01003 		and	r3, r3, #16
 334 0014 002B     		cmp	r3, #0
 335 0016 F6D1     		bne	.L11
 452:.\Generated_Source\PSoC5/PWM_1.c ****                 }
 453:.\Generated_Source\PSoC5/PWM_1.c ****             }
 336              		.loc 1 453 0
 337 0018 80BD     		pop	{r7, pc}
 338              		.cfi_endproc
 339              	.LFE6:
 340              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 341 001a 00BF     		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 342              		.align	2
 343              		.global	PWM_1_WritePeriod
 344              		.thumb
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 15


 345              		.thumb_func
 346              		.type	PWM_1_WritePeriod, %function
 347              	PWM_1_WritePeriod:
 348              	.LFB7:
 454:.\Generated_Source\PSoC5/PWM_1.c **** 
 455:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* PWM_1_UseStatus */
 456:.\Generated_Source\PSoC5/PWM_1.c **** 
 457:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 458:.\Generated_Source\PSoC5/PWM_1.c **** 
 459:.\Generated_Source\PSoC5/PWM_1.c **** 
 460:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 461:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 462:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 463:.\Generated_Source\PSoC5/PWM_1.c **** * 
 464:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 465:.\Generated_Source\PSoC5/PWM_1.c **** *  This function is used to change the period of the counter.  The new period 
 466:.\Generated_Source\PSoC5/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 467:.\Generated_Source\PSoC5/PWM_1.c **** *
 468:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
 469:.\Generated_Source\PSoC5/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0 
 470:.\Generated_Source\PSoC5/PWM_1.c **** *           will result in the counter remaining at zero.
 471:.\Generated_Source\PSoC5/PWM_1.c **** *
 472:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
 473:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 474:.\Generated_Source\PSoC5/PWM_1.c **** *
 475:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/
 476:.\Generated_Source\PSoC5/PWM_1.c **** void PWM_1_WritePeriod(uint8 period) 
 477:.\Generated_Source\PSoC5/PWM_1.c **** {
 349              		.loc 1 477 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 8
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354 0000 80B4     		push	{r7}
 355              	.LCFI16:
 356              		.cfi_def_cfa_offset 4
 357              		.cfi_offset 7, -4
 358 0002 83B0     		sub	sp, sp, #12
 359              	.LCFI17:
 360              		.cfi_def_cfa_offset 16
 361 0004 00AF     		add	r7, sp, #0
 362              	.LCFI18:
 363              		.cfi_def_cfa_register 7
 364 0006 0346     		mov	r3, r0
 365 0008 FB71     		strb	r3, [r7, #7]
 478:.\Generated_Source\PSoC5/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 479:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 480:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 481:.\Generated_Source\PSoC5/PWM_1.c ****         CY_SET_REG8(PWM_1_PERIOD_LSB_PTR, period);
 366              		.loc 1 481 0
 367 000a 46F24B53 		movw	r3, #25931
 368 000e C4F20003 		movt	r3, 16384
 369 0012 FA79     		ldrb	r2, [r7, #7]
 370 0014 1A70     		strb	r2, [r3, #0]
 482:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 483:.\Generated_Source\PSoC5/PWM_1.c **** }
 371              		.loc 1 483 0
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 16


 372 0016 07F10C07 		add	r7, r7, #12
 373 001a BD46     		mov	sp, r7
 374 001c 80BC     		pop	{r7}
 375 001e 7047     		bx	lr
 376              		.cfi_endproc
 377              	.LFE7:
 378              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 379              		.section	.text.PWM_1_WriteCompare1,"ax",%progbits
 380              		.align	2
 381              		.global	PWM_1_WriteCompare1
 382              		.thumb
 383              		.thumb_func
 384              		.type	PWM_1_WriteCompare1, %function
 385              	PWM_1_WriteCompare1:
 386              	.LFB8:
 484:.\Generated_Source\PSoC5/PWM_1.c **** 
 485:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 486:.\Generated_Source\PSoC5/PWM_1.c **** 
 487:.\Generated_Source\PSoC5/PWM_1.c **** 
 488:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 489:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 490:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 491:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 492:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 493:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 494:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock. 
 495:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is 
 496:.\Generated_Source\PSoC5/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in 
 497:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode.
 498:.\Generated_Source\PSoC5/PWM_1.c ****     *
 499:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 500:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.  
 501:.\Generated_Source\PSoC5/PWM_1.c ****     *
 502:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 503:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 504:.\Generated_Source\PSoC5/PWM_1.c ****     *
 505:.\Generated_Source\PSoC5/PWM_1.c ****     * Side Effects:
 506:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 507:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 508:.\Generated_Source\PSoC5/PWM_1.c ****     *
 509:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 510:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare(uint8 compare) \
 511:.\Generated_Source\PSoC5/PWM_1.c ****                                        
 512:.\Generated_Source\PSoC5/PWM_1.c ****     {	
 513:.\Generated_Source\PSoC5/PWM_1.c **** 		#if(PWM_1_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/PWM_1.c **** 			CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 515:.\Generated_Source\PSoC5/PWM_1.c **** 		#else
 516:.\Generated_Source\PSoC5/PWM_1.c **** 	        CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);	
 517:.\Generated_Source\PSoC5/PWM_1.c **** 		#endif /* (PWM_1_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/PWM_1.c ****         
 519:.\Generated_Source\PSoC5/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 520:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/PWM_1.c ****     			CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 522:.\Generated_Source\PSoC5/PWM_1.c ****     		#else
 523:.\Generated_Source\PSoC5/PWM_1.c ****     	        CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));	
 524:.\Generated_Source\PSoC5/PWM_1.c ****     		#endif /* (PWM_1_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 17


 526:.\Generated_Source\PSoC5/PWM_1.c ****     }
 527:.\Generated_Source\PSoC5/PWM_1.c **** 
 528:.\Generated_Source\PSoC5/PWM_1.c **** 
 529:.\Generated_Source\PSoC5/PWM_1.c **** #else
 530:.\Generated_Source\PSoC5/PWM_1.c **** 
 531:.\Generated_Source\PSoC5/PWM_1.c **** 
 532:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 533:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 534:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 535:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 536:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 537:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will 
 538:.\Generated_Source\PSoC5/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be 
 539:.\Generated_Source\PSoC5/PWM_1.c ****     *  driven high when the present counter value is less than or less than or 
 540:.\Generated_Source\PSoC5/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 541:.\Generated_Source\PSoC5/PWM_1.c ****     *
 542:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 543:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.  
 544:.\Generated_Source\PSoC5/PWM_1.c ****     *
 545:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 546:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 547:.\Generated_Source\PSoC5/PWM_1.c ****     *
 548:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 549:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare1(uint8 compare) \
 550:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 551:.\Generated_Source\PSoC5/PWM_1.c ****     {
 387              		.loc 1 551 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 1, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392 0000 80B4     		push	{r7}
 393              	.LCFI19:
 394              		.cfi_def_cfa_offset 4
 395              		.cfi_offset 7, -4
 396 0002 83B0     		sub	sp, sp, #12
 397              	.LCFI20:
 398              		.cfi_def_cfa_offset 16
 399 0004 00AF     		add	r7, sp, #0
 400              	.LCFI21:
 401              		.cfi_def_cfa_register 7
 402 0006 0346     		mov	r3, r0
 403 0008 FB71     		strb	r3, [r7, #7]
 552:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 553:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 554:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 555:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 404              		.loc 1 555 0
 405 000a 46F22B53 		movw	r3, #25899
 406 000e C4F20003 		movt	r3, 16384
 407 0012 FA79     		ldrb	r2, [r7, #7]
 408 0014 1A70     		strb	r2, [r3, #0]
 556:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 557:.\Generated_Source\PSoC5/PWM_1.c ****     }
 409              		.loc 1 557 0
 410 0016 07F10C07 		add	r7, r7, #12
 411 001a BD46     		mov	sp, r7
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 18


 412 001c 80BC     		pop	{r7}
 413 001e 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE8:
 416              		.size	PWM_1_WriteCompare1, .-PWM_1_WriteCompare1
 417              		.section	.text.PWM_1_WriteCompare2,"ax",%progbits
 418              		.align	2
 419              		.global	PWM_1_WriteCompare2
 420              		.thumb
 421              		.thumb_func
 422              		.type	PWM_1_WriteCompare2, %function
 423              	PWM_1_WriteCompare2:
 424              	.LFB9:
 558:.\Generated_Source\PSoC5/PWM_1.c **** 
 559:.\Generated_Source\PSoC5/PWM_1.c **** 
 560:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 561:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 562:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 563:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 564:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 565:.\Generated_Source\PSoC5/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.  
 566:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.  
 567:.\Generated_Source\PSoC5/PWM_1.c ****     *  The compare output will be driven high when the present counter value is 
 568:.\Generated_Source\PSoC5/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the 
 569:.\Generated_Source\PSoC5/PWM_1.c ****     *  mode.
 570:.\Generated_Source\PSoC5/PWM_1.c ****     *
 571:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 572:.\Generated_Source\PSoC5/PWM_1.c ****     *  compare:  New compare value.  
 573:.\Generated_Source\PSoC5/PWM_1.c ****     *
 574:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 575:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 576:.\Generated_Source\PSoC5/PWM_1.c ****     *
 577:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 578:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteCompare2(uint8 compare) \
 579:.\Generated_Source\PSoC5/PWM_1.c ****                                         
 580:.\Generated_Source\PSoC5/PWM_1.c ****     {
 425              		.loc 1 580 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              	.LCFI22:
 432              		.cfi_def_cfa_offset 4
 433              		.cfi_offset 7, -4
 434 0002 83B0     		sub	sp, sp, #12
 435              	.LCFI23:
 436              		.cfi_def_cfa_offset 16
 437 0004 00AF     		add	r7, sp, #0
 438              	.LCFI24:
 439              		.cfi_def_cfa_register 7
 440 0006 0346     		mov	r3, r0
 441 0008 FB71     		strb	r3, [r7, #7]
 581:.\Generated_Source\PSoC5/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 582:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 583:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 584:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, compare);
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 19


 442              		.loc 1 584 0
 443 000a 46F23B53 		movw	r3, #25915
 444 000e C4F20003 		movt	r3, 16384
 445 0012 FA79     		ldrb	r2, [r7, #7]
 446 0014 1A70     		strb	r2, [r3, #0]
 585:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 586:.\Generated_Source\PSoC5/PWM_1.c ****     }
 447              		.loc 1 586 0
 448 0016 07F10C07 		add	r7, r7, #12
 449 001a BD46     		mov	sp, r7
 450 001c 80BC     		pop	{r7}
 451 001e 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE9:
 454              		.size	PWM_1_WriteCompare2, .-PWM_1_WriteCompare2
 455              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 456              		.align	2
 457              		.global	PWM_1_SetInterruptMode
 458              		.thumb
 459              		.thumb_func
 460              		.type	PWM_1_SetInterruptMode, %function
 461              	PWM_1_SetInterruptMode:
 462              	.LFB10:
 587:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* UseOneCompareMode */
 588:.\Generated_Source\PSoC5/PWM_1.c **** 
 589:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 590:.\Generated_Source\PSoC5/PWM_1.c **** 
 591:.\Generated_Source\PSoC5/PWM_1.c **** 
 592:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 593:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 594:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 595:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 596:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 597:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 598:.\Generated_Source\PSoC5/PWM_1.c ****     *
 599:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 600:.\Generated_Source\PSoC5/PWM_1.c ****     *  deadtime:  Number of counts for dead time 
 601:.\Generated_Source\PSoC5/PWM_1.c ****     *
 602:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 603:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 604:.\Generated_Source\PSoC5/PWM_1.c ****     *
 605:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 606:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 607:.\Generated_Source\PSoC5/PWM_1.c ****     {
 608:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 609:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 610:.\Generated_Source\PSoC5/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 611:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 612:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */        
 613:.\Generated_Source\PSoC5/PWM_1.c ****             /* Clear existing data */
 614:.\Generated_Source\PSoC5/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 615:.\Generated_Source\PSoC5/PWM_1.c ****             
 616:.\Generated_Source\PSoC5/PWM_1.c ****             /* Set new dead time */
 617:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)        
 618:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) & 
 619:.\Generated_Source\PSoC5/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 620:.\Generated_Source\PSoC5/PWM_1.c ****             #else
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 20


 621:.\Generated_Source\PSoC5/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;        
 622:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 623:.\Generated_Source\PSoC5/PWM_1.c ****         
 624:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 625:.\Generated_Source\PSoC5/PWM_1.c ****     }
 626:.\Generated_Source\PSoC5/PWM_1.c **** 
 627:.\Generated_Source\PSoC5/PWM_1.c **** 
 628:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 629:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 630:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 631:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 632:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 633:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 634:.\Generated_Source\PSoC5/PWM_1.c ****     *
 635:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 636:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 637:.\Generated_Source\PSoC5/PWM_1.c ****     *
 638:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 639:.\Generated_Source\PSoC5/PWM_1.c ****     *  Dead Band Counts
 640:.\Generated_Source\PSoC5/PWM_1.c ****     *
 641:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 642:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 643:.\Generated_Source\PSoC5/PWM_1.c ****     {
 644:.\Generated_Source\PSoC5/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 645:.\Generated_Source\PSoC5/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 646:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 647:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 648:.\Generated_Source\PSoC5/PWM_1.c ****         
 649:.\Generated_Source\PSoC5/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 650:.\Generated_Source\PSoC5/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)      
 651:.\Generated_Source\PSoC5/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >> 
 652:.\Generated_Source\PSoC5/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 653:.\Generated_Source\PSoC5/PWM_1.c ****             #else
 654:.\Generated_Source\PSoC5/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 655:.\Generated_Source\PSoC5/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 656:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 657:.\Generated_Source\PSoC5/PWM_1.c ****     }
 658:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* DeadBandUsed */
 659:.\Generated_Source\PSoC5/PWM_1.c **** 
 660:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 661:.\Generated_Source\PSoC5/PWM_1.c **** 
 662:.\Generated_Source\PSoC5/PWM_1.c **** 
 663:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 664:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 665:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 666:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 667:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 668:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt 
 669:.\Generated_Source\PSoC5/PWM_1.c ****     *  source status register.
 670:.\Generated_Source\PSoC5/PWM_1.c ****     *
 671:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 672:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled 
 673:.\Generated_Source\PSoC5/PWM_1.c ****     *
 674:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 675:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 676:.\Generated_Source\PSoC5/PWM_1.c ****     *
 677:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 21


 678:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode)  
 679:.\Generated_Source\PSoC5/PWM_1.c ****     {
 463              		.loc 1 679 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 8
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468 0000 80B4     		push	{r7}
 469              	.LCFI25:
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 7, -4
 472 0002 83B0     		sub	sp, sp, #12
 473              	.LCFI26:
 474              		.cfi_def_cfa_offset 16
 475 0004 00AF     		add	r7, sp, #0
 476              	.LCFI27:
 477              		.cfi_def_cfa_register 7
 478 0006 0346     		mov	r3, r0
 479 0008 FB71     		strb	r3, [r7, #7]
 680:.\Generated_Source\PSoC5/PWM_1.c ****     	CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 480              		.loc 1 680 0
 481 000a 46F28B53 		movw	r3, #25995
 482 000e C4F20003 		movt	r3, 16384
 483 0012 FA79     		ldrb	r2, [r7, #7]
 484 0014 1A70     		strb	r2, [r3, #0]
 681:.\Generated_Source\PSoC5/PWM_1.c ****     }
 485              		.loc 1 681 0
 486 0016 07F10C07 		add	r7, r7, #12
 487 001a BD46     		mov	sp, r7
 488 001c 80BC     		pop	{r7}
 489 001e 7047     		bx	lr
 490              		.cfi_endproc
 491              	.LFE10:
 492              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 493              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 494              		.align	2
 495              		.global	PWM_1_ReadStatusRegister
 496              		.thumb
 497              		.thumb_func
 498              		.type	PWM_1_ReadStatusRegister, %function
 499              	PWM_1_ReadStatusRegister:
 500              	.LFB11:
 682:.\Generated_Source\PSoC5/PWM_1.c **** 
 683:.\Generated_Source\PSoC5/PWM_1.c **** 
 684:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 685:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 686:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 687:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 688:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 689:.\Generated_Source\PSoC5/PWM_1.c ****     *  This function returns the current state of the status register. 
 690:.\Generated_Source\PSoC5/PWM_1.c ****     *
 691:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 692:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 693:.\Generated_Source\PSoC5/PWM_1.c ****     *
 694:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 695:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 696:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7:6] : Unused(0)
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 22


 697:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5]   : Kill event output
 698:.\Generated_Source\PSoC5/PWM_1.c ****     *  [4]   : FIFO not empty
 699:.\Generated_Source\PSoC5/PWM_1.c ****     *  [3]   : FIFO full
 700:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2]   : Terminal count
 701:.\Generated_Source\PSoC5/PWM_1.c ****     *  [1]   : Compare output 2
 702:.\Generated_Source\PSoC5/PWM_1.c ****     *  [0]   : Compare output 1
 703:.\Generated_Source\PSoC5/PWM_1.c ****     *
 704:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/
 705:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void)   
 706:.\Generated_Source\PSoC5/PWM_1.c ****     {
 501              		.loc 1 706 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 8
 504              		@ frame_needed = 1, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506 0000 80B4     		push	{r7}
 507              	.LCFI28:
 508              		.cfi_def_cfa_offset 4
 509              		.cfi_offset 7, -4
 510 0002 83B0     		sub	sp, sp, #12
 511              	.LCFI29:
 512              		.cfi_def_cfa_offset 16
 513 0004 00AF     		add	r7, sp, #0
 514              	.LCFI30:
 515              		.cfi_def_cfa_register 7
 707:.\Generated_Source\PSoC5/PWM_1.c ****     	uint8 result;
 708:.\Generated_Source\PSoC5/PWM_1.c ****     	
 709:.\Generated_Source\PSoC5/PWM_1.c ****     	result = CY_GET_REG8(PWM_1_STATUS_PTR);
 516              		.loc 1 709 0
 517 0006 46F26B53 		movw	r3, #25963
 518 000a C4F20003 		movt	r3, 16384
 519 000e 1B78     		ldrb	r3, [r3, #0]
 520 0010 FB71     		strb	r3, [r7, #7]
 710:.\Generated_Source\PSoC5/PWM_1.c ****     	return (result);
 521              		.loc 1 710 0
 522 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 711:.\Generated_Source\PSoC5/PWM_1.c ****     }
 523              		.loc 1 711 0
 524 0014 1846     		mov	r0, r3
 525 0016 07F10C07 		add	r7, r7, #12
 526 001a BD46     		mov	sp, r7
 527 001c 80BC     		pop	{r7}
 528 001e 7047     		bx	lr
 529              		.cfi_endproc
 530              	.LFE11:
 531              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 532              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 533              		.align	2
 534              		.global	PWM_1_ReadControlRegister
 535              		.thumb
 536              		.thumb_func
 537              		.type	PWM_1_ReadControlRegister, %function
 538              	PWM_1_ReadControlRegister:
 539              	.LFB12:
 712:.\Generated_Source\PSoC5/PWM_1.c **** 
 713:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 714:.\Generated_Source\PSoC5/PWM_1.c **** 
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 23


 715:.\Generated_Source\PSoC5/PWM_1.c **** 
 716:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseControl)
 717:.\Generated_Source\PSoC5/PWM_1.c **** 
 718:.\Generated_Source\PSoC5/PWM_1.c **** 
 719:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 720:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 721:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 722:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 723:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 724:.\Generated_Source\PSoC5/PWM_1.c ****     *  Returns the current state of the control register. This API is available 
 725:.\Generated_Source\PSoC5/PWM_1.c ****     *  only if the control register is not removed.
 726:.\Generated_Source\PSoC5/PWM_1.c ****     *
 727:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 728:.\Generated_Source\PSoC5/PWM_1.c ****     *  None 
 729:.\Generated_Source\PSoC5/PWM_1.c ****     *
 730:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 731:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 : Current control register value
 732:.\Generated_Source\PSoC5/PWM_1.c ****     *
 733:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/    
 734:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 735:.\Generated_Source\PSoC5/PWM_1.c ****     {
 540              		.loc 1 735 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 8
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544              		@ link register save eliminated.
 545 0000 80B4     		push	{r7}
 546              	.LCFI31:
 547              		.cfi_def_cfa_offset 4
 548              		.cfi_offset 7, -4
 549 0002 83B0     		sub	sp, sp, #12
 550              	.LCFI32:
 551              		.cfi_def_cfa_offset 16
 552 0004 00AF     		add	r7, sp, #0
 553              	.LCFI33:
 554              		.cfi_def_cfa_register 7
 736:.\Generated_Source\PSoC5/PWM_1.c ****     	uint8 result;
 737:.\Generated_Source\PSoC5/PWM_1.c ****     	
 738:.\Generated_Source\PSoC5/PWM_1.c ****     	result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 555              		.loc 1 738 0
 556 0006 46F27B53 		movw	r3, #25979
 557 000a C4F20003 		movt	r3, 16384
 558 000e 1B78     		ldrb	r3, [r3, #0]
 559 0010 FB71     		strb	r3, [r7, #7]
 739:.\Generated_Source\PSoC5/PWM_1.c ****     	return (result);
 560              		.loc 1 739 0
 561 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 740:.\Generated_Source\PSoC5/PWM_1.c ****     }
 562              		.loc 1 740 0
 563 0014 1846     		mov	r0, r3
 564 0016 07F10C07 		add	r7, r7, #12
 565 001a BD46     		mov	sp, r7
 566 001c 80BC     		pop	{r7}
 567 001e 7047     		bx	lr
 568              		.cfi_endproc
 569              	.LFE12:
 570              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 24


 571              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 572              		.align	2
 573              		.global	PWM_1_WriteControlRegister
 574              		.thumb
 575              		.thumb_func
 576              		.type	PWM_1_WriteControlRegister, %function
 577              	PWM_1_WriteControlRegister:
 578              	.LFB13:
 741:.\Generated_Source\PSoC5/PWM_1.c **** 
 742:.\Generated_Source\PSoC5/PWM_1.c **** 
 743:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 744:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 745:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 746:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 747:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 748:.\Generated_Source\PSoC5/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if 
 749:.\Generated_Source\PSoC5/PWM_1.c ****     *  the control register is not removed.
 750:.\Generated_Source\PSoC5/PWM_1.c ****     *
 751:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 752:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 753:.\Generated_Source\PSoC5/PWM_1.c ****     *  [7]   : PWM Enable
 754:.\Generated_Source\PSoC5/PWM_1.c ****     *  [6]   : Reset
 755:.\Generated_Source\PSoC5/PWM_1.c ****     *  [5:3] : Compare Mode2
 756:.\Generated_Source\PSoC5/PWM_1.c ****     *  [2:0] : Compare Mode2
 757:.\Generated_Source\PSoC5/PWM_1.c ****     *
 758:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 759:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 760:.\Generated_Source\PSoC5/PWM_1.c ****     *
 761:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/  
 762:.\Generated_Source\PSoC5/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 763:.\Generated_Source\PSoC5/PWM_1.c ****     {
 579              		.loc 1 763 0
 580              		.cfi_startproc
 581              		@ args = 0, pretend = 0, frame = 8
 582              		@ frame_needed = 1, uses_anonymous_args = 0
 583              		@ link register save eliminated.
 584 0000 80B4     		push	{r7}
 585              	.LCFI34:
 586              		.cfi_def_cfa_offset 4
 587              		.cfi_offset 7, -4
 588 0002 83B0     		sub	sp, sp, #12
 589              	.LCFI35:
 590              		.cfi_def_cfa_offset 16
 591 0004 00AF     		add	r7, sp, #0
 592              	.LCFI36:
 593              		.cfi_def_cfa_register 7
 594 0006 0346     		mov	r3, r0
 595 0008 FB71     		strb	r3, [r7, #7]
 764:.\Generated_Source\PSoC5/PWM_1.c ****     	CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 596              		.loc 1 764 0
 597 000a 46F27B53 		movw	r3, #25979
 598 000e C4F20003 		movt	r3, 16384
 599 0012 FA79     		ldrb	r2, [r7, #7]
 600 0014 1A70     		strb	r2, [r3, #0]
 765:.\Generated_Source\PSoC5/PWM_1.c ****     }
 601              		.loc 1 765 0
 602 0016 07F10C07 		add	r7, r7, #12
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 25


 603 001a BD46     		mov	sp, r7
 604 001c 80BC     		pop	{r7}
 605 001e 7047     		bx	lr
 606              		.cfi_endproc
 607              	.LFE13:
 608              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 609              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 610              		.align	2
 611              		.global	PWM_1_ReadCapture
 612              		.thumb
 613              		.thumb_func
 614              		.type	PWM_1_ReadCapture, %function
 615              	PWM_1_ReadCapture:
 616              	.LFB14:
 766:.\Generated_Source\PSoC5/PWM_1.c **** 	
 767:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 768:.\Generated_Source\PSoC5/PWM_1.c **** 
 769:.\Generated_Source\PSoC5/PWM_1.c **** 
 770:.\Generated_Source\PSoC5/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 771:.\Generated_Source\PSoC5/PWM_1.c **** 
 772:.\Generated_Source\PSoC5/PWM_1.c **** 
 773:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 774:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 775:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 776:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 777:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 778:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 779:.\Generated_Source\PSoC5/PWM_1.c ****     *
 780:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 781:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 782:.\Generated_Source\PSoC5/PWM_1.c ****     *
 783:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 784:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: The current capture value
 785:.\Generated_Source\PSoC5/PWM_1.c ****     *
 786:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/  
 787:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCapture(void)  
 788:.\Generated_Source\PSoC5/PWM_1.c ****     {
 617              		.loc 1 788 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 1, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 622 0000 80B4     		push	{r7}
 623              	.LCFI37:
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 00AF     		add	r7, sp, #0
 627              	.LCFI38:
 628              		.cfi_def_cfa_register 7
 789:.\Generated_Source\PSoC5/PWM_1.c ****     	return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 629              		.loc 1 789 0
 630 0004 46F25B53 		movw	r3, #25947
 631 0008 C4F20003 		movt	r3, 16384
 632 000c 1B78     		ldrb	r3, [r3, #0]
 633 000e DBB2     		uxtb	r3, r3
 790:.\Generated_Source\PSoC5/PWM_1.c ****     }
 634              		.loc 1 790 0
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 26


 635 0010 1846     		mov	r0, r3
 636 0012 BD46     		mov	sp, r7
 637 0014 80BC     		pop	{r7}
 638 0016 7047     		bx	lr
 639              		.cfi_endproc
 640              	.LFE14:
 641              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 642              		.section	.text.PWM_1_ReadCompare1,"ax",%progbits
 643              		.align	2
 644              		.global	PWM_1_ReadCompare1
 645              		.thumb
 646              		.thumb_func
 647              		.type	PWM_1_ReadCompare1, %function
 648              	PWM_1_ReadCompare1:
 649              	.LFB15:
 791:.\Generated_Source\PSoC5/PWM_1.c **** 	
 792:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 793:.\Generated_Source\PSoC5/PWM_1.c **** 
 794:.\Generated_Source\PSoC5/PWM_1.c **** 
 795:.\Generated_Source\PSoC5/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 796:.\Generated_Source\PSoC5/PWM_1.c **** 
 797:.\Generated_Source\PSoC5/PWM_1.c **** 
 798:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 799:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 800:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 801:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 802:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 803:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is 
 804:.\Generated_Source\PSoC5/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 805:.\Generated_Source\PSoC5/PWM_1.c ****     *
 806:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 807:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 808:.\Generated_Source\PSoC5/PWM_1.c ****     *
 809:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 810:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value
 811:.\Generated_Source\PSoC5/PWM_1.c ****     *
 812:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/  
 813:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare(void)  
 814:.\Generated_Source\PSoC5/PWM_1.c ****     {
 815:.\Generated_Source\PSoC5/PWM_1.c **** 		#if(PWM_1_UsingFixedFunction)
 816:.\Generated_Source\PSoC5/PWM_1.c ****             return ((uint8)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 817:.\Generated_Source\PSoC5/PWM_1.c ****         #else
 818:.\Generated_Source\PSoC5/PWM_1.c ****             return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 819:.\Generated_Source\PSoC5/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 820:.\Generated_Source\PSoC5/PWM_1.c ****     }
 821:.\Generated_Source\PSoC5/PWM_1.c **** 
 822:.\Generated_Source\PSoC5/PWM_1.c **** #else
 823:.\Generated_Source\PSoC5/PWM_1.c **** 
 824:.\Generated_Source\PSoC5/PWM_1.c **** 
 825:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 826:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 827:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 828:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 829:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 830:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 831:.\Generated_Source\PSoC5/PWM_1.c ****     *
 832:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 27


 833:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 834:.\Generated_Source\PSoC5/PWM_1.c ****     *
 835:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 836:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
 837:.\Generated_Source\PSoC5/PWM_1.c ****     *
 838:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/  
 839:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare1(void) 
 840:.\Generated_Source\PSoC5/PWM_1.c ****     {
 650              		.loc 1 840 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 1, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 655 0000 80B4     		push	{r7}
 656              	.LCFI39:
 657              		.cfi_def_cfa_offset 4
 658              		.cfi_offset 7, -4
 659 0002 00AF     		add	r7, sp, #0
 660              	.LCFI40:
 661              		.cfi_def_cfa_register 7
 841:.\Generated_Source\PSoC5/PWM_1.c **** 		return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 662              		.loc 1 841 0
 663 0004 46F22B53 		movw	r3, #25899
 664 0008 C4F20003 		movt	r3, 16384
 665 000c 1B78     		ldrb	r3, [r3, #0]
 666 000e DBB2     		uxtb	r3, r3
 842:.\Generated_Source\PSoC5/PWM_1.c ****     }
 667              		.loc 1 842 0
 668 0010 1846     		mov	r0, r3
 669 0012 BD46     		mov	sp, r7
 670 0014 80BC     		pop	{r7}
 671 0016 7047     		bx	lr
 672              		.cfi_endproc
 673              	.LFE15:
 674              		.size	PWM_1_ReadCompare1, .-PWM_1_ReadCompare1
 675              		.section	.text.PWM_1_ReadCompare2,"ax",%progbits
 676              		.align	2
 677              		.global	PWM_1_ReadCompare2
 678              		.thumb
 679              		.thumb_func
 680              		.type	PWM_1_ReadCompare2, %function
 681              	PWM_1_ReadCompare2:
 682              	.LFB16:
 843:.\Generated_Source\PSoC5/PWM_1.c **** 
 844:.\Generated_Source\PSoC5/PWM_1.c **** 
 845:.\Generated_Source\PSoC5/PWM_1.c ****     /*******************************************************************************
 846:.\Generated_Source\PSoC5/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 847:.\Generated_Source\PSoC5/PWM_1.c ****     ********************************************************************************
 848:.\Generated_Source\PSoC5/PWM_1.c ****     * 
 849:.\Generated_Source\PSoC5/PWM_1.c ****     * Summary:
 850:.\Generated_Source\PSoC5/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 851:.\Generated_Source\PSoC5/PWM_1.c ****     *
 852:.\Generated_Source\PSoC5/PWM_1.c ****     * Parameters:  
 853:.\Generated_Source\PSoC5/PWM_1.c ****     *  None
 854:.\Generated_Source\PSoC5/PWM_1.c ****     *
 855:.\Generated_Source\PSoC5/PWM_1.c ****     * Return: 
 856:.\Generated_Source\PSoC5/PWM_1.c ****     *  uint8/uint16: Current compare value.
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 28


 857:.\Generated_Source\PSoC5/PWM_1.c ****     *
 858:.\Generated_Source\PSoC5/PWM_1.c ****     *******************************************************************************/  
 859:.\Generated_Source\PSoC5/PWM_1.c ****     uint8 PWM_1_ReadCompare2(void)  
 860:.\Generated_Source\PSoC5/PWM_1.c ****     {
 683              		.loc 1 860 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 1, uses_anonymous_args = 0
 687              		@ link register save eliminated.
 688 0000 80B4     		push	{r7}
 689              	.LCFI41:
 690              		.cfi_def_cfa_offset 4
 691              		.cfi_offset 7, -4
 692 0002 00AF     		add	r7, sp, #0
 693              	.LCFI42:
 694              		.cfi_def_cfa_register 7
 861:.\Generated_Source\PSoC5/PWM_1.c **** 		return (CY_GET_REG8(PWM_1_COMPARE2_LSB_PTR));
 695              		.loc 1 861 0
 696 0004 46F23B53 		movw	r3, #25915
 697 0008 C4F20003 		movt	r3, 16384
 698 000c 1B78     		ldrb	r3, [r3, #0]
 699 000e DBB2     		uxtb	r3, r3
 862:.\Generated_Source\PSoC5/PWM_1.c ****     }
 700              		.loc 1 862 0
 701 0010 1846     		mov	r0, r3
 702 0012 BD46     		mov	sp, r7
 703 0014 80BC     		pop	{r7}
 704 0016 7047     		bx	lr
 705              		.cfi_endproc
 706              	.LFE16:
 707              		.size	PWM_1_ReadCompare2, .-PWM_1_ReadCompare2
 708              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 709              		.align	2
 710              		.global	PWM_1_ReadPeriod
 711              		.thumb
 712              		.thumb_func
 713              		.type	PWM_1_ReadPeriod, %function
 714              	PWM_1_ReadPeriod:
 715              	.LFB17:
 863:.\Generated_Source\PSoC5/PWM_1.c **** 
 864:.\Generated_Source\PSoC5/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 865:.\Generated_Source\PSoC5/PWM_1.c **** 
 866:.\Generated_Source\PSoC5/PWM_1.c **** 
 867:.\Generated_Source\PSoC5/PWM_1.c **** /*******************************************************************************
 868:.\Generated_Source\PSoC5/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 869:.\Generated_Source\PSoC5/PWM_1.c **** ********************************************************************************
 870:.\Generated_Source\PSoC5/PWM_1.c **** * 
 871:.\Generated_Source\PSoC5/PWM_1.c **** * Summary:
 872:.\Generated_Source\PSoC5/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 873:.\Generated_Source\PSoC5/PWM_1.c **** *
 874:.\Generated_Source\PSoC5/PWM_1.c **** * Parameters:  
 875:.\Generated_Source\PSoC5/PWM_1.c **** *  None
 876:.\Generated_Source\PSoC5/PWM_1.c **** *
 877:.\Generated_Source\PSoC5/PWM_1.c **** * Return: 
 878:.\Generated_Source\PSoC5/PWM_1.c **** *  uint8/16: Period value
 879:.\Generated_Source\PSoC5/PWM_1.c **** *
 880:.\Generated_Source\PSoC5/PWM_1.c **** *******************************************************************************/ 
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 29


 881:.\Generated_Source\PSoC5/PWM_1.c **** uint8 PWM_1_ReadPeriod(void) 
 882:.\Generated_Source\PSoC5/PWM_1.c **** {
 716              		.loc 1 882 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              	.LCFI43:
 723              		.cfi_def_cfa_offset 4
 724              		.cfi_offset 7, -4
 725 0002 00AF     		add	r7, sp, #0
 726              	.LCFI44:
 727              		.cfi_def_cfa_register 7
 883:.\Generated_Source\PSoC5/PWM_1.c **** 	#if(PWM_1_UsingFixedFunction)
 884:.\Generated_Source\PSoC5/PWM_1.c ****         return ((uint8)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 885:.\Generated_Source\PSoC5/PWM_1.c ****     #else
 886:.\Generated_Source\PSoC5/PWM_1.c ****         return (CY_GET_REG8(PWM_1_PERIOD_LSB_PTR));
 728              		.loc 1 886 0
 729 0004 46F24B53 		movw	r3, #25931
 730 0008 C4F20003 		movt	r3, 16384
 731 000c 1B78     		ldrb	r3, [r3, #0]
 732 000e DBB2     		uxtb	r3, r3
 887:.\Generated_Source\PSoC5/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 888:.\Generated_Source\PSoC5/PWM_1.c **** }
 733              		.loc 1 888 0
 734 0010 1846     		mov	r0, r3
 735 0012 BD46     		mov	sp, r7
 736 0014 80BC     		pop	{r7}
 737 0016 7047     		bx	lr
 738              		.cfi_endproc
 739              	.LFE17:
 740              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 741              		.text
 742              	.Letext0:
 743              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 744              		.section	.debug_info,"",%progbits
 745              	.Ldebug_info0:
 746 0000 2C030000 		.4byte	0x32c
 747 0004 0200     		.2byte	0x2
 748 0006 00000000 		.4byte	.Ldebug_abbrev0
 749 000a 04       		.byte	0x4
 750 000b 01       		.uleb128 0x1
 751 000c 90020000 		.4byte	.LASF41
 752 0010 01       		.byte	0x1
 753 0011 70000000 		.4byte	.LASF42
 754 0015 B4010000 		.4byte	.LASF43
 755 0019 00000000 		.4byte	.Ldebug_ranges0+0
 756 001d 00000000 		.4byte	0
 757 0021 00000000 		.4byte	0
 758 0025 00000000 		.4byte	.Ldebug_line0
 759 0029 02       		.uleb128 0x2
 760 002a 01       		.byte	0x1
 761 002b 06       		.byte	0x6
 762 002c F2020000 		.4byte	.LASF0
 763 0030 02       		.uleb128 0x2
 764 0031 01       		.byte	0x1
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 30


 765 0032 08       		.byte	0x8
 766 0033 C7000000 		.4byte	.LASF1
 767 0037 02       		.uleb128 0x2
 768 0038 02       		.byte	0x2
 769 0039 05       		.byte	0x5
 770 003a 65010000 		.4byte	.LASF2
 771 003e 02       		.uleb128 0x2
 772 003f 02       		.byte	0x2
 773 0040 07       		.byte	0x7
 774 0041 5D000000 		.4byte	.LASF3
 775 0045 02       		.uleb128 0x2
 776 0046 04       		.byte	0x4
 777 0047 05       		.byte	0x5
 778 0048 E4020000 		.4byte	.LASF4
 779 004c 02       		.uleb128 0x2
 780 004d 04       		.byte	0x4
 781 004e 07       		.byte	0x7
 782 004f EB000000 		.4byte	.LASF5
 783 0053 02       		.uleb128 0x2
 784 0054 08       		.byte	0x8
 785 0055 05       		.byte	0x5
 786 0056 36020000 		.4byte	.LASF6
 787 005a 02       		.uleb128 0x2
 788 005b 08       		.byte	0x8
 789 005c 07       		.byte	0x7
 790 005d 0A020000 		.4byte	.LASF7
 791 0061 03       		.uleb128 0x3
 792 0062 04       		.byte	0x4
 793 0063 05       		.byte	0x5
 794 0064 696E7400 		.ascii	"int\000"
 795 0068 02       		.uleb128 0x2
 796 0069 04       		.byte	0x4
 797 006a 07       		.byte	0x7
 798 006b A7010000 		.4byte	.LASF8
 799 006f 04       		.uleb128 0x4
 800 0070 FD000000 		.4byte	.LASF12
 801 0074 02       		.byte	0x2
 802 0075 5B       		.byte	0x5b
 803 0076 30000000 		.4byte	0x30
 804 007a 02       		.uleb128 0x2
 805 007b 04       		.byte	0x4
 806 007c 04       		.byte	0x4
 807 007d B9000000 		.4byte	.LASF9
 808 0081 02       		.uleb128 0x2
 809 0082 08       		.byte	0x8
 810 0083 04       		.byte	0x4
 811 0084 3B010000 		.4byte	.LASF10
 812 0088 02       		.uleb128 0x2
 813 0089 01       		.byte	0x1
 814 008a 08       		.byte	0x8
 815 008b ED020000 		.4byte	.LASF11
 816 008f 04       		.uleb128 0x4
 817 0090 D5000000 		.4byte	.LASF13
 818 0094 02       		.byte	0x2
 819 0095 F0       		.byte	0xf0
 820 0096 9A000000 		.4byte	0x9a
 821 009a 05       		.uleb128 0x5
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 31


 822 009b 6F000000 		.4byte	0x6f
 823 009f 02       		.uleb128 0x2
 824 00a0 04       		.byte	0x4
 825 00a1 07       		.byte	0x7
 826 00a2 2D020000 		.4byte	.LASF14
 827 00a6 06       		.uleb128 0x6
 828 00a7 01       		.byte	0x1
 829 00a8 06030000 		.4byte	.LASF17
 830 00ac 01       		.byte	0x1
 831 00ad 32       		.byte	0x32
 832 00ae 01       		.byte	0x1
 833 00af 00000000 		.4byte	.LFB0
 834 00b3 2A000000 		.4byte	.LFE0
 835 00b7 00000000 		.4byte	.LLST0
 836 00bb 01       		.byte	0x1
 837 00bc 07       		.uleb128 0x7
 838 00bd 01       		.byte	0x1
 839 00be 9C010000 		.4byte	.LASF20
 840 00c2 01       		.byte	0x1
 841 00c3 4F       		.byte	0x4f
 842 00c4 01       		.byte	0x1
 843 00c5 00000000 		.4byte	.LFB1
 844 00c9 A6000000 		.4byte	.LFE1
 845 00cd 2C000000 		.4byte	.LLST1
 846 00d1 01       		.byte	0x1
 847 00d2 F3000000 		.4byte	0xf3
 848 00d6 08       		.uleb128 0x8
 849 00d7 28020000 		.4byte	.LASF15
 850 00db 01       		.byte	0x1
 851 00dc 52       		.byte	0x52
 852 00dd 6F000000 		.4byte	0x6f
 853 00e1 02       		.byte	0x2
 854 00e2 91       		.byte	0x91
 855 00e3 77       		.sleb128 -9
 856 00e4 08       		.uleb128 0x8
 857 00e5 42010000 		.4byte	.LASF16
 858 00e9 01       		.byte	0x1
 859 00ea 58       		.byte	0x58
 860 00eb 6F000000 		.4byte	0x6f
 861 00ef 02       		.byte	0x2
 862 00f0 91       		.byte	0x91
 863 00f1 76       		.sleb128 -10
 864 00f2 00       		.byte	0
 865 00f3 09       		.uleb128 0x9
 866 00f4 01       		.byte	0x1
 867 00f5 00000000 		.4byte	.LASF18
 868 00f9 01       		.byte	0x1
 869 00fa C1       		.byte	0xc1
 870 00fb 01       		.byte	0x1
 871 00fc 00000000 		.4byte	.LFB2
 872 0100 26000000 		.4byte	.LFE2
 873 0104 64000000 		.4byte	.LLST2
 874 0108 01       		.byte	0x1
 875 0109 09       		.uleb128 0x9
 876 010a 01       		.byte	0x1
 877 010b D9020000 		.4byte	.LASF19
 878 010f 01       		.byte	0x1
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 32


 879 0110 E3       		.byte	0xe3
 880 0111 01       		.byte	0x1
 881 0112 00000000 		.4byte	.LFB3
 882 0116 26000000 		.4byte	.LFE3
 883 011a 90000000 		.4byte	.LLST3
 884 011e 01       		.byte	0x1
 885 011f 0A       		.uleb128 0xa
 886 0120 01       		.byte	0x1
 887 0121 0D000000 		.4byte	.LASF21
 888 0125 01       		.byte	0x1
 889 0126 8D01     		.2byte	0x18d
 890 0128 01       		.byte	0x1
 891 0129 00000000 		.4byte	.LFB4
 892 012d 20000000 		.4byte	.LFE4
 893 0131 BC000000 		.4byte	.LLST4
 894 0135 01       		.byte	0x1
 895 0136 4A010000 		.4byte	0x14a
 896 013a 0B       		.uleb128 0xb
 897 013b BF000000 		.4byte	.LASF24
 898 013f 01       		.byte	0x1
 899 0140 8D01     		.2byte	0x18d
 900 0142 6F000000 		.4byte	0x6f
 901 0146 02       		.byte	0x2
 902 0147 91       		.byte	0x91
 903 0148 77       		.sleb128 -9
 904 0149 00       		.byte	0
 905 014a 0C       		.uleb128 0xc
 906 014b 01       		.byte	0x1
 907 014c 7E020000 		.4byte	.LASF36
 908 0150 01       		.byte	0x1
 909 0151 A301     		.2byte	0x1a3
 910 0153 01       		.byte	0x1
 911 0154 6F000000 		.4byte	0x6f
 912 0158 00000000 		.4byte	.LFB5
 913 015c 22000000 		.4byte	.LFE5
 914 0160 F4000000 		.4byte	.LLST5
 915 0164 01       		.byte	0x1
 916 0165 0D       		.uleb128 0xd
 917 0166 01       		.byte	0x1
 918 0167 20000000 		.4byte	.LASF22
 919 016b 01       		.byte	0x1
 920 016c BF01     		.2byte	0x1bf
 921 016e 01       		.byte	0x1
 922 016f 00000000 		.4byte	.LFB6
 923 0173 1A000000 		.4byte	.LFE6
 924 0177 20010000 		.4byte	.LLST6
 925 017b 01       		.byte	0x1
 926 017c 0A       		.uleb128 0xa
 927 017d 01       		.byte	0x1
 928 017e 6C020000 		.4byte	.LASF23
 929 0182 01       		.byte	0x1
 930 0183 DC01     		.2byte	0x1dc
 931 0185 01       		.byte	0x1
 932 0186 00000000 		.4byte	.LFB7
 933 018a 20000000 		.4byte	.LFE7
 934 018e 4C010000 		.4byte	.LLST7
 935 0192 01       		.byte	0x1
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 33


 936 0193 A7010000 		.4byte	0x1a7
 937 0197 0B       		.uleb128 0xb
 938 0198 30000000 		.4byte	.LASF25
 939 019c 01       		.byte	0x1
 940 019d DC01     		.2byte	0x1dc
 941 019f 6F000000 		.4byte	0x6f
 942 01a3 02       		.byte	0x2
 943 01a4 91       		.byte	0x91
 944 01a5 77       		.sleb128 -9
 945 01a6 00       		.byte	0
 946 01a7 0A       		.uleb128 0xa
 947 01a8 01       		.byte	0x1
 948 01a9 91000000 		.4byte	.LASF26
 949 01ad 01       		.byte	0x1
 950 01ae 2502     		.2byte	0x225
 951 01b0 01       		.byte	0x1
 952 01b1 00000000 		.4byte	.LFB8
 953 01b5 20000000 		.4byte	.LFE8
 954 01b9 84010000 		.4byte	.LLST8
 955 01bd 01       		.byte	0x1
 956 01be D2010000 		.4byte	0x1d2
 957 01c2 0B       		.uleb128 0xb
 958 01c3 FE020000 		.4byte	.LASF27
 959 01c7 01       		.byte	0x1
 960 01c8 2502     		.2byte	0x225
 961 01ca 6F000000 		.4byte	0x6f
 962 01ce 02       		.byte	0x2
 963 01cf 91       		.byte	0x91
 964 01d0 77       		.sleb128 -9
 965 01d1 00       		.byte	0
 966 01d2 0A       		.uleb128 0xa
 967 01d3 01       		.byte	0x1
 968 01d4 A5000000 		.4byte	.LASF28
 969 01d8 01       		.byte	0x1
 970 01d9 4202     		.2byte	0x242
 971 01db 01       		.byte	0x1
 972 01dc 00000000 		.4byte	.LFB9
 973 01e0 20000000 		.4byte	.LFE9
 974 01e4 BC010000 		.4byte	.LLST9
 975 01e8 01       		.byte	0x1
 976 01e9 FD010000 		.4byte	0x1fd
 977 01ed 0B       		.uleb128 0xb
 978 01ee FE020000 		.4byte	.LASF27
 979 01f2 01       		.byte	0x1
 980 01f3 4202     		.2byte	0x242
 981 01f5 6F000000 		.4byte	0x6f
 982 01f9 02       		.byte	0x2
 983 01fa 91       		.byte	0x91
 984 01fb 77       		.sleb128 -9
 985 01fc 00       		.byte	0
 986 01fd 0A       		.uleb128 0xa
 987 01fe 01       		.byte	0x1
 988 01ff 0B010000 		.4byte	.LASF29
 989 0203 01       		.byte	0x1
 990 0204 A602     		.2byte	0x2a6
 991 0206 01       		.byte	0x1
 992 0207 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 34


 993 020b 20000000 		.4byte	.LFE10
 994 020f F4010000 		.4byte	.LLST10
 995 0213 01       		.byte	0x1
 996 0214 28020000 		.4byte	0x228
 997 0218 0B       		.uleb128 0xb
 998 0219 5E020000 		.4byte	.LASF30
 999 021d 01       		.byte	0x1
 1000 021e A602     		.2byte	0x2a6
 1001 0220 6F000000 		.4byte	0x6f
 1002 0224 02       		.byte	0x2
 1003 0225 91       		.byte	0x91
 1004 0226 77       		.sleb128 -9
 1005 0227 00       		.byte	0
 1006 0228 0E       		.uleb128 0xe
 1007 0229 01       		.byte	0x1
 1008 022a 22010000 		.4byte	.LASF32
 1009 022e 01       		.byte	0x1
 1010 022f C102     		.2byte	0x2c1
 1011 0231 01       		.byte	0x1
 1012 0232 6F000000 		.4byte	0x6f
 1013 0236 00000000 		.4byte	.LFB11
 1014 023a 20000000 		.4byte	.LFE11
 1015 023e 2C020000 		.4byte	.LLST11
 1016 0242 01       		.byte	0x1
 1017 0243 57020000 		.4byte	0x257
 1018 0247 0F       		.uleb128 0xf
 1019 0248 21020000 		.4byte	.LASF31
 1020 024c 01       		.byte	0x1
 1021 024d C302     		.2byte	0x2c3
 1022 024f 6F000000 		.4byte	0x6f
 1023 0253 02       		.byte	0x2
 1024 0254 91       		.byte	0x91
 1025 0255 77       		.sleb128 -9
 1026 0256 00       		.byte	0
 1027 0257 0E       		.uleb128 0xe
 1028 0258 01       		.byte	0x1
 1029 0259 44020000 		.4byte	.LASF33
 1030 025d 01       		.byte	0x1
 1031 025e DE02     		.2byte	0x2de
 1032 0260 01       		.byte	0x1
 1033 0261 6F000000 		.4byte	0x6f
 1034 0265 00000000 		.4byte	.LFB12
 1035 0269 20000000 		.4byte	.LFE12
 1036 026d 64020000 		.4byte	.LLST12
 1037 0271 01       		.byte	0x1
 1038 0272 86020000 		.4byte	0x286
 1039 0276 0F       		.uleb128 0xf
 1040 0277 21020000 		.4byte	.LASF31
 1041 027b 01       		.byte	0x1
 1042 027c E002     		.2byte	0x2e0
 1043 027e 6F000000 		.4byte	0x6f
 1044 0282 02       		.byte	0x2
 1045 0283 91       		.byte	0x91
 1046 0284 77       		.sleb128 -9
 1047 0285 00       		.byte	0
 1048 0286 0A       		.uleb128 0xa
 1049 0287 01       		.byte	0x1
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 35


 1050 0288 81010000 		.4byte	.LASF34
 1051 028c 01       		.byte	0x1
 1052 028d FA02     		.2byte	0x2fa
 1053 028f 01       		.byte	0x1
 1054 0290 00000000 		.4byte	.LFB13
 1055 0294 20000000 		.4byte	.LFE13
 1056 0298 9C020000 		.4byte	.LLST13
 1057 029c 01       		.byte	0x1
 1058 029d B1020000 		.4byte	0x2b1
 1059 02a1 0B       		.uleb128 0xb
 1060 02a2 03010000 		.4byte	.LASF35
 1061 02a6 01       		.byte	0x1
 1062 02a7 FA02     		.2byte	0x2fa
 1063 02a9 6F000000 		.4byte	0x6f
 1064 02ad 02       		.byte	0x2
 1065 02ae 91       		.byte	0x91
 1066 02af 77       		.sleb128 -9
 1067 02b0 00       		.byte	0
 1068 02b1 0C       		.uleb128 0xc
 1069 02b2 01       		.byte	0x1
 1070 02b3 6F010000 		.4byte	.LASF37
 1071 02b7 01       		.byte	0x1
 1072 02b8 1303     		.2byte	0x313
 1073 02ba 01       		.byte	0x1
 1074 02bb 6F000000 		.4byte	0x6f
 1075 02bf 00000000 		.4byte	.LFB14
 1076 02c3 18000000 		.4byte	.LFE14
 1077 02c7 D4020000 		.4byte	.LLST14
 1078 02cb 01       		.byte	0x1
 1079 02cc 0C       		.uleb128 0xc
 1080 02cd 01       		.byte	0x1
 1081 02ce 37000000 		.4byte	.LASF38
 1082 02d2 01       		.byte	0x1
 1083 02d3 4703     		.2byte	0x347
 1084 02d5 01       		.byte	0x1
 1085 02d6 6F000000 		.4byte	0x6f
 1086 02da 00000000 		.4byte	.LFB15
 1087 02de 18000000 		.4byte	.LFE15
 1088 02e2 00030000 		.4byte	.LLST15
 1089 02e6 01       		.byte	0x1
 1090 02e7 0C       		.uleb128 0xc
 1091 02e8 01       		.byte	0x1
 1092 02e9 4A000000 		.4byte	.LASF39
 1093 02ed 01       		.byte	0x1
 1094 02ee 5B03     		.2byte	0x35b
 1095 02f0 01       		.byte	0x1
 1096 02f1 6F000000 		.4byte	0x6f
 1097 02f5 00000000 		.4byte	.LFB16
 1098 02f9 18000000 		.4byte	.LFE16
 1099 02fd 2C030000 		.4byte	.LLST16
 1100 0301 01       		.byte	0x1
 1101 0302 0C       		.uleb128 0xc
 1102 0303 01       		.byte	0x1
 1103 0304 DA000000 		.4byte	.LASF40
 1104 0308 01       		.byte	0x1
 1105 0309 7103     		.2byte	0x371
 1106 030b 01       		.byte	0x1
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 36


 1107 030c 6F000000 		.4byte	0x6f
 1108 0310 00000000 		.4byte	.LFB17
 1109 0314 18000000 		.4byte	.LFE17
 1110 0318 58030000 		.4byte	.LLST17
 1111 031c 01       		.byte	0x1
 1112 031d 10       		.uleb128 0x10
 1113 031e 57010000 		.4byte	.LASF44
 1114 0322 01       		.byte	0x1
 1115 0323 1B       		.byte	0x1b
 1116 0324 6F000000 		.4byte	0x6f
 1117 0328 01       		.byte	0x1
 1118 0329 05       		.byte	0x5
 1119 032a 03       		.byte	0x3
 1120 032b 00000000 		.4byte	PWM_1_initVar
 1121 032f 00       		.byte	0
 1122              		.section	.debug_abbrev,"",%progbits
 1123              	.Ldebug_abbrev0:
 1124 0000 01       		.uleb128 0x1
 1125 0001 11       		.uleb128 0x11
 1126 0002 01       		.byte	0x1
 1127 0003 25       		.uleb128 0x25
 1128 0004 0E       		.uleb128 0xe
 1129 0005 13       		.uleb128 0x13
 1130 0006 0B       		.uleb128 0xb
 1131 0007 03       		.uleb128 0x3
 1132 0008 0E       		.uleb128 0xe
 1133 0009 1B       		.uleb128 0x1b
 1134 000a 0E       		.uleb128 0xe
 1135 000b 55       		.uleb128 0x55
 1136 000c 06       		.uleb128 0x6
 1137 000d 11       		.uleb128 0x11
 1138 000e 01       		.uleb128 0x1
 1139 000f 52       		.uleb128 0x52
 1140 0010 01       		.uleb128 0x1
 1141 0011 10       		.uleb128 0x10
 1142 0012 06       		.uleb128 0x6
 1143 0013 00       		.byte	0
 1144 0014 00       		.byte	0
 1145 0015 02       		.uleb128 0x2
 1146 0016 24       		.uleb128 0x24
 1147 0017 00       		.byte	0
 1148 0018 0B       		.uleb128 0xb
 1149 0019 0B       		.uleb128 0xb
 1150 001a 3E       		.uleb128 0x3e
 1151 001b 0B       		.uleb128 0xb
 1152 001c 03       		.uleb128 0x3
 1153 001d 0E       		.uleb128 0xe
 1154 001e 00       		.byte	0
 1155 001f 00       		.byte	0
 1156 0020 03       		.uleb128 0x3
 1157 0021 24       		.uleb128 0x24
 1158 0022 00       		.byte	0
 1159 0023 0B       		.uleb128 0xb
 1160 0024 0B       		.uleb128 0xb
 1161 0025 3E       		.uleb128 0x3e
 1162 0026 0B       		.uleb128 0xb
 1163 0027 03       		.uleb128 0x3
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 37


 1164 0028 08       		.uleb128 0x8
 1165 0029 00       		.byte	0
 1166 002a 00       		.byte	0
 1167 002b 04       		.uleb128 0x4
 1168 002c 16       		.uleb128 0x16
 1169 002d 00       		.byte	0
 1170 002e 03       		.uleb128 0x3
 1171 002f 0E       		.uleb128 0xe
 1172 0030 3A       		.uleb128 0x3a
 1173 0031 0B       		.uleb128 0xb
 1174 0032 3B       		.uleb128 0x3b
 1175 0033 0B       		.uleb128 0xb
 1176 0034 49       		.uleb128 0x49
 1177 0035 13       		.uleb128 0x13
 1178 0036 00       		.byte	0
 1179 0037 00       		.byte	0
 1180 0038 05       		.uleb128 0x5
 1181 0039 35       		.uleb128 0x35
 1182 003a 00       		.byte	0
 1183 003b 49       		.uleb128 0x49
 1184 003c 13       		.uleb128 0x13
 1185 003d 00       		.byte	0
 1186 003e 00       		.byte	0
 1187 003f 06       		.uleb128 0x6
 1188 0040 2E       		.uleb128 0x2e
 1189 0041 00       		.byte	0
 1190 0042 3F       		.uleb128 0x3f
 1191 0043 0C       		.uleb128 0xc
 1192 0044 03       		.uleb128 0x3
 1193 0045 0E       		.uleb128 0xe
 1194 0046 3A       		.uleb128 0x3a
 1195 0047 0B       		.uleb128 0xb
 1196 0048 3B       		.uleb128 0x3b
 1197 0049 0B       		.uleb128 0xb
 1198 004a 27       		.uleb128 0x27
 1199 004b 0C       		.uleb128 0xc
 1200 004c 11       		.uleb128 0x11
 1201 004d 01       		.uleb128 0x1
 1202 004e 12       		.uleb128 0x12
 1203 004f 01       		.uleb128 0x1
 1204 0050 40       		.uleb128 0x40
 1205 0051 06       		.uleb128 0x6
 1206 0052 9642     		.uleb128 0x2116
 1207 0054 0C       		.uleb128 0xc
 1208 0055 00       		.byte	0
 1209 0056 00       		.byte	0
 1210 0057 07       		.uleb128 0x7
 1211 0058 2E       		.uleb128 0x2e
 1212 0059 01       		.byte	0x1
 1213 005a 3F       		.uleb128 0x3f
 1214 005b 0C       		.uleb128 0xc
 1215 005c 03       		.uleb128 0x3
 1216 005d 0E       		.uleb128 0xe
 1217 005e 3A       		.uleb128 0x3a
 1218 005f 0B       		.uleb128 0xb
 1219 0060 3B       		.uleb128 0x3b
 1220 0061 0B       		.uleb128 0xb
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 38


 1221 0062 27       		.uleb128 0x27
 1222 0063 0C       		.uleb128 0xc
 1223 0064 11       		.uleb128 0x11
 1224 0065 01       		.uleb128 0x1
 1225 0066 12       		.uleb128 0x12
 1226 0067 01       		.uleb128 0x1
 1227 0068 40       		.uleb128 0x40
 1228 0069 06       		.uleb128 0x6
 1229 006a 9642     		.uleb128 0x2116
 1230 006c 0C       		.uleb128 0xc
 1231 006d 01       		.uleb128 0x1
 1232 006e 13       		.uleb128 0x13
 1233 006f 00       		.byte	0
 1234 0070 00       		.byte	0
 1235 0071 08       		.uleb128 0x8
 1236 0072 34       		.uleb128 0x34
 1237 0073 00       		.byte	0
 1238 0074 03       		.uleb128 0x3
 1239 0075 0E       		.uleb128 0xe
 1240 0076 3A       		.uleb128 0x3a
 1241 0077 0B       		.uleb128 0xb
 1242 0078 3B       		.uleb128 0x3b
 1243 0079 0B       		.uleb128 0xb
 1244 007a 49       		.uleb128 0x49
 1245 007b 13       		.uleb128 0x13
 1246 007c 02       		.uleb128 0x2
 1247 007d 0A       		.uleb128 0xa
 1248 007e 00       		.byte	0
 1249 007f 00       		.byte	0
 1250 0080 09       		.uleb128 0x9
 1251 0081 2E       		.uleb128 0x2e
 1252 0082 00       		.byte	0
 1253 0083 3F       		.uleb128 0x3f
 1254 0084 0C       		.uleb128 0xc
 1255 0085 03       		.uleb128 0x3
 1256 0086 0E       		.uleb128 0xe
 1257 0087 3A       		.uleb128 0x3a
 1258 0088 0B       		.uleb128 0xb
 1259 0089 3B       		.uleb128 0x3b
 1260 008a 0B       		.uleb128 0xb
 1261 008b 27       		.uleb128 0x27
 1262 008c 0C       		.uleb128 0xc
 1263 008d 11       		.uleb128 0x11
 1264 008e 01       		.uleb128 0x1
 1265 008f 12       		.uleb128 0x12
 1266 0090 01       		.uleb128 0x1
 1267 0091 40       		.uleb128 0x40
 1268 0092 06       		.uleb128 0x6
 1269 0093 9742     		.uleb128 0x2117
 1270 0095 0C       		.uleb128 0xc
 1271 0096 00       		.byte	0
 1272 0097 00       		.byte	0
 1273 0098 0A       		.uleb128 0xa
 1274 0099 2E       		.uleb128 0x2e
 1275 009a 01       		.byte	0x1
 1276 009b 3F       		.uleb128 0x3f
 1277 009c 0C       		.uleb128 0xc
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 39


 1278 009d 03       		.uleb128 0x3
 1279 009e 0E       		.uleb128 0xe
 1280 009f 3A       		.uleb128 0x3a
 1281 00a0 0B       		.uleb128 0xb
 1282 00a1 3B       		.uleb128 0x3b
 1283 00a2 05       		.uleb128 0x5
 1284 00a3 27       		.uleb128 0x27
 1285 00a4 0C       		.uleb128 0xc
 1286 00a5 11       		.uleb128 0x11
 1287 00a6 01       		.uleb128 0x1
 1288 00a7 12       		.uleb128 0x12
 1289 00a8 01       		.uleb128 0x1
 1290 00a9 40       		.uleb128 0x40
 1291 00aa 06       		.uleb128 0x6
 1292 00ab 9742     		.uleb128 0x2117
 1293 00ad 0C       		.uleb128 0xc
 1294 00ae 01       		.uleb128 0x1
 1295 00af 13       		.uleb128 0x13
 1296 00b0 00       		.byte	0
 1297 00b1 00       		.byte	0
 1298 00b2 0B       		.uleb128 0xb
 1299 00b3 05       		.uleb128 0x5
 1300 00b4 00       		.byte	0
 1301 00b5 03       		.uleb128 0x3
 1302 00b6 0E       		.uleb128 0xe
 1303 00b7 3A       		.uleb128 0x3a
 1304 00b8 0B       		.uleb128 0xb
 1305 00b9 3B       		.uleb128 0x3b
 1306 00ba 05       		.uleb128 0x5
 1307 00bb 49       		.uleb128 0x49
 1308 00bc 13       		.uleb128 0x13
 1309 00bd 02       		.uleb128 0x2
 1310 00be 0A       		.uleb128 0xa
 1311 00bf 00       		.byte	0
 1312 00c0 00       		.byte	0
 1313 00c1 0C       		.uleb128 0xc
 1314 00c2 2E       		.uleb128 0x2e
 1315 00c3 00       		.byte	0
 1316 00c4 3F       		.uleb128 0x3f
 1317 00c5 0C       		.uleb128 0xc
 1318 00c6 03       		.uleb128 0x3
 1319 00c7 0E       		.uleb128 0xe
 1320 00c8 3A       		.uleb128 0x3a
 1321 00c9 0B       		.uleb128 0xb
 1322 00ca 3B       		.uleb128 0x3b
 1323 00cb 05       		.uleb128 0x5
 1324 00cc 27       		.uleb128 0x27
 1325 00cd 0C       		.uleb128 0xc
 1326 00ce 49       		.uleb128 0x49
 1327 00cf 13       		.uleb128 0x13
 1328 00d0 11       		.uleb128 0x11
 1329 00d1 01       		.uleb128 0x1
 1330 00d2 12       		.uleb128 0x12
 1331 00d3 01       		.uleb128 0x1
 1332 00d4 40       		.uleb128 0x40
 1333 00d5 06       		.uleb128 0x6
 1334 00d6 9742     		.uleb128 0x2117
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 40


 1335 00d8 0C       		.uleb128 0xc
 1336 00d9 00       		.byte	0
 1337 00da 00       		.byte	0
 1338 00db 0D       		.uleb128 0xd
 1339 00dc 2E       		.uleb128 0x2e
 1340 00dd 00       		.byte	0
 1341 00de 3F       		.uleb128 0x3f
 1342 00df 0C       		.uleb128 0xc
 1343 00e0 03       		.uleb128 0x3
 1344 00e1 0E       		.uleb128 0xe
 1345 00e2 3A       		.uleb128 0x3a
 1346 00e3 0B       		.uleb128 0xb
 1347 00e4 3B       		.uleb128 0x3b
 1348 00e5 05       		.uleb128 0x5
 1349 00e6 27       		.uleb128 0x27
 1350 00e7 0C       		.uleb128 0xc
 1351 00e8 11       		.uleb128 0x11
 1352 00e9 01       		.uleb128 0x1
 1353 00ea 12       		.uleb128 0x12
 1354 00eb 01       		.uleb128 0x1
 1355 00ec 40       		.uleb128 0x40
 1356 00ed 06       		.uleb128 0x6
 1357 00ee 9642     		.uleb128 0x2116
 1358 00f0 0C       		.uleb128 0xc
 1359 00f1 00       		.byte	0
 1360 00f2 00       		.byte	0
 1361 00f3 0E       		.uleb128 0xe
 1362 00f4 2E       		.uleb128 0x2e
 1363 00f5 01       		.byte	0x1
 1364 00f6 3F       		.uleb128 0x3f
 1365 00f7 0C       		.uleb128 0xc
 1366 00f8 03       		.uleb128 0x3
 1367 00f9 0E       		.uleb128 0xe
 1368 00fa 3A       		.uleb128 0x3a
 1369 00fb 0B       		.uleb128 0xb
 1370 00fc 3B       		.uleb128 0x3b
 1371 00fd 05       		.uleb128 0x5
 1372 00fe 27       		.uleb128 0x27
 1373 00ff 0C       		.uleb128 0xc
 1374 0100 49       		.uleb128 0x49
 1375 0101 13       		.uleb128 0x13
 1376 0102 11       		.uleb128 0x11
 1377 0103 01       		.uleb128 0x1
 1378 0104 12       		.uleb128 0x12
 1379 0105 01       		.uleb128 0x1
 1380 0106 40       		.uleb128 0x40
 1381 0107 06       		.uleb128 0x6
 1382 0108 9742     		.uleb128 0x2117
 1383 010a 0C       		.uleb128 0xc
 1384 010b 01       		.uleb128 0x1
 1385 010c 13       		.uleb128 0x13
 1386 010d 00       		.byte	0
 1387 010e 00       		.byte	0
 1388 010f 0F       		.uleb128 0xf
 1389 0110 34       		.uleb128 0x34
 1390 0111 00       		.byte	0
 1391 0112 03       		.uleb128 0x3
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 41


 1392 0113 0E       		.uleb128 0xe
 1393 0114 3A       		.uleb128 0x3a
 1394 0115 0B       		.uleb128 0xb
 1395 0116 3B       		.uleb128 0x3b
 1396 0117 05       		.uleb128 0x5
 1397 0118 49       		.uleb128 0x49
 1398 0119 13       		.uleb128 0x13
 1399 011a 02       		.uleb128 0x2
 1400 011b 0A       		.uleb128 0xa
 1401 011c 00       		.byte	0
 1402 011d 00       		.byte	0
 1403 011e 10       		.uleb128 0x10
 1404 011f 34       		.uleb128 0x34
 1405 0120 00       		.byte	0
 1406 0121 03       		.uleb128 0x3
 1407 0122 0E       		.uleb128 0xe
 1408 0123 3A       		.uleb128 0x3a
 1409 0124 0B       		.uleb128 0xb
 1410 0125 3B       		.uleb128 0x3b
 1411 0126 0B       		.uleb128 0xb
 1412 0127 49       		.uleb128 0x49
 1413 0128 13       		.uleb128 0x13
 1414 0129 3F       		.uleb128 0x3f
 1415 012a 0C       		.uleb128 0xc
 1416 012b 02       		.uleb128 0x2
 1417 012c 0A       		.uleb128 0xa
 1418 012d 00       		.byte	0
 1419 012e 00       		.byte	0
 1420 012f 00       		.byte	0
 1421              		.section	.debug_loc,"",%progbits
 1422              	.Ldebug_loc0:
 1423              	.LLST0:
 1424 0000 00000000 		.4byte	.LFB0
 1425 0004 02000000 		.4byte	.LCFI0
 1426 0008 0200     		.2byte	0x2
 1427 000a 7D       		.byte	0x7d
 1428 000b 00       		.sleb128 0
 1429 000c 02000000 		.4byte	.LCFI0
 1430 0010 04000000 		.4byte	.LCFI1
 1431 0014 0200     		.2byte	0x2
 1432 0016 7D       		.byte	0x7d
 1433 0017 08       		.sleb128 8
 1434 0018 04000000 		.4byte	.LCFI1
 1435 001c 2A000000 		.4byte	.LFE0
 1436 0020 0200     		.2byte	0x2
 1437 0022 77       		.byte	0x77
 1438 0023 08       		.sleb128 8
 1439 0024 00000000 		.4byte	0
 1440 0028 00000000 		.4byte	0
 1441              	.LLST1:
 1442 002c 00000000 		.4byte	.LFB1
 1443 0030 02000000 		.4byte	.LCFI2
 1444 0034 0200     		.2byte	0x2
 1445 0036 7D       		.byte	0x7d
 1446 0037 00       		.sleb128 0
 1447 0038 02000000 		.4byte	.LCFI2
 1448 003c 04000000 		.4byte	.LCFI3
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 42


 1449 0040 0200     		.2byte	0x2
 1450 0042 7D       		.byte	0x7d
 1451 0043 08       		.sleb128 8
 1452 0044 04000000 		.4byte	.LCFI3
 1453 0048 06000000 		.4byte	.LCFI4
 1454 004c 0200     		.2byte	0x2
 1455 004e 7D       		.byte	0x7d
 1456 004f 10       		.sleb128 16
 1457 0050 06000000 		.4byte	.LCFI4
 1458 0054 A6000000 		.4byte	.LFE1
 1459 0058 0200     		.2byte	0x2
 1460 005a 77       		.byte	0x77
 1461 005b 10       		.sleb128 16
 1462 005c 00000000 		.4byte	0
 1463 0060 00000000 		.4byte	0
 1464              	.LLST2:
 1465 0064 00000000 		.4byte	.LFB2
 1466 0068 02000000 		.4byte	.LCFI5
 1467 006c 0200     		.2byte	0x2
 1468 006e 7D       		.byte	0x7d
 1469 006f 00       		.sleb128 0
 1470 0070 02000000 		.4byte	.LCFI5
 1471 0074 04000000 		.4byte	.LCFI6
 1472 0078 0200     		.2byte	0x2
 1473 007a 7D       		.byte	0x7d
 1474 007b 04       		.sleb128 4
 1475 007c 04000000 		.4byte	.LCFI6
 1476 0080 26000000 		.4byte	.LFE2
 1477 0084 0200     		.2byte	0x2
 1478 0086 77       		.byte	0x77
 1479 0087 04       		.sleb128 4
 1480 0088 00000000 		.4byte	0
 1481 008c 00000000 		.4byte	0
 1482              	.LLST3:
 1483 0090 00000000 		.4byte	.LFB3
 1484 0094 02000000 		.4byte	.LCFI7
 1485 0098 0200     		.2byte	0x2
 1486 009a 7D       		.byte	0x7d
 1487 009b 00       		.sleb128 0
 1488 009c 02000000 		.4byte	.LCFI7
 1489 00a0 04000000 		.4byte	.LCFI8
 1490 00a4 0200     		.2byte	0x2
 1491 00a6 7D       		.byte	0x7d
 1492 00a7 04       		.sleb128 4
 1493 00a8 04000000 		.4byte	.LCFI8
 1494 00ac 26000000 		.4byte	.LFE3
 1495 00b0 0200     		.2byte	0x2
 1496 00b2 77       		.byte	0x77
 1497 00b3 04       		.sleb128 4
 1498 00b4 00000000 		.4byte	0
 1499 00b8 00000000 		.4byte	0
 1500              	.LLST4:
 1501 00bc 00000000 		.4byte	.LFB4
 1502 00c0 02000000 		.4byte	.LCFI9
 1503 00c4 0200     		.2byte	0x2
 1504 00c6 7D       		.byte	0x7d
 1505 00c7 00       		.sleb128 0
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 43


 1506 00c8 02000000 		.4byte	.LCFI9
 1507 00cc 04000000 		.4byte	.LCFI10
 1508 00d0 0200     		.2byte	0x2
 1509 00d2 7D       		.byte	0x7d
 1510 00d3 04       		.sleb128 4
 1511 00d4 04000000 		.4byte	.LCFI10
 1512 00d8 06000000 		.4byte	.LCFI11
 1513 00dc 0200     		.2byte	0x2
 1514 00de 7D       		.byte	0x7d
 1515 00df 10       		.sleb128 16
 1516 00e0 06000000 		.4byte	.LCFI11
 1517 00e4 20000000 		.4byte	.LFE4
 1518 00e8 0200     		.2byte	0x2
 1519 00ea 77       		.byte	0x77
 1520 00eb 10       		.sleb128 16
 1521 00ec 00000000 		.4byte	0
 1522 00f0 00000000 		.4byte	0
 1523              	.LLST5:
 1524 00f4 00000000 		.4byte	.LFB5
 1525 00f8 02000000 		.4byte	.LCFI12
 1526 00fc 0200     		.2byte	0x2
 1527 00fe 7D       		.byte	0x7d
 1528 00ff 00       		.sleb128 0
 1529 0100 02000000 		.4byte	.LCFI12
 1530 0104 04000000 		.4byte	.LCFI13
 1531 0108 0200     		.2byte	0x2
 1532 010a 7D       		.byte	0x7d
 1533 010b 04       		.sleb128 4
 1534 010c 04000000 		.4byte	.LCFI13
 1535 0110 22000000 		.4byte	.LFE5
 1536 0114 0200     		.2byte	0x2
 1537 0116 77       		.byte	0x77
 1538 0117 04       		.sleb128 4
 1539 0118 00000000 		.4byte	0
 1540 011c 00000000 		.4byte	0
 1541              	.LLST6:
 1542 0120 00000000 		.4byte	.LFB6
 1543 0124 02000000 		.4byte	.LCFI14
 1544 0128 0200     		.2byte	0x2
 1545 012a 7D       		.byte	0x7d
 1546 012b 00       		.sleb128 0
 1547 012c 02000000 		.4byte	.LCFI14
 1548 0130 04000000 		.4byte	.LCFI15
 1549 0134 0200     		.2byte	0x2
 1550 0136 7D       		.byte	0x7d
 1551 0137 08       		.sleb128 8
 1552 0138 04000000 		.4byte	.LCFI15
 1553 013c 1A000000 		.4byte	.LFE6
 1554 0140 0200     		.2byte	0x2
 1555 0142 77       		.byte	0x77
 1556 0143 08       		.sleb128 8
 1557 0144 00000000 		.4byte	0
 1558 0148 00000000 		.4byte	0
 1559              	.LLST7:
 1560 014c 00000000 		.4byte	.LFB7
 1561 0150 02000000 		.4byte	.LCFI16
 1562 0154 0200     		.2byte	0x2
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 44


 1563 0156 7D       		.byte	0x7d
 1564 0157 00       		.sleb128 0
 1565 0158 02000000 		.4byte	.LCFI16
 1566 015c 04000000 		.4byte	.LCFI17
 1567 0160 0200     		.2byte	0x2
 1568 0162 7D       		.byte	0x7d
 1569 0163 04       		.sleb128 4
 1570 0164 04000000 		.4byte	.LCFI17
 1571 0168 06000000 		.4byte	.LCFI18
 1572 016c 0200     		.2byte	0x2
 1573 016e 7D       		.byte	0x7d
 1574 016f 10       		.sleb128 16
 1575 0170 06000000 		.4byte	.LCFI18
 1576 0174 20000000 		.4byte	.LFE7
 1577 0178 0200     		.2byte	0x2
 1578 017a 77       		.byte	0x77
 1579 017b 10       		.sleb128 16
 1580 017c 00000000 		.4byte	0
 1581 0180 00000000 		.4byte	0
 1582              	.LLST8:
 1583 0184 00000000 		.4byte	.LFB8
 1584 0188 02000000 		.4byte	.LCFI19
 1585 018c 0200     		.2byte	0x2
 1586 018e 7D       		.byte	0x7d
 1587 018f 00       		.sleb128 0
 1588 0190 02000000 		.4byte	.LCFI19
 1589 0194 04000000 		.4byte	.LCFI20
 1590 0198 0200     		.2byte	0x2
 1591 019a 7D       		.byte	0x7d
 1592 019b 04       		.sleb128 4
 1593 019c 04000000 		.4byte	.LCFI20
 1594 01a0 06000000 		.4byte	.LCFI21
 1595 01a4 0200     		.2byte	0x2
 1596 01a6 7D       		.byte	0x7d
 1597 01a7 10       		.sleb128 16
 1598 01a8 06000000 		.4byte	.LCFI21
 1599 01ac 20000000 		.4byte	.LFE8
 1600 01b0 0200     		.2byte	0x2
 1601 01b2 77       		.byte	0x77
 1602 01b3 10       		.sleb128 16
 1603 01b4 00000000 		.4byte	0
 1604 01b8 00000000 		.4byte	0
 1605              	.LLST9:
 1606 01bc 00000000 		.4byte	.LFB9
 1607 01c0 02000000 		.4byte	.LCFI22
 1608 01c4 0200     		.2byte	0x2
 1609 01c6 7D       		.byte	0x7d
 1610 01c7 00       		.sleb128 0
 1611 01c8 02000000 		.4byte	.LCFI22
 1612 01cc 04000000 		.4byte	.LCFI23
 1613 01d0 0200     		.2byte	0x2
 1614 01d2 7D       		.byte	0x7d
 1615 01d3 04       		.sleb128 4
 1616 01d4 04000000 		.4byte	.LCFI23
 1617 01d8 06000000 		.4byte	.LCFI24
 1618 01dc 0200     		.2byte	0x2
 1619 01de 7D       		.byte	0x7d
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 45


 1620 01df 10       		.sleb128 16
 1621 01e0 06000000 		.4byte	.LCFI24
 1622 01e4 20000000 		.4byte	.LFE9
 1623 01e8 0200     		.2byte	0x2
 1624 01ea 77       		.byte	0x77
 1625 01eb 10       		.sleb128 16
 1626 01ec 00000000 		.4byte	0
 1627 01f0 00000000 		.4byte	0
 1628              	.LLST10:
 1629 01f4 00000000 		.4byte	.LFB10
 1630 01f8 02000000 		.4byte	.LCFI25
 1631 01fc 0200     		.2byte	0x2
 1632 01fe 7D       		.byte	0x7d
 1633 01ff 00       		.sleb128 0
 1634 0200 02000000 		.4byte	.LCFI25
 1635 0204 04000000 		.4byte	.LCFI26
 1636 0208 0200     		.2byte	0x2
 1637 020a 7D       		.byte	0x7d
 1638 020b 04       		.sleb128 4
 1639 020c 04000000 		.4byte	.LCFI26
 1640 0210 06000000 		.4byte	.LCFI27
 1641 0214 0200     		.2byte	0x2
 1642 0216 7D       		.byte	0x7d
 1643 0217 10       		.sleb128 16
 1644 0218 06000000 		.4byte	.LCFI27
 1645 021c 20000000 		.4byte	.LFE10
 1646 0220 0200     		.2byte	0x2
 1647 0222 77       		.byte	0x77
 1648 0223 10       		.sleb128 16
 1649 0224 00000000 		.4byte	0
 1650 0228 00000000 		.4byte	0
 1651              	.LLST11:
 1652 022c 00000000 		.4byte	.LFB11
 1653 0230 02000000 		.4byte	.LCFI28
 1654 0234 0200     		.2byte	0x2
 1655 0236 7D       		.byte	0x7d
 1656 0237 00       		.sleb128 0
 1657 0238 02000000 		.4byte	.LCFI28
 1658 023c 04000000 		.4byte	.LCFI29
 1659 0240 0200     		.2byte	0x2
 1660 0242 7D       		.byte	0x7d
 1661 0243 04       		.sleb128 4
 1662 0244 04000000 		.4byte	.LCFI29
 1663 0248 06000000 		.4byte	.LCFI30
 1664 024c 0200     		.2byte	0x2
 1665 024e 7D       		.byte	0x7d
 1666 024f 10       		.sleb128 16
 1667 0250 06000000 		.4byte	.LCFI30
 1668 0254 20000000 		.4byte	.LFE11
 1669 0258 0200     		.2byte	0x2
 1670 025a 77       		.byte	0x77
 1671 025b 10       		.sleb128 16
 1672 025c 00000000 		.4byte	0
 1673 0260 00000000 		.4byte	0
 1674              	.LLST12:
 1675 0264 00000000 		.4byte	.LFB12
 1676 0268 02000000 		.4byte	.LCFI31
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 46


 1677 026c 0200     		.2byte	0x2
 1678 026e 7D       		.byte	0x7d
 1679 026f 00       		.sleb128 0
 1680 0270 02000000 		.4byte	.LCFI31
 1681 0274 04000000 		.4byte	.LCFI32
 1682 0278 0200     		.2byte	0x2
 1683 027a 7D       		.byte	0x7d
 1684 027b 04       		.sleb128 4
 1685 027c 04000000 		.4byte	.LCFI32
 1686 0280 06000000 		.4byte	.LCFI33
 1687 0284 0200     		.2byte	0x2
 1688 0286 7D       		.byte	0x7d
 1689 0287 10       		.sleb128 16
 1690 0288 06000000 		.4byte	.LCFI33
 1691 028c 20000000 		.4byte	.LFE12
 1692 0290 0200     		.2byte	0x2
 1693 0292 77       		.byte	0x77
 1694 0293 10       		.sleb128 16
 1695 0294 00000000 		.4byte	0
 1696 0298 00000000 		.4byte	0
 1697              	.LLST13:
 1698 029c 00000000 		.4byte	.LFB13
 1699 02a0 02000000 		.4byte	.LCFI34
 1700 02a4 0200     		.2byte	0x2
 1701 02a6 7D       		.byte	0x7d
 1702 02a7 00       		.sleb128 0
 1703 02a8 02000000 		.4byte	.LCFI34
 1704 02ac 04000000 		.4byte	.LCFI35
 1705 02b0 0200     		.2byte	0x2
 1706 02b2 7D       		.byte	0x7d
 1707 02b3 04       		.sleb128 4
 1708 02b4 04000000 		.4byte	.LCFI35
 1709 02b8 06000000 		.4byte	.LCFI36
 1710 02bc 0200     		.2byte	0x2
 1711 02be 7D       		.byte	0x7d
 1712 02bf 10       		.sleb128 16
 1713 02c0 06000000 		.4byte	.LCFI36
 1714 02c4 20000000 		.4byte	.LFE13
 1715 02c8 0200     		.2byte	0x2
 1716 02ca 77       		.byte	0x77
 1717 02cb 10       		.sleb128 16
 1718 02cc 00000000 		.4byte	0
 1719 02d0 00000000 		.4byte	0
 1720              	.LLST14:
 1721 02d4 00000000 		.4byte	.LFB14
 1722 02d8 02000000 		.4byte	.LCFI37
 1723 02dc 0200     		.2byte	0x2
 1724 02de 7D       		.byte	0x7d
 1725 02df 00       		.sleb128 0
 1726 02e0 02000000 		.4byte	.LCFI37
 1727 02e4 04000000 		.4byte	.LCFI38
 1728 02e8 0200     		.2byte	0x2
 1729 02ea 7D       		.byte	0x7d
 1730 02eb 04       		.sleb128 4
 1731 02ec 04000000 		.4byte	.LCFI38
 1732 02f0 18000000 		.4byte	.LFE14
 1733 02f4 0200     		.2byte	0x2
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 47


 1734 02f6 77       		.byte	0x77
 1735 02f7 04       		.sleb128 4
 1736 02f8 00000000 		.4byte	0
 1737 02fc 00000000 		.4byte	0
 1738              	.LLST15:
 1739 0300 00000000 		.4byte	.LFB15
 1740 0304 02000000 		.4byte	.LCFI39
 1741 0308 0200     		.2byte	0x2
 1742 030a 7D       		.byte	0x7d
 1743 030b 00       		.sleb128 0
 1744 030c 02000000 		.4byte	.LCFI39
 1745 0310 04000000 		.4byte	.LCFI40
 1746 0314 0200     		.2byte	0x2
 1747 0316 7D       		.byte	0x7d
 1748 0317 04       		.sleb128 4
 1749 0318 04000000 		.4byte	.LCFI40
 1750 031c 18000000 		.4byte	.LFE15
 1751 0320 0200     		.2byte	0x2
 1752 0322 77       		.byte	0x77
 1753 0323 04       		.sleb128 4
 1754 0324 00000000 		.4byte	0
 1755 0328 00000000 		.4byte	0
 1756              	.LLST16:
 1757 032c 00000000 		.4byte	.LFB16
 1758 0330 02000000 		.4byte	.LCFI41
 1759 0334 0200     		.2byte	0x2
 1760 0336 7D       		.byte	0x7d
 1761 0337 00       		.sleb128 0
 1762 0338 02000000 		.4byte	.LCFI41
 1763 033c 04000000 		.4byte	.LCFI42
 1764 0340 0200     		.2byte	0x2
 1765 0342 7D       		.byte	0x7d
 1766 0343 04       		.sleb128 4
 1767 0344 04000000 		.4byte	.LCFI42
 1768 0348 18000000 		.4byte	.LFE16
 1769 034c 0200     		.2byte	0x2
 1770 034e 77       		.byte	0x77
 1771 034f 04       		.sleb128 4
 1772 0350 00000000 		.4byte	0
 1773 0354 00000000 		.4byte	0
 1774              	.LLST17:
 1775 0358 00000000 		.4byte	.LFB17
 1776 035c 02000000 		.4byte	.LCFI43
 1777 0360 0200     		.2byte	0x2
 1778 0362 7D       		.byte	0x7d
 1779 0363 00       		.sleb128 0
 1780 0364 02000000 		.4byte	.LCFI43
 1781 0368 04000000 		.4byte	.LCFI44
 1782 036c 0200     		.2byte	0x2
 1783 036e 7D       		.byte	0x7d
 1784 036f 04       		.sleb128 4
 1785 0370 04000000 		.4byte	.LCFI44
 1786 0374 18000000 		.4byte	.LFE17
 1787 0378 0200     		.2byte	0x2
 1788 037a 77       		.byte	0x77
 1789 037b 04       		.sleb128 4
 1790 037c 00000000 		.4byte	0
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 48


 1791 0380 00000000 		.4byte	0
 1792              		.section	.debug_aranges,"",%progbits
 1793 0000 A4000000 		.4byte	0xa4
 1794 0004 0200     		.2byte	0x2
 1795 0006 00000000 		.4byte	.Ldebug_info0
 1796 000a 04       		.byte	0x4
 1797 000b 00       		.byte	0
 1798 000c 0000     		.2byte	0
 1799 000e 0000     		.2byte	0
 1800 0010 00000000 		.4byte	.LFB0
 1801 0014 2A000000 		.4byte	.LFE0-.LFB0
 1802 0018 00000000 		.4byte	.LFB1
 1803 001c A6000000 		.4byte	.LFE1-.LFB1
 1804 0020 00000000 		.4byte	.LFB2
 1805 0024 26000000 		.4byte	.LFE2-.LFB2
 1806 0028 00000000 		.4byte	.LFB3
 1807 002c 26000000 		.4byte	.LFE3-.LFB3
 1808 0030 00000000 		.4byte	.LFB4
 1809 0034 20000000 		.4byte	.LFE4-.LFB4
 1810 0038 00000000 		.4byte	.LFB5
 1811 003c 22000000 		.4byte	.LFE5-.LFB5
 1812 0040 00000000 		.4byte	.LFB6
 1813 0044 1A000000 		.4byte	.LFE6-.LFB6
 1814 0048 00000000 		.4byte	.LFB7
 1815 004c 20000000 		.4byte	.LFE7-.LFB7
 1816 0050 00000000 		.4byte	.LFB8
 1817 0054 20000000 		.4byte	.LFE8-.LFB8
 1818 0058 00000000 		.4byte	.LFB9
 1819 005c 20000000 		.4byte	.LFE9-.LFB9
 1820 0060 00000000 		.4byte	.LFB10
 1821 0064 20000000 		.4byte	.LFE10-.LFB10
 1822 0068 00000000 		.4byte	.LFB11
 1823 006c 20000000 		.4byte	.LFE11-.LFB11
 1824 0070 00000000 		.4byte	.LFB12
 1825 0074 20000000 		.4byte	.LFE12-.LFB12
 1826 0078 00000000 		.4byte	.LFB13
 1827 007c 20000000 		.4byte	.LFE13-.LFB13
 1828 0080 00000000 		.4byte	.LFB14
 1829 0084 18000000 		.4byte	.LFE14-.LFB14
 1830 0088 00000000 		.4byte	.LFB15
 1831 008c 18000000 		.4byte	.LFE15-.LFB15
 1832 0090 00000000 		.4byte	.LFB16
 1833 0094 18000000 		.4byte	.LFE16-.LFB16
 1834 0098 00000000 		.4byte	.LFB17
 1835 009c 18000000 		.4byte	.LFE17-.LFB17
 1836 00a0 00000000 		.4byte	0
 1837 00a4 00000000 		.4byte	0
 1838              		.section	.debug_ranges,"",%progbits
 1839              	.Ldebug_ranges0:
 1840 0000 00000000 		.4byte	.LFB0
 1841 0004 2A000000 		.4byte	.LFE0
 1842 0008 00000000 		.4byte	.LFB1
 1843 000c A6000000 		.4byte	.LFE1
 1844 0010 00000000 		.4byte	.LFB2
 1845 0014 26000000 		.4byte	.LFE2
 1846 0018 00000000 		.4byte	.LFB3
 1847 001c 26000000 		.4byte	.LFE3
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 49


 1848 0020 00000000 		.4byte	.LFB4
 1849 0024 20000000 		.4byte	.LFE4
 1850 0028 00000000 		.4byte	.LFB5
 1851 002c 22000000 		.4byte	.LFE5
 1852 0030 00000000 		.4byte	.LFB6
 1853 0034 1A000000 		.4byte	.LFE6
 1854 0038 00000000 		.4byte	.LFB7
 1855 003c 20000000 		.4byte	.LFE7
 1856 0040 00000000 		.4byte	.LFB8
 1857 0044 20000000 		.4byte	.LFE8
 1858 0048 00000000 		.4byte	.LFB9
 1859 004c 20000000 		.4byte	.LFE9
 1860 0050 00000000 		.4byte	.LFB10
 1861 0054 20000000 		.4byte	.LFE10
 1862 0058 00000000 		.4byte	.LFB11
 1863 005c 20000000 		.4byte	.LFE11
 1864 0060 00000000 		.4byte	.LFB12
 1865 0064 20000000 		.4byte	.LFE12
 1866 0068 00000000 		.4byte	.LFB13
 1867 006c 20000000 		.4byte	.LFE13
 1868 0070 00000000 		.4byte	.LFB14
 1869 0074 18000000 		.4byte	.LFE14
 1870 0078 00000000 		.4byte	.LFB15
 1871 007c 18000000 		.4byte	.LFE15
 1872 0080 00000000 		.4byte	.LFB16
 1873 0084 18000000 		.4byte	.LFE16
 1874 0088 00000000 		.4byte	.LFB17
 1875 008c 18000000 		.4byte	.LFE17
 1876 0090 00000000 		.4byte	0
 1877 0094 00000000 		.4byte	0
 1878              		.section	.debug_line,"",%progbits
 1879              	.Ldebug_line0:
 1880 0000 AC010000 		.section	.debug_str,"MS",%progbits,1
 1880      02004400 
 1880      00000201 
 1880      FB0E0D00 
 1880      01010101 
 1881              	.LASF18:
 1882 0000 50574D5F 		.ascii	"PWM_1_Enable\000"
 1882      315F456E 
 1882      61626C65 
 1882      00
 1883              	.LASF21:
 1884 000d 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1884      315F5772 
 1884      69746543 
 1884      6F756E74 
 1884      657200
 1885              	.LASF22:
 1886 0020 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1886      315F436C 
 1886      65617246 
 1886      49464F00 
 1887              	.LASF25:
 1888 0030 70657269 		.ascii	"period\000"
 1888      6F6400
 1889              	.LASF38:
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 50


 1890 0037 50574D5F 		.ascii	"PWM_1_ReadCompare1\000"
 1890      315F5265 
 1890      6164436F 
 1890      6D706172 
 1890      653100
 1891              	.LASF39:
 1892 004a 50574D5F 		.ascii	"PWM_1_ReadCompare2\000"
 1892      315F5265 
 1892      6164436F 
 1892      6D706172 
 1892      653200
 1893              	.LASF3:
 1894 005d 73686F72 		.ascii	"short unsigned int\000"
 1894      7420756E 
 1894      7369676E 
 1894      65642069 
 1894      6E7400
 1895              	.LASF42:
 1896 0070 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_1.c\000"
 1896      6E657261 
 1896      7465645F 
 1896      536F7572 
 1896      63655C50 
 1897              	.LASF26:
 1898 0091 50574D5F 		.ascii	"PWM_1_WriteCompare1\000"
 1898      315F5772 
 1898      69746543 
 1898      6F6D7061 
 1898      72653100 
 1899              	.LASF28:
 1900 00a5 50574D5F 		.ascii	"PWM_1_WriteCompare2\000"
 1900      315F5772 
 1900      69746543 
 1900      6F6D7061 
 1900      72653200 
 1901              	.LASF9:
 1902 00b9 666C6F61 		.ascii	"float\000"
 1902      7400
 1903              	.LASF24:
 1904 00bf 636F756E 		.ascii	"counter\000"
 1904      74657200 
 1905              	.LASF1:
 1906 00c7 756E7369 		.ascii	"unsigned char\000"
 1906      676E6564 
 1906      20636861 
 1906      7200
 1907              	.LASF13:
 1908 00d5 72656738 		.ascii	"reg8\000"
 1908      00
 1909              	.LASF40:
 1910 00da 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1910      315F5265 
 1910      61645065 
 1910      72696F64 
 1910      00
 1911              	.LASF5:
 1912 00eb 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 51


 1912      20756E73 
 1912      69676E65 
 1912      6420696E 
 1912      7400
 1913              	.LASF12:
 1914 00fd 75696E74 		.ascii	"uint8\000"
 1914      3800
 1915              	.LASF35:
 1916 0103 636F6E74 		.ascii	"control\000"
 1916      726F6C00 
 1917              	.LASF29:
 1918 010b 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1918      315F5365 
 1918      74496E74 
 1918      65727275 
 1918      70744D6F 
 1919              	.LASF32:
 1920 0122 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1920      315F5265 
 1920      61645374 
 1920      61747573 
 1920      52656769 
 1921              	.LASF10:
 1922 013b 646F7562 		.ascii	"double\000"
 1922      6C6500
 1923              	.LASF16:
 1924 0142 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1924      315F696E 
 1924      74657272 
 1924      75707453 
 1924      74617465 
 1925              	.LASF44:
 1926 0157 50574D5F 		.ascii	"PWM_1_initVar\000"
 1926      315F696E 
 1926      69745661 
 1926      7200
 1927              	.LASF2:
 1928 0165 73686F72 		.ascii	"short int\000"
 1928      7420696E 
 1928      7400
 1929              	.LASF37:
 1930 016f 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1930      315F5265 
 1930      61644361 
 1930      70747572 
 1930      6500
 1931              	.LASF34:
 1932 0181 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1932      315F5772 
 1932      69746543 
 1932      6F6E7472 
 1932      6F6C5265 
 1933              	.LASF20:
 1934 019c 50574D5F 		.ascii	"PWM_1_Init\000"
 1934      315F496E 
 1934      697400
 1935              	.LASF8:
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 52


 1936 01a7 756E7369 		.ascii	"unsigned int\000"
 1936      676E6564 
 1936      20696E74 
 1936      00
 1937              	.LASF43:
 1938 01b4 433A5C55 		.ascii	"C:\\Users\\matsuda_kazuaki\\Documents\\PSoC Creator"
 1938      73657273 
 1938      5C6D6174 
 1938      73756461 
 1938      5F6B617A 
 1939 01e3 5C726F62 		.ascii	"\\roboconn_MT_arm\\roboconn_MT_arm.cydsn\000"
 1939      6F636F6E 
 1939      6E5F4D54 
 1939      5F61726D 
 1939      5C726F62 
 1940              	.LASF7:
 1941 020a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1941      206C6F6E 
 1941      6720756E 
 1941      7369676E 
 1941      65642069 
 1942              	.LASF31:
 1943 0221 72657375 		.ascii	"result\000"
 1943      6C7400
 1944              	.LASF15:
 1945 0228 6374726C 		.ascii	"ctrl\000"
 1945      00
 1946              	.LASF14:
 1947 022d 73697A65 		.ascii	"sizetype\000"
 1947      74797065 
 1947      00
 1948              	.LASF6:
 1949 0236 6C6F6E67 		.ascii	"long long int\000"
 1949      206C6F6E 
 1949      6720696E 
 1949      7400
 1950              	.LASF33:
 1951 0244 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1951      315F5265 
 1951      6164436F 
 1951      6E74726F 
 1951      6C526567 
 1952              	.LASF30:
 1953 025e 696E7465 		.ascii	"interruptMode\000"
 1953      72727570 
 1953      744D6F64 
 1953      6500
 1954              	.LASF23:
 1955 026c 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1955      315F5772 
 1955      69746550 
 1955      6572696F 
 1955      6400
 1956              	.LASF36:
 1957 027e 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1957      315F5265 
 1957      6164436F 
ARM GAS  C:\Users\MATSUD~1\AppData\Local\Temp\ccpSlpJb.s 			page 53


 1957      756E7465 
 1957      7200
 1958              	.LASF41:
 1959 0290 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1959      4320342E 
 1959      372E3320 
 1959      32303133 
 1959      30333132 
 1960 02c3 616E6368 		.ascii	"anch revision 196615]\000"
 1960      20726576 
 1960      6973696F 
 1960      6E203139 
 1960      36363135 
 1961              	.LASF19:
 1962 02d9 50574D5F 		.ascii	"PWM_1_Stop\000"
 1962      315F5374 
 1962      6F7000
 1963              	.LASF4:
 1964 02e4 6C6F6E67 		.ascii	"long int\000"
 1964      20696E74 
 1964      00
 1965              	.LASF11:
 1966 02ed 63686172 		.ascii	"char\000"
 1966      00
 1967              	.LASF0:
 1968 02f2 7369676E 		.ascii	"signed char\000"
 1968      65642063 
 1968      68617200 
 1969              	.LASF27:
 1970 02fe 636F6D70 		.ascii	"compare\000"
 1970      61726500 
 1971              	.LASF17:
 1972 0306 50574D5F 		.ascii	"PWM_1_Start\000"
 1972      315F5374 
 1972      61727400 
 1973              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
