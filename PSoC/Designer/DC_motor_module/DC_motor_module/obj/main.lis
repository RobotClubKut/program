 0000                   cpu LMM
                        .module main.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./main.c
 0000                   .dbfile C:\Users\MATSUD~1\Dropbox\äÓî’î«\ÉvÉçÉO~1\PSoC\Designer\DC_MOT~1\DC_MOT~1\main.c
 0000                   .dbfunc e main _main fV
 0000           ;       pin_0_io -> X+2
 0000           ;      port1data -> X+1
 0000           ;      port2data -> X+0
 0000           _main::
 0000                   .dbline -1
 0000 10                push X
 0001 4F                mov X,SP
 0002 3803              add SP,3
 0004                   .dbline 33
 0004           ; //----------------------------------------------------------------------------
 0004           ; // C main line
 0004           ; //----------------------------------------------------------------------------
 0004           ; //PSoC1„ÅÆ29446Áî®„Åß„Åô„ÄÇ
 0004           ; //ÈÖçÁ∑ö„ÅØx„ÅÆhigh„Åå
 0004           ; //        low„Åå„ÄÄ
 0004           ; //     y„ÅÆhigh„Åå
 0004           ; //              low„Åå
 0004           ; //     z„ÅÆhigh„Åå
 0004           ; //              low„Åå 
 0004           ; //EZI2Cs_1  slave„ÄÄaddress 11
 0004           ; //          I2C clock 400k First
 0004           ; 
 0004           ; 
 0004           ; 
 0004           ; #include <m8c.h>        // part specific constants and macros
 0004           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0004           ; 
 0004           ; 
 0004           ; struct I2C_Motor
 0004           ; {
 0004           ;       BYTE x_1;
 0004           ;       BYTE x_2;
 0004           ;       BYTE y_1;
 0004           ;       BYTE y_2;
 0004           ;       BYTE z_1;
 0004           ;       BYTE z_2;
 0004           ;       
 0004           ; } MyI2C_Motor;
 0004           ; 
 0004           ; 
 0004           ; void main(void)
 0004           ; {
 0004                   .dbline 35
 0004           ;       /*„Éî„É≥„Éá„Éº„Çø„ÅÆ‰øùÂ≠òÂ§âÊï∞*/
 0004           ;       unsigned char port1data = 0x00,port2data = 0x00,pin_0_io = 0x00;
 0004 560100            mov [X+1],0
 0007                   .dbline 35
 0007 560000            mov [X+0],0
 000A                   .dbline 35
 000A 560200            mov [X+2],0
 000D                   .dbline 46
 000D           ;       
 000D           ;       /*(Êóß)„É°„Éº„É´„Éú„ÉÉ„ÇØ„Çπ„ÅÆÂÄ§
 000D           ;       unsigned  char  X_TRD_b = 0;
 000D           ;       unsigned  char  Y_TRD_b = 0;
 000D           ;       unsigned  char  Z_TRD_b = 0;
 000D           ;       unsigned  char  X_SPEED_b = 0;
 000D           ;       unsigned  char  Y_SPEED_b = 0;
 000D           ;       unsigned  char  Z_SPEED_b = 0;
 000D           ;       unsigned  char  OUTBOX_FLAG_b = 0;*/
 000D           ;       
 000D           ;       M8C_EnableGInt ; // Uncomment this line to enable Global Interrupts
 000D 7101                      or  F, 01h
 000F           
 000F                   .dbline 55
 000F           ;       // Insert your main routine code here.
 000F           ;       
 000F           ;       /*„Éù„Éº„Éà„ÅÆÂàùÊúüÂåñ„ÅÑ„Çâ„Å™„ÅÑ*/
 000F           ; /*    PRT2DR = 0x00;
 000F           ;       PRT1DR = 0x00;
 000F           ;       PRT0DR = 0x00;*/
 000F           ;       
 000F           ;       /*PWM8„ÅÆ1~6„Çí„Çπ„Çø„Éº„Éà*/
 000F           ;       PWM8_1_Start();
 000F 10                push X
 0010 7C0000            xcall _PWM8_1_Start
 0013                   .dbline 56
 0013           ;       PWM8_2_Start();
 0013 7C0000            xcall _PWM8_2_Start
 0016                   .dbline 57
 0016           ;       PWM8_3_Start();
 0016 7C0000            xcall _PWM8_3_Start
 0019                   .dbline 58
 0019           ;       PWM8_4_Start();
 0019 7C0000            xcall _PWM8_4_Start
 001C                   .dbline 59
 001C           ;       PWM8_5_Start();
 001C 7C0000            xcall _PWM8_5_Start
 001F                   .dbline 60
 001F           ;       PWM8_6_Start();
 001F 7C0000            xcall _PWM8_6_Start
 0022                   .dbline 66
 0022           ;       
 0022           ;       /*„É°„Éº„É´„Éú„ÉÉ„ÇØ„Çπ„ÅÆË®≠ÂÆö
 0022           ;       MBM_1_InitializeMailbox();
 0022           ;       
 0022           ;       /*EzI2Cs_1„ÅÆË®≠ÂÆö*/
 0022           ;       EzI2Cs_1_SetRamBuffer(sizeof(MyI2C_Motor),6, (BYTE *)&MyI2C_Motor);
 0022 5000              mov A,>_MyI2C_Motor
 0024 08                push A
 0025 5000              mov A,<_MyI2C_Motor
 0027 08                push A
 0028 5006              mov A,6
 002A 08                push A
 002B 08                push A
 002C 7C0000            xcall _EzI2Cs_1_SetRamBuffer
 002F 38FC              add SP,-4
 0031                   .dbline 67
 0031           ;       EzI2Cs_1_Start();
 0031 7C0000            xcall _EzI2Cs_1_Start
 0034                   .dbline 68
 0034           ;       EzI2Cs_1_EnableInt();
 0034 7C0000            xcall _EzI2Cs_1_EnableInt
 0037                   .dbline 72
 0037           ;       
 0037           ;       /*SleepTimer„ÅÆË®≠ÂÆö*/
 0037           ;       
 0037           ;       SleepTimer_1_Start();
 0037 7C0000            xcall _SleepTimer_1_Start
 003A                   .dbline 73
 003A           ;       SleepTimer_1_EnableInt();
 003A 7C0000            xcall _SleepTimer_1_EnableInt
 003D                   .dbline 74
 003D           ;       SleepTimer_1_SetInterval(0x18);
 003D 5018              mov A,24
 003F 7C0000            xcall _SleepTimer_1_SetInterval
 0042 20                pop X
 0043 8100              xjmp L6
 0045           L5:
 0045                   .dbline 243
 0045           ;       
 0045           ;               
 0045           ;       /*„ÉÜ„Çπ„Éà„Éó„É≠„Ç∞„É©„É†*/
 0045           ; /*    while (1){
 0045           ;               SleepTimer_1_TickWait(4);
 0045           ;               RDI0RO0 = 0x01;
 0045           ;               PRT2GS = 0x01;
 0045           ;               
 0045           ;               SleepTimer_1_TickWait(4);
 0045           ;               PRT2GS = 0x00;
 0045           ;               
 0045           ;               
 0045           ;               SleepTimer_1_TickWait(4);
 0045           ;               RDI0RO0 = 0x04;
 0045           ;               PRT1GS = 0x01;
 0045           ;               
 0045           ;               
 0045           ;               SleepTimer_1_TickWait(4);
 0045           ;               PRT1GS = 0x00;
 0045           ;       }*/
 0045           ;       
 0045           ;       /*while (1){
 0045           ;               PRT2DR = port2data | (1 << 1);
 0045           ;               PRT1DR = port1data | (1 << 3);
 0045           ;               
 0045           ;               PRT0GS = 0x01;
 0045           ;               PWM8_1_WritePulseWidth(255);
 0045           ;               PWM8_2_WritePulseWidth(0);
 0045           ;               
 0045           ;               SleepTimer_1_TickWait(3);
 0045           ;               
 0045           ;               PRT0GS = 0x00;
 0045           ;               PWM8_1_WritePulseWidth(0);
 0045           ;               PWM8_2_WritePulseWidth(0);
 0045           ;               
 0045           ;               SleepTimer_1_TickWait(3);
 0045           ;               
 0045           ;               PRT0GS = 0x02;
 0045           ;               PWM8_1_WritePulseWidth(0);
 0045           ;               PWM8_2_WritePulseWidth(255);
 0045           ;               
 0045           ;               SleepTimer_1_TickWait(3);
 0045           ;       }*/
 0045           ;               
 0045           ;               
 0045           ;       
 0045           ;       /*„É°„Ç§„É≥Âá¶ÁêÜÔºí
 0045           ;       while (1){
 0045           ;               /*(Êñ∞)„É°„Éº„É´„Éú„ÉÉ„ÇØ„Çπ„ÅÆÂÄ§„ÇíÂà•„ÅÆÂ§âÊï∞„Å´ÁΩÆ„ÅçÊèõ„Åà
 0045           ;               BYTE X_TRD_a = MBM_1_MyMailbox.Outbox.x_trd;
 0045           ;               BYTE Y_TRD_a = MBM_1_MyMailbox.Outbox.y_trd;
 0045           ;               BYTE Z_TRD_a = MBM_1_MyMailbox.Outbox.z_trd;
 0045           ;               BYTE X_SPEED_a = MBM_1_MyMailbox.Outbox.x_speed;
 0045           ;               BYTE Y_SPEED_a = MBM_1_MyMailbox.Outbox.y_speed;
 0045           ;               BYTE Z_SPEED_a = MBM_1_MyMailbox.Outbox.z_speed;
 0045           ;               BYTE OUTBOX_FLAG_a = MBM_1_MyMailbox.Outbox.outbox_flag;
 0045           ;               
 0045           ;               /*x„ÅÆÊñπÂêë„ÅãÈÄüÂ∫¶„ÅåÂ§âÂåñ„Åó„ÅüÂ†¥Âêà
 0045           ;               if (!((X_TRD_a == X_TRD_b)||(X_SPEED_a == X_SPEED_b))){
 0045           ;                       
 0045           ;                       
 0045           ;                       
 0045           ;                       if (X_TRD_a == 1){
 0045           ;                               
 0045           ;                               /*„Éî„É≥„ÅÆÂàá„ÇäÊõø„Åà
 0045           ;                               PRT1GS &= ~(1 << 0) ;//Port_1_0„ÇíOFF
 0045           ;                               RDI0RO0 &= ~(1 << 2);//GOO[0]„ÇíOFF
 0045           ;                               RDI0RO0 |= (1 << 0);//GOE[0]„ÇíON
 0045           ;                               PRT2GS |= (1 << 0);//Port_2_0„ÇíON
 0045           ;                               
 0045           ;                               x_y_z_motor_control(1);
 0045           ;                               
 0045           ;                               /*„Éá„Éº„Çø„Çí‰øùÂ≠ò
 0045           ;                               X_TRD_b = X_TRD_a;
 0045           ;                               X_SPEED_b = X_SPEED_a;
 0045           ;                       }
 0045           ;                       
 0045           ;                       else if (X_TRD_a == 0){
 0045           ;                               
 0045           ;                               /*„Éî„É≥„ÅÆÂàá„ÇäÊõø„Åà
 0045           ;                               PRT2GS &= ~(1 << 0);//Port_2_0„ÇíOFF
 0045           ;                               RDI0RO0 &= ~(1 << 0);//GOE[0]„ÇíOFF
 0045           ;                               RDI0RO0 |= (1 << 2);//GOO[0]„ÇíON
 0045           ;                               PRT1GS |= (1 << 0);//Port_1_0„ÇíON
 0045           ;                               
 0045           ;                               x_y_z_motor_control(2);
 0045           ;                               
 0045           ;                               /*„Éá„Éº„Çø„Çí‰øùÂ≠ò
 0045           ;                               X_TRD_b = X_TRD_a;
 0045           ;                               X_SPEED_b = X_SPEED_a;
 0045           ;                       }
 0045           ;               }
 0045           ;               /*y„ÅÆÊñπÂêë„ÅãÈÄüÂ∫¶„ÅåÂ§âÂåñ„Åó„ÅüÂ†¥Âêà
 0045           ;               if (!((Y_TRD_a == Y_TRD_b)||(Y_SPEED_a == Y_SPEED_b))){
 0045           ;                       
 0045           ;                       
 0045           ;                       
 0045           ;                       if (X_TRD_a == 1){
 0045           ;                               
 0045           ;                               /*„Éî„É≥„ÅÆÂàá„ÇäÊõø„Åà
 0045           ;                               PRT1GS &= ~(1 << 1);//Port_1_1„ÇíOFF
 0045           ;                               RDI0RO0 &= ~(1 << 6);//GOO[1]„ÇíOFF
 0045           ;                               RDI0RO0 |= (1 << 4);//GOE[1]„ÇíON
 0045           ;                               PRT2GS |= (1 << 1);//Port_2_1„ÇíON
 0045           ;                               
 0045           ;                               x_y_z_motor_control(3);
 0045           ;                               
 0045           ;                               /*„Éá„Éº„Çø„Çí‰øùÂ≠ò
 0045           ;                               Y_TRD_b = Y_TRD_a;
 0045           ;                               Y_SPEED_b = Y_SPEED_a;
 0045           ;                       }
 0045           ;                       
 0045           ;                       else if (Y_TRD_a == 0){
 0045           ;                               
 0045           ;                               /*„Éî„É≥„ÅÆÂàá„ÇäÊõø„Åà
 0045           ;                               PRT2GS &= ~(1 << 1);//Port_2_1„ÇíOFF
 0045           ;                               RDI0RO0 &= ~(1 << 4);//GOE[1]„ÇíOFF
 0045           ;                               RDI0RO0 |= (1 << 6);//GOO[1]„ÇíON
 0045           ;                               PRT1GS |= (1 << 1);//Port_1_1„ÇíON
 0045           ;                               
 0045           ;                               x_y_z_motor_control(4);
 0045           ;                               
 0045           ;                               /*„Éá„Éº„Çø„Çí‰øùÂ≠ò
 0045           ;                               Y_TRD_b = Y_TRD_a;
 0045           ;                               Y_SPEED_b = Y_SPEED_a;
 0045           ;                       }
 0045           ;               }
 0045           ;               /*z„ÅÆÊñπÂêë„ÅãÈÄüÂ∫¶„ÅåÂ§âÂåñ„Åó„ÅüÂ†¥Âêà
 0045           ;               if (!((Z_TRD_a == Z_TRD_b)||(Z_SPEED_a == Z_SPEED_b))){
 0045           ;                       
 0045           ;                       
 0045           ;                       
 0045           ;                       if (X_TRD_a == 1){
 0045           ;                               
 0045           ;                               /*„Éî„É≥„ÅÆÂàá„ÇäÊõø„Åà
 0045           ;                               PRT1GS &= ~(1 << 2) ;//Port_1_2„ÇíOFF
 0045           ;                               RDI0RO1 &= ~(1 << 2);//GOO[2]„ÇíOFF
 0045           ;                               RDI0RO1 |= (1 << 0);//GOE[2]„ÇíON 
 0045           ;                               PRT2GS |= (1 << 1);//Port_2_1„ÇíON
 0045           ;                               
 0045           ;                               x_y_z_motor_control(5);
 0045           ;                               
 0045           ;                               /*„Éá„Éº„Çø„Çí‰øùÂ≠ò
 0045           ;                               Z_TRD_b = Z_TRD_a;
 0045           ;                               Z_SPEED_b = Z_SPEED_a;
 0045           ;                       }
 0045           ;                       
 0045           ;                       else if (Z_TRD_a == 0){
 0045           ;                               
 0045           ;                               /*„Éî„É≥„ÅÆÂàá„ÇäÊõø„Åà
 0045           ;                               PRT2GS &= ~(1 << 1);//Port_2_1„ÇíOFF
 0045           ;                               RDI0RO1 &= ~(1 << 0);//GOE[2]„ÇíOFF
 0045           ;                               RDI0RO1 |= (1 << 2);//GOO[2]„ÇíON
 0045           ;                               PRT1GS |= (1 << 1);//Port_1_1„ÇíON
 0045           ;                               
 0045           ;                               x_y_z_motor_control(6);
 0045           ;                               
 0045           ;                               /*„Éá„Éº„Çø„Çí‰øùÂ≠ò
 0045           ;                               Z_TRD_b = Z_TRD_a;
 0045           ;                               Z_SPEED_b = Z_SPEED_a;
 0045           ;                       }
 0045           ;               }
 0045           ;       }
 0045           ; }
 0045           ; 
 0045           ;                       
 0045           ;               
 0045           ;       /*„É°„Ç§„É≥Âá¶ÁêÜ(Ê≤°)*/
 0045           ;       while (1){
 0045                   .dbline 245
 0045           ; //            x„ÅåÂÖ•Âäõ„Åï„Çå„Å¶„Å™„Åã„Å£„Åü„Çâ„Éñ„É¨„Éº„Ç≠
 0045           ;               if ((MyI2C_Motor.x_1 == 0)&&(MyI2C_Motor.x_2 == 0)){
 0045 62D000            mov REG[0xd0],>_MyI2C_Motor
 0048 3C0000            cmp [_MyI2C_Motor],0
 004B B023              jnz L8
 004D 3C0100            cmp [_MyI2C_Motor+1],0
 0050 B01E              jnz L8
 0052                   .dbline 247
 0052           ;               
 0052           ;                       PRT2DR = port2data & ~(1 << 1);
 0052                   .dbline 247
 0052 62D000            mov REG[0xd0],>__r0
 0055 5200              mov A,[X+0]
 0057 21FD              and A,-3
 0059 6008              mov REG[0x8],A
 005B                   .dbline 248
 005B           ;                       PRT1DR = port1data & ~(1 << 3);
 005B 5201              mov A,[X+1]
 005D 21F7              and A,-9
 005F 6004              mov REG[0x4],A
 0061                   .dbline 250
 0061           ;                       
 0061           ;                       PWM8_1_WritePulseWidth(255);
 0061 10                push X
 0062 50FF              mov A,-1
 0064 7C0000            xcall _PWM8_1_WritePulseWidth
 0067                   .dbline 251
 0067           ;                       PWM8_2_WritePulseWidth(255);
 0067 50FF              mov A,-1
 0069 7C0000            xcall _PWM8_2_WritePulseWidth
 006C 20                pop X
 006D                   .dbline 252
 006D           ;               }
 006D 802C              xjmp L9
 006F           L8:
 006F                   .dbline 255
 006F           ;               
 006F           ; //            xËª∏„É¢„Éº„ÇøÈßÜÂãï
 006F           ;               else if((MyI2C_Motor.x_1 == 0)||(MyI2C_Motor.x_2 == 0)){
 006F 62D000            mov REG[0xd0],>_MyI2C_Motor
 0072 3C0000            cmp [_MyI2C_Motor],0
 0075 A006              jz L14
 0077 3C0100            cmp [_MyI2C_Motor+1],0
 007A B01F              jnz L11
 007C           L14:
 007C                   .dbline 257
 007C           ;                       
 007C           ;                       PRT2DR = port2data | (1 << 1);
 007C                   .dbline 257
 007C 5200              mov A,[X+0]
 007E 2902              or A,2
 0080 6008              mov REG[0x8],A
 0082                   .dbline 258
 0082           ;                       PRT1DR = port1data | (1 << 3);
 0082 5201              mov A,[X+1]
 0084 2908              or A,8
 0086 6004              mov REG[0x4],A
 0088                   .dbline 260
 0088           ;                       
 0088           ;                       PWM8_1_WritePulseWidth(MyI2C_Motor.x_1);
 0088 10                push X
 0089 62D000            mov REG[0xd0],>_MyI2C_Motor
 008C 5100              mov A,[_MyI2C_Motor]
 008E 7C0000            xcall _PWM8_1_WritePulseWidth
 0091                   .dbline 261
 0091           ;                       PWM8_2_WritePulseWidth(MyI2C_Motor.x_2);
 0091 62D000            mov REG[0xd0],>_MyI2C_Motor
 0094 5101              mov A,[_MyI2C_Motor+1]
 0096 7C0000            xcall _PWM8_2_WritePulseWidth
 0099 20                pop X
 009A                   .dbline 262
 009A           ;               }
 009A           L11:
 009A                   .dbline 263
 009A           ;               else {
 009A                   .dbline 264
 009A           ;               }
 009A           L12:
 009A           L9:
 009A                   .dbline 266
 009A           ; //            y„ÅåÂÖ•Âäõ„Åï„Çå„Å¶„Å™„Åã„Å£„Åü„Çâ„Éñ„É¨„Éº„Ç≠  
 009A           ;               if ((MyI2C_Motor.y_1 == 0)&&(MyI2C_Motor.y_2 == 0)){
 009A 62D000            mov REG[0xd0],>_MyI2C_Motor
 009D 3C0200            cmp [_MyI2C_Motor+2],0
 00A0 B023              jnz L16
 00A2 3C0300            cmp [_MyI2C_Motor+3],0
 00A5 B01E              jnz L16
 00A7                   .dbline 268
 00A7           ;                       
 00A7           ;                       PRT2DR = port2data & ~(1 << 5);
 00A7                   .dbline 268
 00A7 62D000            mov REG[0xd0],>__r0
 00AA 5200              mov A,[X+0]
 00AC 21DF              and A,-33
 00AE 6008              mov REG[0x8],A
 00B0                   .dbline 269
 00B0           ;                       PRT2DR = port2data & ~(1 << 7);
 00B0 5200              mov A,[X+0]
 00B2 217F              and A,127
 00B4 6008              mov REG[0x8],A
 00B6                   .dbline 271
 00B6           ;                       
 00B6           ;                       PWM8_3_WritePulseWidth(255);
 00B6 10                push X
 00B7 50FF              mov A,-1
 00B9 7C0000            xcall _PWM8_3_WritePulseWidth
 00BC                   .dbline 272
 00BC           ;                       PWM8_4_WritePulseWidth(255);            
 00BC 50FF              mov A,-1
 00BE 7C0000            xcall _PWM8_4_WritePulseWidth
 00C1 20                pop X
 00C2                   .dbline 273
 00C2           ;               }
 00C2 802C              xjmp L17
 00C4           L16:
 00C4                   .dbline 276
 00C4           ;               
 00C4           ; //            yËª∏„É¢„Éº„ÇøÈßÜÂãï
 00C4           ;               else if ((MyI2C_Motor.y_1 == 0)||(MyI2C_Motor.y_2 == 0)){
 00C4 62D000            mov REG[0xd0],>_MyI2C_Motor
 00C7 3C0200            cmp [_MyI2C_Motor+2],0
 00CA A006              jz L24
 00CC 3C0300            cmp [_MyI2C_Motor+3],0
 00CF B01F              jnz L20
 00D1           L24:
 00D1                   .dbline 278
 00D1           ;                       
 00D1           ;                       PRT2DR = port2data | (1 << 5);
 00D1                   .dbline 278
 00D1 5200              mov A,[X+0]
 00D3 2920              or A,32
 00D5 6008              mov REG[0x8],A
 00D7                   .dbline 279
 00D7           ;                       PRT2DR = port2data | (1 << 7);
 00D7 5200              mov A,[X+0]
 00D9 2980              or A,-128
 00DB 6008              mov REG[0x8],A
 00DD                   .dbline 281
 00DD           ;                       
 00DD           ;                       PWM8_3_WritePulseWidth(MyI2C_Motor.y_1);
 00DD 10                push X
 00DE 62D000            mov REG[0xd0],>_MyI2C_Motor
 00E1 5102              mov A,[_MyI2C_Motor+2]
 00E3 7C0000            xcall _PWM8_3_WritePulseWidth
 00E6                   .dbline 282
 00E6           ;                       PWM8_4_WritePulseWidth(MyI2C_Motor.y_2);
 00E6 62D000            mov REG[0xd0],>_MyI2C_Motor
 00E9 5103              mov A,[_MyI2C_Motor+3]
 00EB 7C0000            xcall _PWM8_4_WritePulseWidth
 00EE 20                pop X
 00EF                   .dbline 283
 00EF           ;               }
 00EF           L20:
 00EF                   .dbline 284
 00EF           ;               else {
 00EF                   .dbline 285
 00EF           ;               }
 00EF           L21:
 00EF           L17:
 00EF                   .dbline 287
 00EF           ; //            z„ÅåÂÖ•Âäõ„Åï„Çå„Å¶„Å™„Åã„Å£„Åü„Çâ„Éñ„É¨„Éº„Ç≠
 00EF           ;               if ((MyI2C_Motor.z_1 == 0)&&(MyI2C_Motor.z_2 == 0)){
 00EF 62D000            mov REG[0xd0],>_MyI2C_Motor
 00F2 3C0400            cmp [_MyI2C_Motor+4],0
 00F5 B023              jnz L27
 00F7 3C0500            cmp [_MyI2C_Motor+5],0
 00FA B01E              jnz L27
 00FC                   .dbline 289
 00FC           ;                       
 00FC           ;                       PRT2DR = port2data & ~(1 << 0);
 00FC                   .dbline 289
 00FC 62D000            mov REG[0xd0],>__r0
 00FF 5200              mov A,[X+0]
 0101 21FE              and A,-2
 0103 6008              mov REG[0x8],A
 0105                   .dbline 290
 0105           ;                       PRT1DR = port1data & ~(1 << 6);
 0105 5201              mov A,[X+1]
 0107 21BF              and A,-65
 0109 6004              mov REG[0x4],A
 010B                   .dbline 292
 010B           ;                       
 010B           ;                       PWM8_5_WritePulseWidth(255);
 010B 10                push X
 010C 50FF              mov A,-1
 010E 7C0000            xcall _PWM8_5_WritePulseWidth
 0111                   .dbline 293
 0111           ;                       PWM8_6_WritePulseWidth(255);
 0111 50FF              mov A,-1
 0113 7C0000            xcall _PWM8_6_WritePulseWidth
 0116 20                pop X
 0117                   .dbline 294
 0117           ;               }
 0117 802C              xjmp L28
 0119           L27:
 0119                   .dbline 297
 0119           ;               
 0119           ; //            zËª∏„É¢„Éº„ÇøÈßÜÂãï
 0119           ;               else if((MyI2C_Motor.z_1 == 0)||(MyI2C_Motor.z_2 == 0)){
 0119 62D000            mov REG[0xd0],>_MyI2C_Motor
 011C 3C0400            cmp [_MyI2C_Motor+4],0
 011F A006              jz L35
 0121 3C0500            cmp [_MyI2C_Motor+5],0
 0124 B01F              jnz L31
 0126           L35:
 0126                   .dbline 299
 0126           ;                       
 0126           ;                       PRT2DR = port2data | (1 << 0);
 0126                   .dbline 299
 0126 5200              mov A,[X+0]
 0128 2901              or A,1
 012A 6008              mov REG[0x8],A
 012C                   .dbline 300
 012C           ;                       PRT1DR = port1data | (1 << 6);
 012C 5201              mov A,[X+1]
 012E 2940              or A,64
 0130 6004              mov REG[0x4],A
 0132                   .dbline 302
 0132           ;                       
 0132           ;                       PWM8_5_WritePulseWidth(MyI2C_Motor.z_1);
 0132 10                push X
 0133 62D000            mov REG[0xd0],>_MyI2C_Motor
 0136 5104              mov A,[_MyI2C_Motor+4]
 0138 7C0000            xcall _PWM8_5_WritePulseWidth
 013B                   .dbline 303
 013B           ;                       PWM8_6_WritePulseWidth(MyI2C_Motor.z_2);
 013B 62D000            mov REG[0xd0],>_MyI2C_Motor
 013E 5105              mov A,[_MyI2C_Motor+5]
 0140 7C0000            xcall _PWM8_6_WritePulseWidth
 0143 20                pop X
 0144                   .dbline 304
 0144           ;               }
 0144           L31:
 0144                   .dbline 305
 0144           ;               else {
 0144                   .dbline 306
 0144           ;               }
 0144           L32:
 0144           L28:
 0144                   .dbline 307
 0144           ;       }
 0144           L6:
 0144                   .dbline 243
 0144 8F00              xjmp L5
 0146           X0:
 0146                   .dbline -2
 0146           L4:
 0146 38FD              add SP,-3
 0148 20                pop X
 0149                   .dbline 0 ; func end
 0149 8FFF              jmp .
 014B                   .dbsym l pin_0_io 2 c
 014B                   .dbsym l port1data 1 c
 014B                   .dbsym l port2data 0 c
 014B                   .dbend
                        .area data(ram, con, rel)
 0000                   .dbfile C:\Users\MATSUD~1\Dropbox\äÓî’î«\ÉvÉçÉO~1\PSoC\Designer\DC_MOT~1\DC_MOT~1\main.c
 0000           _MyI2C_Motor::
 0000 000000000000      .byte 0,0,0,0,0,0
 0006                   .dbstruct 0 6 I2C_Motor
 0006                   .dbfield 0 x_1 c
 0006                   .dbfield 1 x_2 c
 0006                   .dbfield 2 y_1 c
 0006                   .dbfield 3 y_2 c
 0006                   .dbfield 4 z_1 c
 0006                   .dbfield 5 z_2 c
 0006                   .dbend
 0006                   .dbsym e MyI2C_Motor _MyI2C_Motor S[I2C_Motor]
