C51 COMPILER V9.03   PIN_1                                                                 07/19/2013 06:28:58 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE PIN_1
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Release\Pin_1.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\2.2\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\Gene
                    -rated_Source\PSoC3\Pin_1.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Release\Pin_1.lst) CD DB NOIP OT(8,S
                    -IZE) DF(NDEBUG) INCDIR(Generated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Release\Pin_1.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          /*******************************************************************************
   2          * File Name: Pin_1.c  
   3          * Version 1.90
   4          *
   5          * Description:
   6          *  This file contains API to enable firmware control of a Pins component.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions, 
  13          * disclaimers, and limitations in the end user license agreement accompanying 
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "cytypes.h"
  18          #include "Pin_1.h"
  19          
  20          
  21          /*******************************************************************************
  22          * Function Name: Pin_1_Write
  23          ********************************************************************************
  24          *
  25          * Summary:
  26          *  Assign a new value to the digital port's data output register.  
  27          *
  28          * Parameters:  
  29          *  prtValue:  The value to be assigned to the Digital Port. 
  30          *
  31          * Return: 
  32          *  None 
  33          *  
  34          *******************************************************************************/
  35          void Pin_1_Write(uint8 value) 
  36          {
  37   1          uint8 staticBits = (Pin_1_DR & (uint8)(~Pin_1_MASK));
  38   1          Pin_1_DR = staticBits | ((uint8)(value << Pin_1_SHIFT) & Pin_1_MASK);
  39   1      }
  40          
  41          
  42          /*******************************************************************************
  43          * Function Name: Pin_1_SetDriveMode
  44          ********************************************************************************
  45          *
  46          * Summary:
  47          *  Change the drive mode on the pins of the port.
  48          * 
  49          * Parameters:  
  50          *  mode:  Change the pins to this drive mode.
  51          *
  52          * Return: 
C51 COMPILER V9.03   PIN_1                                                                 07/19/2013 06:28:58 PAGE 2   

  53          *  None
  54          *
  55          *******************************************************************************/
  56          void Pin_1_SetDriveMode(uint8 mode) 
  57          {
  58   1              CyPins_SetPinDriveMode(Pin_1_0, mode);
  59   1      }
  60          
  61          
  62          /*******************************************************************************
  63          * Function Name: Pin_1_Read
  64          ********************************************************************************
  65          *
  66          * Summary:
  67          *  Read the current value on the pins of the Digital Port in right justified 
  68          *  form.
  69          *
  70          * Parameters:  
  71          *  None 
  72          *
  73          * Return: 
  74          *  Returns the current value of the Digital Port as a right justified number
  75          *  
  76          * Note:
  77          *  Macro Pin_1_ReadPS calls this function. 
  78          *  
  79          *******************************************************************************/
  80          uint8 Pin_1_Read(void) 
  81          {
  82   1          return (Pin_1_PS & Pin_1_MASK) >> Pin_1_SHIFT;
  83   1      }
  84          
  85          
  86          /*******************************************************************************
  87          * Function Name: Pin_1_ReadDataReg
  88          ********************************************************************************
  89          *
  90          * Summary:
  91          *  Read the current value assigned to a Digital Port's data output register
  92          *
  93          * Parameters:  
  94          *  None 
  95          *
  96          * Return: 
  97          *  Returns the current value assigned to the Digital Port's data output register
  98          *  
  99          *******************************************************************************/
 100          uint8 Pin_1_ReadDataReg(void) 
 101          {
 102   1          return (Pin_1_DR & Pin_1_MASK) >> Pin_1_SHIFT;
 103   1      }
 104          
 105          
 106          /* If Interrupts Are Enabled for this Pins component */ 
 107          #if defined(Pin_1_INTSTAT) 
              
                  /*******************************************************************************
                  * Function Name: Pin_1_ClearInterrupt
                  ********************************************************************************
                  *
                  * Summary:
                  *  Clears any active interrupts attached to port and returns the value of the 
C51 COMPILER V9.03   PIN_1                                                                 07/19/2013 06:28:58 PAGE 3   

                  *  interrupt status register.
                  *
                  * Parameters:  
                  *  None 
                  *
                  * Return: 
                  *  Returns the value of the interrupt status register
                  *  
                  *******************************************************************************/
                  uint8 Pin_1_ClearInterrupt(void) 
                  {
                      return (Pin_1_INTSTAT & Pin_1_MASK) >> Pin_1_SHIFT;
                  }
              
              #endif /* If Interrupts Are Enabled for this Pins component */ 
 130          
 131          
 132          /* [] END OF FILE */
C51 COMPILER V9.03   PIN_1                                                                 07/19/2013 06:28:58 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION _Pin_1_Write (BEGIN)
                                           ; SOURCE LINE # 35
;---- Variable 'value' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 36
                                           ; SOURCE LINE # 37
0000 905160            MOV     DPTR,#05160H
0003 E0                MOVX    A,@DPTR
0004 54FE              ANL     A,#0FEH
0006 FE                MOV     R6,A
;---- Variable 'staticBits' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 38
0007 EF                MOV     A,R7
0008 5401              ANL     A,#01H
000A 4E                ORL     A,R6
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 39
000C 22                RET     
             ; FUNCTION _Pin_1_Write (END)

             ; FUNCTION _Pin_1_SetDriveMode (BEGIN)
                                           ; SOURCE LINE # 56
;---- Variable 'mode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 57
                                           ; SOURCE LINE # 58
0000 EF                MOV     A,R7
0001 540E              ANL     A,#0EH
0003 FF                MOV     R7,A
0004 905030            MOV     DPTR,#05030H
0007 E0                MOVX    A,@DPTR
0008 54F1              ANL     A,#0F1H
000A 4F                ORL     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 59
000C 22                RET     
             ; FUNCTION _Pin_1_SetDriveMode (END)

             ; FUNCTION Pin_1_Read (BEGIN)
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
                                           ; SOURCE LINE # 82
0000 905161            MOV     DPTR,#05161H
0003 E0                MOVX    A,@DPTR
0004 5401              ANL     A,#01H
0006 FF                MOV     R7,A
                                           ; SOURCE LINE # 83
0007         ?C0003:
0007 22                RET     
             ; FUNCTION Pin_1_Read (END)

             ; FUNCTION Pin_1_ReadDataReg (BEGIN)
                                           ; SOURCE LINE # 100
                                           ; SOURCE LINE # 101
                                           ; SOURCE LINE # 102
0000 905160            MOV     DPTR,#05160H
0003 E0                MOVX    A,@DPTR
0004 5401              ANL     A,#01H
0006 FF                MOV     R7,A
                                           ; SOURCE LINE # 103
0007         ?C0004:
C51 COMPILER V9.03   PIN_1                                                                 07/19/2013 06:28:58 PAGE 5   

0007 22                RET     
             ; FUNCTION Pin_1_ReadDataReg (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     42    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
