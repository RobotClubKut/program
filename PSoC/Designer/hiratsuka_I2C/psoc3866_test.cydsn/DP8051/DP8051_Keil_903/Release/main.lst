C51 COMPILER V9.03   MAIN                                                                  07/27/2013 17:29:02 PAGE 1   


C51 COMPILER V9.03, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\DP8051\DP8051_Keil_903\Release\main.obj
COMPILER INVOKED BY: C:\Program Files\Cypress\PSoC Creator\2.2\PSoC Creator\import\keil\pk51\9.03\C51\BIN\c51.exe .\main
                    -.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051\DP8051_Keil_903\Release\main.lst) CD DB NOIP OT(8,SIZE) DF(NDEBUG) INCDIR(Ge
                    -nerated_Source\PSoC3) OJ(.\DP8051\DP8051_Keil_903\Release\main.obj)

line level    source

*** MESSAGE C286 IN LINE 0 OF (null): license limits optimization to level 5
   1          /* ========================================
   2           *
   3           * Copyright YOUR COMPANY, THE YEAR
   4           * All Rights Reserved
   5           * UNPUBLISHED, LICENSED SOFTWARE.
   6           *
   7           * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8           * WHICH IS THE PROPERTY OF your company.
   9           *
  10           * ========================================
  11          */
  12          #include <device.h>
  13          
  14          uint8 Ezi2c_master_write_buf(uint8 addr,uint8 data_addr,uint8* wrdata,uint8 cnt);
  15          uint8 Ezi2c_master_read_buf(uint8 addr,uint8 data_addr,uint8* redata,uint8 cnt);
  16          
  17          /*
  18          struct{
  19              uint8 m_status;
  20              uint8 s_status;
  21          }i2c_data;
  22          */
  23          
  24          void main()
  25          {
  26   1          uint8 i2c_data[3] = {5,5,6};
  27   1          uint8 i2c_data_r[2] = {0,0};
  28   1          uint8 status;
  29   1          
  30   1          /* Place your initialization/startup code here (e.g. MyInst_Start()) */
  31   1          Counter_1_Start();
  32   1          LCD_Char_1_Start();
  33   1          I2C_1_Start();
  34   1          LCD_Char_1_ClearDisplay();
  35   1          
  36   1          CyGlobalIntEnable; /* Uncomment this line to enable global interrupts. */
  37   1          /* Set position for string output to row - 0 column - 0 */
  38   1          LCD_Char_1_Position(0u, 0u);
  39   1          LCD_Char_1_PrintString("PSoC3 test");
  40   1          LCD_Char_1_Position(1u, 0u);
  41   1          LCD_Char_1_PrintString("Debug Start!");
  42   1          CyDelay(1000u);
  43   1          
  44   1          LCD_Char_1_ClearDisplay();
  45   1          
  46   1          I2C_1_MasterClearStatus();
  47   1          
  48   1          for(;;)
  49   1          {
  50   2              i2c_data[0]++;
  51   2              LCD_Char_1_Position(0u, 0u);
  52   2              LCD_Char_1_PrintString("now writing!");
C51 COMPILER V9.03   MAIN                                                                  07/27/2013 17:29:02 PAGE 2   

  53   2              status = Ezi2c_master_write_buf(8,0,i2c_data,1);
  54   2              status = Ezi2c_master_read_buf(8,3,i2c_data_r,2);
  55   2              LCD_Char_1_ClearDisplay();
  56   2              LCD_Char_1_Position(0u, 0u);
  57   2              LCD_Char_1_PrintString("x = ");
  58   2              LCD_Char_1_PrintInt8(i2c_data[0]);
  59   2              LCD_Char_1_PrintString("  t = ");
  60   2              LCD_Char_1_PrintInt16(i2c_data_r[1]+(i2c_data_r[0]*0x100));
  61   2              LCD_Char_1_Position(1u, 0u);
  62   2              LCD_Char_1_PrintString("status = ");
  63   2              LCD_Char_1_PrintInt8(status);
  64   2              
  65   2              
  66   2              
  67   2              CyDelay(250u);
  68   2          }
  69   1      }
  70          uint8 Ezi2c_master_write_buf(uint8 addr,uint8 data_addr,uint8* wrdata,uint8 cnt)
  71          {
  72   1          uint8 status;
  73   1          uint8 i;
  74   1          
  75   1          status = I2C_1_MasterSendStart(addr, I2C_1_WRITE_XFER_MODE);
  76   1          if(status == I2C_1_MSTR_NO_ERROR) /* Check if transfer completed without errors */
  77   1          {
  78   2              status = I2C_1_MasterWriteByte(data_addr);
  79   2              if(status != I2C_1_MSTR_NO_ERROR)
  80   2              {
  81   3                  I2C_1_MasterSendStop();
  82   3                  return status;
  83   3              }
  84   2              for(i=0; i < cnt; i++)
  85   2              {
  86   3                  status = I2C_1_MasterWriteByte(wrdata[i]);
  87   3                  if(status != I2C_1_MSTR_NO_ERROR)
  88   3                  {
  89   4                      break;
  90   4                  }
  91   3              }
  92   2          }
  93   1          I2C_1_MasterSendStop();
  94   1          return status;
  95   1      }
  96          uint8 Ezi2c_master_read_buf(uint8 addr,uint8 data_addr,uint8* redata,uint8 cnt)
  97          {
  98   1          uint8 status;
  99   1          uint8 i;
 100   1          status = I2C_1_MasterSendStart(addr, I2C_1_WRITE_XFER_MODE);
 101   1          if(status == I2C_1_MSTR_NO_ERROR) /* Check if transfer completed without errors */
 102   1          {
 103   2              status = I2C_1_MasterWriteByte(data_addr);
 104   2              if(status != I2C_1_MSTR_NO_ERROR)
 105   2              {
 106   3                  I2C_1_MasterSendStop();
 107   3                  return status;
 108   3              }
 109   2          }
 110   1          I2C_1_MasterSendStop();
 111   1          status = I2C_1_MasterSendStart(0x08, I2C_1_READ_XFER_MODE);
 112   1          if(status == I2C_1_MSTR_NO_ERROR) /* Check if transfer completed without errors */
 113   1          {
 114   2              //I2C_1_MasterReadByte(I2C_1_ACK_DATA);
C51 COMPILER V9.03   MAIN                                                                  07/27/2013 17:29:02 PAGE 3   

 115   2              for(i=0; i < cnt; i++)
 116   2              {
 117   3                  if(i < cnt )
 118   3                  {
 119   4                      redata[i] = I2C_1_MasterReadByte(I2C_1_ACK_DATA);
 120   4                  }
 121   3                  else
 122   3                  {
 123   4                      redata[i] = I2C_1_MasterReadByte(I2C_1_NAK_DATA);
 124   4                  }
 125   3              }
 126   2          }
 127   1          I2C_1_MasterSendStop(); /* Send Stop */
 128   1          return status;
 129   1      }
 130          /* [] END OF FILE */
C51 COMPILER V9.03   MAIN                                                                  07/27/2013 17:29:02 PAGE 4   

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION main (BEGIN)
                                           ; SOURCE LINE # 24
                                           ; SOURCE LINE # 25
                                           ; SOURCE LINE # 26
0000 7800        R     MOV     R0,#LOW i2c_data
0002 7C00        R     MOV     R4,#HIGH i2c_data
0004 7D01              MOV     R5,#01H
0006 7BFF              MOV     R3,#0FFH
0008 7A00        R     MOV     R2,#HIGH _?ix1000
000A 7900        R     MOV     R1,#LOW _?ix1000
000C 7E00              MOV     R6,#00H
000E 7F03              MOV     R7,#03H
0010 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 27
0013 7800        R     MOV     R0,#LOW i2c_data_r
0015 7C00        R     MOV     R4,#HIGH i2c_data_r
0017 7D01              MOV     R5,#01H
0019 7BFF              MOV     R3,#0FFH
001B 7A00        R     MOV     R2,#HIGH _?ix1001
001D 7900        R     MOV     R1,#LOW _?ix1001
001F 7E00              MOV     R6,#00H
0021 7F02              MOV     R7,#02H
0023 120000      E     LCALL   ?C?COPYAMD
                                           ; SOURCE LINE # 31
0026 120000      E     LCALL   Counter_1_Start
                                           ; SOURCE LINE # 32
0029 120000      E     LCALL   LCD_Char_1_Start
                                           ; SOURCE LINE # 33
002C 120000      E     LCALL   I2C_1_Start
                                           ; SOURCE LINE # 34
002F 7F01              MOV     R7,#01H
0031 120000      E     LCALL   _LCD_Char_1_WriteControl
                                           ; SOURCE LINE # 36
0034 D2AF              SETB    EA
0036 9044F4            MOV     DPTR,#044F4H
0039 74FD              MOV     A,#0FDH
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 38
003C E4                CLR     A
003D FD                MOV     R5,A
003E FF                MOV     R7,A
003F 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 39
0042 7BFF              MOV     R3,#0FFH
0044 7A00        R     MOV     R2,#HIGH ?SC_0
0046 7900        R     MOV     R1,#LOW ?SC_0
0048 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 40
004B E4                CLR     A
004C FD                MOV     R5,A
004D 7F01              MOV     R7,#01H
004F 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 41
0052 7BFF              MOV     R3,#0FFH
0054 7A00        R     MOV     R2,#HIGH ?SC_11
0056 7900        R     MOV     R1,#LOW ?SC_11
0058 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 42
005B E4                CLR     A
C51 COMPILER V9.03   MAIN                                                                  07/27/2013 17:29:02 PAGE 5   

005C 7FE8              MOV     R7,#0E8H
005E 7E03              MOV     R6,#03H
0060 FD                MOV     R5,A
0061 FC                MOV     R4,A
0062 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 44
0065 7F01              MOV     R7,#01H
0067 120000      E     LCALL   _LCD_Char_1_WriteControl
                                           ; SOURCE LINE # 46
006A 120000      E     LCALL   I2C_1_MasterClearStatus
                                           ; SOURCE LINE # 48
006D         ?C0001:
                                           ; SOURCE LINE # 49
                                           ; SOURCE LINE # 50
006D 900000      R     MOV     DPTR,#i2c_data
0070 E0                MOVX    A,@DPTR
0071 04                INC     A
0072 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 51
0073 E4                CLR     A
0074 FD                MOV     R5,A
0075 FF                MOV     R7,A
0076 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 52
0079 7BFF              MOV     R3,#0FFH
007B 7A00        R     MOV     R2,#HIGH ?SC_24
007D 7900        R     MOV     R1,#LOW ?SC_24
007F 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 53
0082 7B01              MOV     R3,#01H
0084 7A00        R     MOV     R2,#HIGH i2c_data
0086 7900        R     MOV     R1,#LOW i2c_data
0088 900000      R     MOV     DPTR,#?_Ezi2c_master_write_buf?BYTE+05H
008B 7401              MOV     A,#01H
008D F0                MOVX    @DPTR,A
008E E4                CLR     A
008F FD                MOV     R5,A
0090 7F08              MOV     R7,#08H
0092 120000      R     LCALL   _Ezi2c_master_write_buf
0095 900000      R     MOV     DPTR,#status
0098 EF                MOV     A,R7
0099 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 54
009A 7B01              MOV     R3,#01H
009C 7A00        R     MOV     R2,#HIGH i2c_data_r
009E 7900        R     MOV     R1,#LOW i2c_data_r
00A0 900000      R     MOV     DPTR,#?_Ezi2c_master_read_buf?BYTE+05H
00A3 7402              MOV     A,#02H
00A5 F0                MOVX    @DPTR,A
00A6 7D03              MOV     R5,#03H
00A8 7F08              MOV     R7,#08H
00AA 120000      R     LCALL   _Ezi2c_master_read_buf
00AD 900000      R     MOV     DPTR,#status
00B0 EF                MOV     A,R7
00B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 55
00B2 7F01              MOV     R7,#01H
00B4 120000      E     LCALL   _LCD_Char_1_WriteControl
                                           ; SOURCE LINE # 56
00B7 E4                CLR     A
00B8 FD                MOV     R5,A
00B9 FF                MOV     R7,A
C51 COMPILER V9.03   MAIN                                                                  07/27/2013 17:29:02 PAGE 6   

00BA 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 57
00BD 7BFF              MOV     R3,#0FFH
00BF 7A00        R     MOV     R2,#HIGH ?SC_37
00C1 7900        R     MOV     R1,#LOW ?SC_37
00C3 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 58
00C6 900000      R     MOV     DPTR,#i2c_data
00C9 E0                MOVX    A,@DPTR
00CA FF                MOV     R7,A
00CB 120000      E     LCALL   _LCD_Char_1_PrintInt8
                                           ; SOURCE LINE # 59
00CE 7BFF              MOV     R3,#0FFH
00D0 7A00        R     MOV     R2,#HIGH ?SC_42
00D2 7900        R     MOV     R1,#LOW ?SC_42
00D4 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 60
00D7 900000      R     MOV     DPTR,#i2c_data_r
00DA E0                MOVX    A,@DPTR
00DB FE                MOV     R6,A
00DC A3                INC     DPTR
00DD E0                MOVX    A,@DPTR
00DE 7C00              MOV     R4,#00H
00E0 2400              ADD     A,#00H
00E2 FF                MOV     R7,A
00E3 EC                MOV     A,R4
00E4 3E                ADDC    A,R6
00E5 FE                MOV     R6,A
00E6 120000      E     LCALL   _LCD_Char_1_PrintInt16
                                           ; SOURCE LINE # 61
00E9 E4                CLR     A
00EA FD                MOV     R5,A
00EB 7F01              MOV     R7,#01H
00ED 120000      E     LCALL   _LCD_Char_1_Position
                                           ; SOURCE LINE # 62
00F0 7BFF              MOV     R3,#0FFH
00F2 7A00        R     MOV     R2,#HIGH ?SC_49
00F4 7900        R     MOV     R1,#LOW ?SC_49
00F6 120000      E     LCALL   _LCD_Char_1_PrintString
                                           ; SOURCE LINE # 63
00F9 900000      R     MOV     DPTR,#status
00FC E0                MOVX    A,@DPTR
00FD FF                MOV     R7,A
00FE 120000      E     LCALL   _LCD_Char_1_PrintInt8
                                           ; SOURCE LINE # 67
0101 E4                CLR     A
0102 7FFA              MOV     R7,#0FAH
0104 FE                MOV     R6,A
0105 FD                MOV     R5,A
0106 FC                MOV     R4,A
0107 120000      E     LCALL   _?CyDelay
                                           ; SOURCE LINE # 68
010A 020000      R     LJMP    ?C0001
010D 22                RET     
             ; FUNCTION main (END)

             ; FUNCTION _Ezi2c_master_write_buf (BEGIN)
                                           ; SOURCE LINE # 70
0000 900000      R     MOV     DPTR,#data_addr
0003 ED                MOV     A,R5
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
C51 COMPILER V9.03   MAIN                                                                  07/27/2013 17:29:02 PAGE 7   

0006 120000      E     LCALL   ?C?PSTXDATA
;---- Variable 'addr' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 71
                                           ; SOURCE LINE # 75
0009 E4                CLR     A
000A FD                MOV     R5,A
000B 120000      E     LCALL   _I2C_1_MasterSendStart
000E 900000      R     MOV     DPTR,#status
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 76
0013 704D              JNZ     ?C0004
                                           ; SOURCE LINE # 77
                                           ; SOURCE LINE # 78
0015 900000      R     MOV     DPTR,#data_addr
0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A 120000      E     LCALL   _I2C_1_MasterWriteByte
001D 900000      R     MOV     DPTR,#status
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 79
0022 6009              JZ      ?C0005
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 81
0024 120000      E     LCALL   I2C_1_MasterSendStop
                                           ; SOURCE LINE # 82
0027 900000      R     MOV     DPTR,#status
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C 22                RET     
                                           ; SOURCE LINE # 83
002D         ?C0005:
                                           ; SOURCE LINE # 84
002D E4                CLR     A
002E 900000      R     MOV     DPTR,#i
0031 F0                MOVX    @DPTR,A
0032         ?C0007:
0032 900000      R     MOV     DPTR,#cnt
0035 E0                MOVX    A,@DPTR
0036 FF                MOV     R7,A
0037 900000      R     MOV     DPTR,#i
003A E0                MOVX    A,@DPTR
003B FE                MOV     R6,A
003C C3                CLR     C
003D 9F                SUBB    A,R7
003E 5022              JNC     ?C0004
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 86
0040 900000      R     MOV     DPTR,#wrdata
0043 120000      E     LCALL   ?C?PLDXDATA
0046 E9                MOV     A,R1
0047 2E                ADD     A,R6
0048 F9                MOV     R1,A
0049 E4                CLR     A
004A 3A                ADDC    A,R2
004B FA                MOV     R2,A
004C 120000      E     LCALL   ?C?CLDPTR
004F FF                MOV     R7,A
0050 120000      E     LCALL   _I2C_1_MasterWriteByte
0053 900000      R     MOV     DPTR,#status
0056 EF                MOV     A,R7
C51 COMPILER V9.03   MAIN                                                                  07/27/2013 17:29:02 PAGE 8   

0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 87
0058 7008              JNZ     ?C0004
                                           ; SOURCE LINE # 88
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
005A         ?C0010:
                                           ; SOURCE LINE # 91
005A         ?C0009:
005A 900000      R     MOV     DPTR,#i
005D E0                MOVX    A,@DPTR
005E 04                INC     A
005F F0                MOVX    @DPTR,A
0060 80D0              SJMP    ?C0007
                                           ; SOURCE LINE # 92
0062         ?C0004:
                                           ; SOURCE LINE # 93
0062 120000      E     LCALL   I2C_1_MasterSendStop
                                           ; SOURCE LINE # 94
0065 900000      R     MOV     DPTR,#status
0068 E0                MOVX    A,@DPTR
0069 FF                MOV     R7,A
                                           ; SOURCE LINE # 95
006A         ?C0006:
006A 22                RET     
             ; FUNCTION _Ezi2c_master_write_buf (END)

             ; FUNCTION _Ezi2c_master_read_buf (BEGIN)
                                           ; SOURCE LINE # 96
0000 900000      R     MOV     DPTR,#data_addr
0003 ED                MOV     A,R5
0004 F0                MOVX    @DPTR,A
0005 A3                INC     DPTR
0006 120000      E     LCALL   ?C?PSTXDATA
;---- Variable 'addr' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 97
                                           ; SOURCE LINE # 100
0009 E4                CLR     A
000A FD                MOV     R5,A
000B 120000      E     LCALL   _I2C_1_MasterSendStart
000E 900000      R     MOV     DPTR,#status
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 101
0013 7018              JNZ     ?C0011
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 103
0015 900000      R     MOV     DPTR,#data_addr
0018 E0                MOVX    A,@DPTR
0019 FF                MOV     R7,A
001A 120000      E     LCALL   _I2C_1_MasterWriteByte
001D 900000      R     MOV     DPTR,#status
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 104
0022 6009              JZ      ?C0011
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 106
0024 120000      E     LCALL   I2C_1_MasterSendStop
                                           ; SOURCE LINE # 107
0027 900000      R     MOV     DPTR,#status
002A E0                MOVX    A,@DPTR
C51 COMPILER V9.03   MAIN                                                                  07/27/2013 17:29:02 PAGE 9   

002B FF                MOV     R7,A
002C 22                RET     
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
002D         ?C0011:
                                           ; SOURCE LINE # 110
002D 120000      E     LCALL   I2C_1_MasterSendStop
                                           ; SOURCE LINE # 111
0030 7D01              MOV     R5,#01H
0032 7F08              MOV     R7,#08H
0034 120000      E     LCALL   _I2C_1_MasterSendStart
0037 900000      R     MOV     DPTR,#status
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 112
003C 704F              JNZ     ?C0014
                                           ; SOURCE LINE # 113
                                           ; SOURCE LINE # 115
003E A3                INC     DPTR
003F F0                MOVX    @DPTR,A
0040         ?C0015:
0040 900000      R     MOV     DPTR,#cnt
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
0045 900000      R     MOV     DPTR,#i
0048 E0                MOVX    A,@DPTR
0049 FE                MOV     R6,A
004A C3                CLR     C
004B 9F                SUBB    A,R7
004C 503F              JNC     ?C0014
                                           ; SOURCE LINE # 116
                                           ; SOURCE LINE # 117
004E EE                MOV     A,R6
004F C3                CLR     C
0050 9F                SUBB    A,R7
0051 501A              JNC     ?C0018
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
0053 7F01              MOV     R7,#01H
0055 120000      E     LCALL   _I2C_1_MasterReadByte
0058 900000      R     MOV     DPTR,#redata
005B 120000      E     LCALL   ?C?PLDXDATA
005E 900000      R     MOV     DPTR,#i
0061 E0                MOVX    A,@DPTR
0062 29                ADD     A,R1
0063 F9                MOV     R1,A
0064 E4                CLR     A
0065 3A                ADDC    A,R2
0066 FA                MOV     R2,A
0067 EF                MOV     A,R7
0068 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 120
006B 8018              SJMP    ?C0017
006D         ?C0018:
                                           ; SOURCE LINE # 122
                                           ; SOURCE LINE # 123
006D E4                CLR     A
006E FF                MOV     R7,A
006F 120000      E     LCALL   _I2C_1_MasterReadByte
0072 900000      R     MOV     DPTR,#redata
0075 120000      E     LCALL   ?C?PLDXDATA
0078 900000      R     MOV     DPTR,#i
C51 COMPILER V9.03   MAIN                                                                  07/27/2013 17:29:02 PAGE 10  

007B E0                MOVX    A,@DPTR
007C 29                ADD     A,R1
007D F9                MOV     R1,A
007E E4                CLR     A
007F 3A                ADDC    A,R2
0080 FA                MOV     R2,A
0081 EF                MOV     A,R7
0082 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 124
                                           ; SOURCE LINE # 125
0085         ?C0017:
0085 900000      R     MOV     DPTR,#i
0088 E0                MOVX    A,@DPTR
0089 04                INC     A
008A F0                MOVX    @DPTR,A
008B 80B3              SJMP    ?C0015
                                           ; SOURCE LINE # 126
008D         ?C0014:
                                           ; SOURCE LINE # 127
008D 120000      E     LCALL   I2C_1_MasterSendStop
                                           ; SOURCE LINE # 128
0090 900000      R     MOV     DPTR,#status
0093 E0                MOVX    A,@DPTR
0094 FF                MOV     R7,A
                                           ; SOURCE LINE # 129
0095         ?C0013:
0095 22                RET     
             ; FUNCTION _Ezi2c_master_read_buf (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    527    ----
   CONSTANT SIZE    =     64    ----
   XDATA SIZE       =   ----      22
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
