/******************************************************************************
*  Generated by PSoC Designer 5.4.2946
******************************************************************************/
#include <m8c.h>
// sv1 address and mask defines
#pragma	ioport	sv1_Data_ADDR:	0x0
BYTE			sv1_Data_ADDR;
#pragma	ioport	sv1_DriveMode_0_ADDR:	0x100
BYTE			sv1_DriveMode_0_ADDR;
#pragma	ioport	sv1_DriveMode_1_ADDR:	0x101
BYTE			sv1_DriveMode_1_ADDR;
#pragma	ioport	sv1_DriveMode_2_ADDR:	0x3
BYTE			sv1_DriveMode_2_ADDR;
#pragma	ioport	sv1_GlobalSelect_ADDR:	0x2
BYTE			sv1_GlobalSelect_ADDR;
#pragma	ioport	sv1_IntCtrl_0_ADDR:	0x102
BYTE			sv1_IntCtrl_0_ADDR;
#pragma	ioport	sv1_IntCtrl_1_ADDR:	0x103
BYTE			sv1_IntCtrl_1_ADDR;
#pragma	ioport	sv1_IntEn_ADDR:	0x1
BYTE			sv1_IntEn_ADDR;
#define sv1_MASK 0x1
// sv2 address and mask defines
#pragma	ioport	sv2_Data_ADDR:	0x0
BYTE			sv2_Data_ADDR;
#pragma	ioport	sv2_DriveMode_0_ADDR:	0x100
BYTE			sv2_DriveMode_0_ADDR;
#pragma	ioport	sv2_DriveMode_1_ADDR:	0x101
BYTE			sv2_DriveMode_1_ADDR;
#pragma	ioport	sv2_DriveMode_2_ADDR:	0x3
BYTE			sv2_DriveMode_2_ADDR;
#pragma	ioport	sv2_GlobalSelect_ADDR:	0x2
BYTE			sv2_GlobalSelect_ADDR;
#pragma	ioport	sv2_IntCtrl_0_ADDR:	0x102
BYTE			sv2_IntCtrl_0_ADDR;
#pragma	ioport	sv2_IntCtrl_1_ADDR:	0x103
BYTE			sv2_IntCtrl_1_ADDR;
#pragma	ioport	sv2_IntEn_ADDR:	0x1
BYTE			sv2_IntEn_ADDR;
#define sv2_MASK 0x2
// mmdownPWM address and mask defines
#pragma	ioport	mmdownPWM_Data_ADDR:	0x0
BYTE			mmdownPWM_Data_ADDR;
#pragma	ioport	mmdownPWM_DriveMode_0_ADDR:	0x100
BYTE			mmdownPWM_DriveMode_0_ADDR;
#pragma	ioport	mmdownPWM_DriveMode_1_ADDR:	0x101
BYTE			mmdownPWM_DriveMode_1_ADDR;
#pragma	ioport	mmdownPWM_DriveMode_2_ADDR:	0x3
BYTE			mmdownPWM_DriveMode_2_ADDR;
#pragma	ioport	mmdownPWM_GlobalSelect_ADDR:	0x2
BYTE			mmdownPWM_GlobalSelect_ADDR;
#pragma	ioport	mmdownPWM_IntCtrl_0_ADDR:	0x102
BYTE			mmdownPWM_IntCtrl_0_ADDR;
#pragma	ioport	mmdownPWM_IntCtrl_1_ADDR:	0x103
BYTE			mmdownPWM_IntCtrl_1_ADDR;
#pragma	ioport	mmdownPWM_IntEn_ADDR:	0x1
BYTE			mmdownPWM_IntEn_ADDR;
#define mmdownPWM_MASK 0x4
// mmupPWM address and mask defines
#pragma	ioport	mmupPWM_Data_ADDR:	0x0
BYTE			mmupPWM_Data_ADDR;
#pragma	ioport	mmupPWM_DriveMode_0_ADDR:	0x100
BYTE			mmupPWM_DriveMode_0_ADDR;
#pragma	ioport	mmupPWM_DriveMode_1_ADDR:	0x101
BYTE			mmupPWM_DriveMode_1_ADDR;
#pragma	ioport	mmupPWM_DriveMode_2_ADDR:	0x3
BYTE			mmupPWM_DriveMode_2_ADDR;
#pragma	ioport	mmupPWM_GlobalSelect_ADDR:	0x2
BYTE			mmupPWM_GlobalSelect_ADDR;
#pragma	ioport	mmupPWM_IntCtrl_0_ADDR:	0x102
BYTE			mmupPWM_IntCtrl_0_ADDR;
#pragma	ioport	mmupPWM_IntCtrl_1_ADDR:	0x103
BYTE			mmupPWM_IntCtrl_1_ADDR;
#pragma	ioport	mmupPWM_IntEn_ADDR:	0x1
BYTE			mmupPWM_IntEn_ADDR;
#define mmupPWM_MASK 0x8
// Port04 address and mask defines
#pragma	ioport	Port04_Data_ADDR:	0x0
BYTE			Port04_Data_ADDR;
#pragma	ioport	Port04_DriveMode_0_ADDR:	0x100
BYTE			Port04_DriveMode_0_ADDR;
#pragma	ioport	Port04_DriveMode_1_ADDR:	0x101
BYTE			Port04_DriveMode_1_ADDR;
#pragma	ioport	Port04_DriveMode_2_ADDR:	0x3
BYTE			Port04_DriveMode_2_ADDR;
#pragma	ioport	Port04_GlobalSelect_ADDR:	0x2
BYTE			Port04_GlobalSelect_ADDR;
#pragma	ioport	Port04_IntCtrl_0_ADDR:	0x102
BYTE			Port04_IntCtrl_0_ADDR;
#pragma	ioport	Port04_IntCtrl_1_ADDR:	0x103
BYTE			Port04_IntCtrl_1_ADDR;
#pragma	ioport	Port04_IntEn_ADDR:	0x1
BYTE			Port04_IntEn_ADDR;
#define Port04_MASK 0x10
// Port05 address and mask defines
#pragma	ioport	Port05_Data_ADDR:	0x0
BYTE			Port05_Data_ADDR;
#pragma	ioport	Port05_DriveMode_0_ADDR:	0x100
BYTE			Port05_DriveMode_0_ADDR;
#pragma	ioport	Port05_DriveMode_1_ADDR:	0x101
BYTE			Port05_DriveMode_1_ADDR;
#pragma	ioport	Port05_DriveMode_2_ADDR:	0x3
BYTE			Port05_DriveMode_2_ADDR;
#pragma	ioport	Port05_GlobalSelect_ADDR:	0x2
BYTE			Port05_GlobalSelect_ADDR;
#pragma	ioport	Port05_IntCtrl_0_ADDR:	0x102
BYTE			Port05_IntCtrl_0_ADDR;
#pragma	ioport	Port05_IntCtrl_1_ADDR:	0x103
BYTE			Port05_IntCtrl_1_ADDR;
#pragma	ioport	Port05_IntEn_ADDR:	0x1
BYTE			Port05_IntEn_ADDR;
#define Port05_MASK 0x20
// mzdownV address and mask defines
#pragma	ioport	mzdownV_Data_ADDR:	0x4
BYTE			mzdownV_Data_ADDR;
#pragma	ioport	mzdownV_DriveMode_0_ADDR:	0x104
BYTE			mzdownV_DriveMode_0_ADDR;
#pragma	ioport	mzdownV_DriveMode_1_ADDR:	0x105
BYTE			mzdownV_DriveMode_1_ADDR;
#pragma	ioport	mzdownV_DriveMode_2_ADDR:	0x7
BYTE			mzdownV_DriveMode_2_ADDR;
#pragma	ioport	mzdownV_GlobalSelect_ADDR:	0x6
BYTE			mzdownV_GlobalSelect_ADDR;
#pragma	ioport	mzdownV_IntCtrl_0_ADDR:	0x106
BYTE			mzdownV_IntCtrl_0_ADDR;
#pragma	ioport	mzdownV_IntCtrl_1_ADDR:	0x107
BYTE			mzdownV_IntCtrl_1_ADDR;
#pragma	ioport	mzdownV_IntEn_ADDR:	0x5
BYTE			mzdownV_IntEn_ADDR;
#define mzdownV_MASK 0x1
// mzupV address and mask defines
#pragma	ioport	mzupV_Data_ADDR:	0x4
BYTE			mzupV_Data_ADDR;
#pragma	ioport	mzupV_DriveMode_0_ADDR:	0x104
BYTE			mzupV_DriveMode_0_ADDR;
#pragma	ioport	mzupV_DriveMode_1_ADDR:	0x105
BYTE			mzupV_DriveMode_1_ADDR;
#pragma	ioport	mzupV_DriveMode_2_ADDR:	0x7
BYTE			mzupV_DriveMode_2_ADDR;
#pragma	ioport	mzupV_GlobalSelect_ADDR:	0x6
BYTE			mzupV_GlobalSelect_ADDR;
#pragma	ioport	mzupV_IntCtrl_0_ADDR:	0x106
BYTE			mzupV_IntCtrl_0_ADDR;
#pragma	ioport	mzupV_IntCtrl_1_ADDR:	0x107
BYTE			mzupV_IntCtrl_1_ADDR;
#pragma	ioport	mzupV_IntEn_ADDR:	0x5
BYTE			mzupV_IntEn_ADDR;
#define mzupV_MASK 0x4
// Port14 address and mask defines
#pragma	ioport	Port14_Data_ADDR:	0x4
BYTE			Port14_Data_ADDR;
#pragma	ioport	Port14_DriveMode_0_ADDR:	0x104
BYTE			Port14_DriveMode_0_ADDR;
#pragma	ioport	Port14_DriveMode_1_ADDR:	0x105
BYTE			Port14_DriveMode_1_ADDR;
#pragma	ioport	Port14_DriveMode_2_ADDR:	0x7
BYTE			Port14_DriveMode_2_ADDR;
#pragma	ioport	Port14_GlobalSelect_ADDR:	0x6
BYTE			Port14_GlobalSelect_ADDR;
#pragma	ioport	Port14_IntCtrl_0_ADDR:	0x106
BYTE			Port14_IntCtrl_0_ADDR;
#pragma	ioport	Port14_IntCtrl_1_ADDR:	0x107
BYTE			Port14_IntCtrl_1_ADDR;
#pragma	ioport	Port14_IntEn_ADDR:	0x5
BYTE			Port14_IntEn_ADDR;
#define Port14_MASK 0x10
// EzI2Cs_1SDA address and mask defines
#pragma	ioport	EzI2Cs_1SDA_Data_ADDR:	0x4
BYTE			EzI2Cs_1SDA_Data_ADDR;
#pragma	ioport	EzI2Cs_1SDA_DriveMode_0_ADDR:	0x104
BYTE			EzI2Cs_1SDA_DriveMode_0_ADDR;
#pragma	ioport	EzI2Cs_1SDA_DriveMode_1_ADDR:	0x105
BYTE			EzI2Cs_1SDA_DriveMode_1_ADDR;
#pragma	ioport	EzI2Cs_1SDA_DriveMode_2_ADDR:	0x7
BYTE			EzI2Cs_1SDA_DriveMode_2_ADDR;
#pragma	ioport	EzI2Cs_1SDA_GlobalSelect_ADDR:	0x6
BYTE			EzI2Cs_1SDA_GlobalSelect_ADDR;
#pragma	ioport	EzI2Cs_1SDA_IntCtrl_0_ADDR:	0x106
BYTE			EzI2Cs_1SDA_IntCtrl_0_ADDR;
#pragma	ioport	EzI2Cs_1SDA_IntCtrl_1_ADDR:	0x107
BYTE			EzI2Cs_1SDA_IntCtrl_1_ADDR;
#pragma	ioport	EzI2Cs_1SDA_IntEn_ADDR:	0x5
BYTE			EzI2Cs_1SDA_IntEn_ADDR;
#define EzI2Cs_1SDA_MASK 0x20
// Port16 address and mask defines
#pragma	ioport	Port16_Data_ADDR:	0x4
BYTE			Port16_Data_ADDR;
#pragma	ioport	Port16_DriveMode_0_ADDR:	0x104
BYTE			Port16_DriveMode_0_ADDR;
#pragma	ioport	Port16_DriveMode_1_ADDR:	0x105
BYTE			Port16_DriveMode_1_ADDR;
#pragma	ioport	Port16_DriveMode_2_ADDR:	0x7
BYTE			Port16_DriveMode_2_ADDR;
#pragma	ioport	Port16_GlobalSelect_ADDR:	0x6
BYTE			Port16_GlobalSelect_ADDR;
#pragma	ioport	Port16_IntCtrl_0_ADDR:	0x106
BYTE			Port16_IntCtrl_0_ADDR;
#pragma	ioport	Port16_IntCtrl_1_ADDR:	0x107
BYTE			Port16_IntCtrl_1_ADDR;
#pragma	ioport	Port16_IntEn_ADDR:	0x5
BYTE			Port16_IntEn_ADDR;
#define Port16_MASK 0x40
// EzI2Cs_1SCL address and mask defines
#pragma	ioport	EzI2Cs_1SCL_Data_ADDR:	0x4
BYTE			EzI2Cs_1SCL_Data_ADDR;
#pragma	ioport	EzI2Cs_1SCL_DriveMode_0_ADDR:	0x104
BYTE			EzI2Cs_1SCL_DriveMode_0_ADDR;
#pragma	ioport	EzI2Cs_1SCL_DriveMode_1_ADDR:	0x105
BYTE			EzI2Cs_1SCL_DriveMode_1_ADDR;
#pragma	ioport	EzI2Cs_1SCL_DriveMode_2_ADDR:	0x7
BYTE			EzI2Cs_1SCL_DriveMode_2_ADDR;
#pragma	ioport	EzI2Cs_1SCL_GlobalSelect_ADDR:	0x6
BYTE			EzI2Cs_1SCL_GlobalSelect_ADDR;
#pragma	ioport	EzI2Cs_1SCL_IntCtrl_0_ADDR:	0x106
BYTE			EzI2Cs_1SCL_IntCtrl_0_ADDR;
#pragma	ioport	EzI2Cs_1SCL_IntCtrl_1_ADDR:	0x107
BYTE			EzI2Cs_1SCL_IntCtrl_1_ADDR;
#pragma	ioport	EzI2Cs_1SCL_IntEn_ADDR:	0x5
BYTE			EzI2Cs_1SCL_IntEn_ADDR;
#define EzI2Cs_1SCL_MASK 0x80
// mmdownV address and mask defines
#pragma	ioport	mmdownV_Data_ADDR:	0x8
BYTE			mmdownV_Data_ADDR;
#pragma	ioport	mmdownV_DriveMode_0_ADDR:	0x108
BYTE			mmdownV_DriveMode_0_ADDR;
#pragma	ioport	mmdownV_DriveMode_1_ADDR:	0x109
BYTE			mmdownV_DriveMode_1_ADDR;
#pragma	ioport	mmdownV_DriveMode_2_ADDR:	0xb
BYTE			mmdownV_DriveMode_2_ADDR;
#pragma	ioport	mmdownV_GlobalSelect_ADDR:	0xa
BYTE			mmdownV_GlobalSelect_ADDR;
#pragma	ioport	mmdownV_IntCtrl_0_ADDR:	0x10a
BYTE			mmdownV_IntCtrl_0_ADDR;
#pragma	ioport	mmdownV_IntCtrl_1_ADDR:	0x10b
BYTE			mmdownV_IntCtrl_1_ADDR;
#pragma	ioport	mmdownV_IntEn_ADDR:	0x9
BYTE			mmdownV_IntEn_ADDR;
#define mmdownV_MASK 0x1
// mmupV address and mask defines
#pragma	ioport	mmupV_Data_ADDR:	0x8
BYTE			mmupV_Data_ADDR;
#pragma	ioport	mmupV_DriveMode_0_ADDR:	0x108
BYTE			mmupV_DriveMode_0_ADDR;
#pragma	ioport	mmupV_DriveMode_1_ADDR:	0x109
BYTE			mmupV_DriveMode_1_ADDR;
#pragma	ioport	mmupV_DriveMode_2_ADDR:	0xb
BYTE			mmupV_DriveMode_2_ADDR;
#pragma	ioport	mmupV_GlobalSelect_ADDR:	0xa
BYTE			mmupV_GlobalSelect_ADDR;
#pragma	ioport	mmupV_IntCtrl_0_ADDR:	0x10a
BYTE			mmupV_IntCtrl_0_ADDR;
#pragma	ioport	mmupV_IntCtrl_1_ADDR:	0x10b
BYTE			mmupV_IntCtrl_1_ADDR;
#pragma	ioport	mmupV_IntEn_ADDR:	0x9
BYTE			mmupV_IntEn_ADDR;
#define mmupV_MASK 0x4
// Port23 address and mask defines
#pragma	ioport	Port23_Data_ADDR:	0x8
BYTE			Port23_Data_ADDR;
#pragma	ioport	Port23_DriveMode_0_ADDR:	0x108
BYTE			Port23_DriveMode_0_ADDR;
#pragma	ioport	Port23_DriveMode_1_ADDR:	0x109
BYTE			Port23_DriveMode_1_ADDR;
#pragma	ioport	Port23_DriveMode_2_ADDR:	0xb
BYTE			Port23_DriveMode_2_ADDR;
#pragma	ioport	Port23_GlobalSelect_ADDR:	0xa
BYTE			Port23_GlobalSelect_ADDR;
#pragma	ioport	Port23_IntCtrl_0_ADDR:	0x10a
BYTE			Port23_IntCtrl_0_ADDR;
#pragma	ioport	Port23_IntCtrl_1_ADDR:	0x10b
BYTE			Port23_IntCtrl_1_ADDR;
#pragma	ioport	Port23_IntEn_ADDR:	0x9
BYTE			Port23_IntEn_ADDR;
#define Port23_MASK 0x8
// mzdownPWM address and mask defines
#pragma	ioport	mzdownPWM_Data_ADDR:	0x8
BYTE			mzdownPWM_Data_ADDR;
#pragma	ioport	mzdownPWM_DriveMode_0_ADDR:	0x108
BYTE			mzdownPWM_DriveMode_0_ADDR;
#pragma	ioport	mzdownPWM_DriveMode_1_ADDR:	0x109
BYTE			mzdownPWM_DriveMode_1_ADDR;
#pragma	ioport	mzdownPWM_DriveMode_2_ADDR:	0xb
BYTE			mzdownPWM_DriveMode_2_ADDR;
#pragma	ioport	mzdownPWM_GlobalSelect_ADDR:	0xa
BYTE			mzdownPWM_GlobalSelect_ADDR;
#pragma	ioport	mzdownPWM_IntCtrl_0_ADDR:	0x10a
BYTE			mzdownPWM_IntCtrl_0_ADDR;
#pragma	ioport	mzdownPWM_IntCtrl_1_ADDR:	0x10b
BYTE			mzdownPWM_IntCtrl_1_ADDR;
#pragma	ioport	mzdownPWM_IntEn_ADDR:	0x9
BYTE			mzdownPWM_IntEn_ADDR;
#define mzdownPWM_MASK 0x10
// mzupPWM address and mask defines
#pragma	ioport	mzupPWM_Data_ADDR:	0x8
BYTE			mzupPWM_Data_ADDR;
#pragma	ioport	mzupPWM_DriveMode_0_ADDR:	0x108
BYTE			mzupPWM_DriveMode_0_ADDR;
#pragma	ioport	mzupPWM_DriveMode_1_ADDR:	0x109
BYTE			mzupPWM_DriveMode_1_ADDR;
#pragma	ioport	mzupPWM_DriveMode_2_ADDR:	0xb
BYTE			mzupPWM_DriveMode_2_ADDR;
#pragma	ioport	mzupPWM_GlobalSelect_ADDR:	0xa
BYTE			mzupPWM_GlobalSelect_ADDR;
#pragma	ioport	mzupPWM_IntCtrl_0_ADDR:	0x10a
BYTE			mzupPWM_IntCtrl_0_ADDR;
#pragma	ioport	mzupPWM_IntCtrl_1_ADDR:	0x10b
BYTE			mzupPWM_IntCtrl_1_ADDR;
#pragma	ioport	mzupPWM_IntEn_ADDR:	0x9
BYTE			mzupPWM_IntEn_ADDR;
#define mzupPWM_MASK 0x20
